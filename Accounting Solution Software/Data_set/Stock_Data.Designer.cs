//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Accounting_Solution_Software.Data_set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Stock_Data")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Stock_Data : global::System.Data.DataSet {
        
        private StockGudangDataTable tableStockGudang;
        
        private GudangDataTable tableGudang;
        
        private StockOpnameDataTable tableStockOpname;
        
        private view_stock_gudangDataTable tableview_stock_gudang;
        
        private stockMovementDataTable tablestockMovement;
        
        private SatuanDataTable tableSatuan;
        
        private StockDataTable tableStock;
        
        private view_Total_Jumlah_Stock_Per_KelompokDataTable tableview_Total_Jumlah_Stock_Per_Kelompok;
        
        private KelompokProdukDataTable tableKelompokProduk;
        
        private SubStockMovementDataTable tableSubStockMovement;
        
        private view_stock_movementDataTable tableview_stock_movement;
        
        private View_Saldo_Stock_akhir_unpivotDataTable tableView_Saldo_Stock_akhir_unpivot;
        
        private view_stockMovement_GudangDataTable tableview_stockMovement_Gudang;
        
        private View_stock_saldo_lengkapDataTable tableView_stock_saldo_lengkap;
        
        private global::System.Data.DataRelation relationStockGudang_Gudang;
        
        private global::System.Data.DataRelation relationStockGudang_Stock;
        
        private global::System.Data.DataRelation relationStock_view_stock_gudang;
        
        private global::System.Data.DataRelation relationStock_view_Total_Jumlah_Stock_Per_Kelompok;
        
        private global::System.Data.DataRelation relationKelompokProduk_Stock;
        
        private global::System.Data.DataRelation relationstockMovement_SubStockMovement;
        
        private global::System.Data.DataRelation relationStock_View_Saldo_Stock_akhir_unpivot;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Stock_Data() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Stock_Data(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StockGudang"] != null)) {
                    base.Tables.Add(new StockGudangDataTable(ds.Tables["StockGudang"]));
                }
                if ((ds.Tables["Gudang"] != null)) {
                    base.Tables.Add(new GudangDataTable(ds.Tables["Gudang"]));
                }
                if ((ds.Tables["StockOpname"] != null)) {
                    base.Tables.Add(new StockOpnameDataTable(ds.Tables["StockOpname"]));
                }
                if ((ds.Tables["view_stock_gudang"] != null)) {
                    base.Tables.Add(new view_stock_gudangDataTable(ds.Tables["view_stock_gudang"]));
                }
                if ((ds.Tables["stockMovement"] != null)) {
                    base.Tables.Add(new stockMovementDataTable(ds.Tables["stockMovement"]));
                }
                if ((ds.Tables["Satuan"] != null)) {
                    base.Tables.Add(new SatuanDataTable(ds.Tables["Satuan"]));
                }
                if ((ds.Tables["Stock"] != null)) {
                    base.Tables.Add(new StockDataTable(ds.Tables["Stock"]));
                }
                if ((ds.Tables["view_Total_Jumlah_Stock_Per_Kelompok"] != null)) {
                    base.Tables.Add(new view_Total_Jumlah_Stock_Per_KelompokDataTable(ds.Tables["view_Total_Jumlah_Stock_Per_Kelompok"]));
                }
                if ((ds.Tables["KelompokProduk"] != null)) {
                    base.Tables.Add(new KelompokProdukDataTable(ds.Tables["KelompokProduk"]));
                }
                if ((ds.Tables["SubStockMovement"] != null)) {
                    base.Tables.Add(new SubStockMovementDataTable(ds.Tables["SubStockMovement"]));
                }
                if ((ds.Tables["view_stock_movement"] != null)) {
                    base.Tables.Add(new view_stock_movementDataTable(ds.Tables["view_stock_movement"]));
                }
                if ((ds.Tables["View_Saldo_Stock_akhir_unpivot"] != null)) {
                    base.Tables.Add(new View_Saldo_Stock_akhir_unpivotDataTable(ds.Tables["View_Saldo_Stock_akhir_unpivot"]));
                }
                if ((ds.Tables["view_stockMovement_Gudang"] != null)) {
                    base.Tables.Add(new view_stockMovement_GudangDataTable(ds.Tables["view_stockMovement_Gudang"]));
                }
                if ((ds.Tables["View_stock_saldo_lengkap"] != null)) {
                    base.Tables.Add(new View_stock_saldo_lengkapDataTable(ds.Tables["View_stock_saldo_lengkap"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockGudangDataTable StockGudang {
            get {
                return this.tableStockGudang;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GudangDataTable Gudang {
            get {
                return this.tableGudang;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockOpnameDataTable StockOpname {
            get {
                return this.tableStockOpname;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public view_stock_gudangDataTable view_stock_gudang {
            get {
                return this.tableview_stock_gudang;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stockMovementDataTable stockMovement {
            get {
                return this.tablestockMovement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SatuanDataTable Satuan {
            get {
                return this.tableSatuan;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StockDataTable Stock {
            get {
                return this.tableStock;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public view_Total_Jumlah_Stock_Per_KelompokDataTable view_Total_Jumlah_Stock_Per_Kelompok {
            get {
                return this.tableview_Total_Jumlah_Stock_Per_Kelompok;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public KelompokProdukDataTable KelompokProduk {
            get {
                return this.tableKelompokProduk;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SubStockMovementDataTable SubStockMovement {
            get {
                return this.tableSubStockMovement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public view_stock_movementDataTable view_stock_movement {
            get {
                return this.tableview_stock_movement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_Saldo_Stock_akhir_unpivotDataTable View_Saldo_Stock_akhir_unpivot {
            get {
                return this.tableView_Saldo_Stock_akhir_unpivot;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public view_stockMovement_GudangDataTable view_stockMovement_Gudang {
            get {
                return this.tableview_stockMovement_Gudang;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_stock_saldo_lengkapDataTable View_stock_saldo_lengkap {
            get {
                return this.tableView_stock_saldo_lengkap;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Stock_Data cln = ((Stock_Data)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StockGudang"] != null)) {
                    base.Tables.Add(new StockGudangDataTable(ds.Tables["StockGudang"]));
                }
                if ((ds.Tables["Gudang"] != null)) {
                    base.Tables.Add(new GudangDataTable(ds.Tables["Gudang"]));
                }
                if ((ds.Tables["StockOpname"] != null)) {
                    base.Tables.Add(new StockOpnameDataTable(ds.Tables["StockOpname"]));
                }
                if ((ds.Tables["view_stock_gudang"] != null)) {
                    base.Tables.Add(new view_stock_gudangDataTable(ds.Tables["view_stock_gudang"]));
                }
                if ((ds.Tables["stockMovement"] != null)) {
                    base.Tables.Add(new stockMovementDataTable(ds.Tables["stockMovement"]));
                }
                if ((ds.Tables["Satuan"] != null)) {
                    base.Tables.Add(new SatuanDataTable(ds.Tables["Satuan"]));
                }
                if ((ds.Tables["Stock"] != null)) {
                    base.Tables.Add(new StockDataTable(ds.Tables["Stock"]));
                }
                if ((ds.Tables["view_Total_Jumlah_Stock_Per_Kelompok"] != null)) {
                    base.Tables.Add(new view_Total_Jumlah_Stock_Per_KelompokDataTable(ds.Tables["view_Total_Jumlah_Stock_Per_Kelompok"]));
                }
                if ((ds.Tables["KelompokProduk"] != null)) {
                    base.Tables.Add(new KelompokProdukDataTable(ds.Tables["KelompokProduk"]));
                }
                if ((ds.Tables["SubStockMovement"] != null)) {
                    base.Tables.Add(new SubStockMovementDataTable(ds.Tables["SubStockMovement"]));
                }
                if ((ds.Tables["view_stock_movement"] != null)) {
                    base.Tables.Add(new view_stock_movementDataTable(ds.Tables["view_stock_movement"]));
                }
                if ((ds.Tables["View_Saldo_Stock_akhir_unpivot"] != null)) {
                    base.Tables.Add(new View_Saldo_Stock_akhir_unpivotDataTable(ds.Tables["View_Saldo_Stock_akhir_unpivot"]));
                }
                if ((ds.Tables["view_stockMovement_Gudang"] != null)) {
                    base.Tables.Add(new view_stockMovement_GudangDataTable(ds.Tables["view_stockMovement_Gudang"]));
                }
                if ((ds.Tables["View_stock_saldo_lengkap"] != null)) {
                    base.Tables.Add(new View_stock_saldo_lengkapDataTable(ds.Tables["View_stock_saldo_lengkap"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStockGudang = ((StockGudangDataTable)(base.Tables["StockGudang"]));
            if ((initTable == true)) {
                if ((this.tableStockGudang != null)) {
                    this.tableStockGudang.InitVars();
                }
            }
            this.tableGudang = ((GudangDataTable)(base.Tables["Gudang"]));
            if ((initTable == true)) {
                if ((this.tableGudang != null)) {
                    this.tableGudang.InitVars();
                }
            }
            this.tableStockOpname = ((StockOpnameDataTable)(base.Tables["StockOpname"]));
            if ((initTable == true)) {
                if ((this.tableStockOpname != null)) {
                    this.tableStockOpname.InitVars();
                }
            }
            this.tableview_stock_gudang = ((view_stock_gudangDataTable)(base.Tables["view_stock_gudang"]));
            if ((initTable == true)) {
                if ((this.tableview_stock_gudang != null)) {
                    this.tableview_stock_gudang.InitVars();
                }
            }
            this.tablestockMovement = ((stockMovementDataTable)(base.Tables["stockMovement"]));
            if ((initTable == true)) {
                if ((this.tablestockMovement != null)) {
                    this.tablestockMovement.InitVars();
                }
            }
            this.tableSatuan = ((SatuanDataTable)(base.Tables["Satuan"]));
            if ((initTable == true)) {
                if ((this.tableSatuan != null)) {
                    this.tableSatuan.InitVars();
                }
            }
            this.tableStock = ((StockDataTable)(base.Tables["Stock"]));
            if ((initTable == true)) {
                if ((this.tableStock != null)) {
                    this.tableStock.InitVars();
                }
            }
            this.tableview_Total_Jumlah_Stock_Per_Kelompok = ((view_Total_Jumlah_Stock_Per_KelompokDataTable)(base.Tables["view_Total_Jumlah_Stock_Per_Kelompok"]));
            if ((initTable == true)) {
                if ((this.tableview_Total_Jumlah_Stock_Per_Kelompok != null)) {
                    this.tableview_Total_Jumlah_Stock_Per_Kelompok.InitVars();
                }
            }
            this.tableKelompokProduk = ((KelompokProdukDataTable)(base.Tables["KelompokProduk"]));
            if ((initTable == true)) {
                if ((this.tableKelompokProduk != null)) {
                    this.tableKelompokProduk.InitVars();
                }
            }
            this.tableSubStockMovement = ((SubStockMovementDataTable)(base.Tables["SubStockMovement"]));
            if ((initTable == true)) {
                if ((this.tableSubStockMovement != null)) {
                    this.tableSubStockMovement.InitVars();
                }
            }
            this.tableview_stock_movement = ((view_stock_movementDataTable)(base.Tables["view_stock_movement"]));
            if ((initTable == true)) {
                if ((this.tableview_stock_movement != null)) {
                    this.tableview_stock_movement.InitVars();
                }
            }
            this.tableView_Saldo_Stock_akhir_unpivot = ((View_Saldo_Stock_akhir_unpivotDataTable)(base.Tables["View_Saldo_Stock_akhir_unpivot"]));
            if ((initTable == true)) {
                if ((this.tableView_Saldo_Stock_akhir_unpivot != null)) {
                    this.tableView_Saldo_Stock_akhir_unpivot.InitVars();
                }
            }
            this.tableview_stockMovement_Gudang = ((view_stockMovement_GudangDataTable)(base.Tables["view_stockMovement_Gudang"]));
            if ((initTable == true)) {
                if ((this.tableview_stockMovement_Gudang != null)) {
                    this.tableview_stockMovement_Gudang.InitVars();
                }
            }
            this.tableView_stock_saldo_lengkap = ((View_stock_saldo_lengkapDataTable)(base.Tables["View_stock_saldo_lengkap"]));
            if ((initTable == true)) {
                if ((this.tableView_stock_saldo_lengkap != null)) {
                    this.tableView_stock_saldo_lengkap.InitVars();
                }
            }
            this.relationStockGudang_Gudang = this.Relations["StockGudang_Gudang"];
            this.relationStockGudang_Stock = this.Relations["StockGudang_Stock"];
            this.relationStock_view_stock_gudang = this.Relations["Stock_view_stock_gudang"];
            this.relationStock_view_Total_Jumlah_Stock_Per_Kelompok = this.Relations["Stock_view_Total_Jumlah_Stock_Per_Kelompok"];
            this.relationKelompokProduk_Stock = this.Relations["KelompokProduk_Stock"];
            this.relationstockMovement_SubStockMovement = this.Relations["stockMovement_SubStockMovement"];
            this.relationStock_View_Saldo_Stock_akhir_unpivot = this.Relations["Stock_View_Saldo_Stock_akhir_unpivot"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Stock_Data";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Stock_Data.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStockGudang = new StockGudangDataTable();
            base.Tables.Add(this.tableStockGudang);
            this.tableGudang = new GudangDataTable();
            base.Tables.Add(this.tableGudang);
            this.tableStockOpname = new StockOpnameDataTable();
            base.Tables.Add(this.tableStockOpname);
            this.tableview_stock_gudang = new view_stock_gudangDataTable();
            base.Tables.Add(this.tableview_stock_gudang);
            this.tablestockMovement = new stockMovementDataTable();
            base.Tables.Add(this.tablestockMovement);
            this.tableSatuan = new SatuanDataTable();
            base.Tables.Add(this.tableSatuan);
            this.tableStock = new StockDataTable();
            base.Tables.Add(this.tableStock);
            this.tableview_Total_Jumlah_Stock_Per_Kelompok = new view_Total_Jumlah_Stock_Per_KelompokDataTable();
            base.Tables.Add(this.tableview_Total_Jumlah_Stock_Per_Kelompok);
            this.tableKelompokProduk = new KelompokProdukDataTable();
            base.Tables.Add(this.tableKelompokProduk);
            this.tableSubStockMovement = new SubStockMovementDataTable();
            base.Tables.Add(this.tableSubStockMovement);
            this.tableview_stock_movement = new view_stock_movementDataTable();
            base.Tables.Add(this.tableview_stock_movement);
            this.tableView_Saldo_Stock_akhir_unpivot = new View_Saldo_Stock_akhir_unpivotDataTable();
            base.Tables.Add(this.tableView_Saldo_Stock_akhir_unpivot);
            this.tableview_stockMovement_Gudang = new view_stockMovement_GudangDataTable();
            base.Tables.Add(this.tableview_stockMovement_Gudang);
            this.tableView_stock_saldo_lengkap = new View_stock_saldo_lengkapDataTable();
            base.Tables.Add(this.tableView_stock_saldo_lengkap);
            this.relationStockGudang_Gudang = new global::System.Data.DataRelation("StockGudang_Gudang", new global::System.Data.DataColumn[] {
                        this.tableGudang.idColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockGudang.id_gudangColumn}, false);
            this.Relations.Add(this.relationStockGudang_Gudang);
            this.relationStockGudang_Stock = new global::System.Data.DataRelation("StockGudang_Stock", new global::System.Data.DataColumn[] {
                        this.tableStock.KodeStockColumn}, new global::System.Data.DataColumn[] {
                        this.tableStockGudang.KodeStockColumn}, false);
            this.Relations.Add(this.relationStockGudang_Stock);
            this.relationStock_view_stock_gudang = new global::System.Data.DataRelation("Stock_view_stock_gudang", new global::System.Data.DataColumn[] {
                        this.tableStock.KodeStockColumn}, new global::System.Data.DataColumn[] {
                        this.tableview_stock_gudang.KodeStockColumn}, false);
            this.Relations.Add(this.relationStock_view_stock_gudang);
            this.relationStock_view_Total_Jumlah_Stock_Per_Kelompok = new global::System.Data.DataRelation("Stock_view_Total_Jumlah_Stock_Per_Kelompok", new global::System.Data.DataColumn[] {
                        this.tableStock.KodeKelompokColumn}, new global::System.Data.DataColumn[] {
                        this.tableview_Total_Jumlah_Stock_Per_Kelompok.KodeKelompokColumn}, false);
            this.Relations.Add(this.relationStock_view_Total_Jumlah_Stock_Per_Kelompok);
            this.relationKelompokProduk_Stock = new global::System.Data.DataRelation("KelompokProduk_Stock", new global::System.Data.DataColumn[] {
                        this.tableKelompokProduk.KodeKelompokColumn}, new global::System.Data.DataColumn[] {
                        this.tableStock.KodeKelompokColumn}, false);
            this.Relations.Add(this.relationKelompokProduk_Stock);
            this.relationstockMovement_SubStockMovement = new global::System.Data.DataRelation("stockMovement_SubStockMovement", new global::System.Data.DataColumn[] {
                        this.tablestockMovement.no_buktiColumn}, new global::System.Data.DataColumn[] {
                        this.tableSubStockMovement.KodeStockMovementColumn}, false);
            this.Relations.Add(this.relationstockMovement_SubStockMovement);
            this.relationStock_View_Saldo_Stock_akhir_unpivot = new global::System.Data.DataRelation("Stock_View_Saldo_Stock_akhir_unpivot", new global::System.Data.DataColumn[] {
                        this.tableStock.KodeStockColumn}, new global::System.Data.DataColumn[] {
                        this.tableView_Saldo_Stock_akhir_unpivot.KodeStockColumn}, false);
            this.Relations.Add(this.relationStock_View_Saldo_Stock_akhir_unpivot);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockGudang() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGudang() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStockOpname() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeview_stock_gudang() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestockMovement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSatuan() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStock() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeview_Total_Jumlah_Stock_Per_Kelompok() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKelompokProduk() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSubStockMovement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeview_stock_movement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_Saldo_Stock_akhir_unpivot() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeview_stockMovement_Gudang() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_stock_saldo_lengkap() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Stock_Data ds = new Stock_Data();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void StockGudangRowChangeEventHandler(object sender, StockGudangRowChangeEvent e);
        
        public delegate void GudangRowChangeEventHandler(object sender, GudangRowChangeEvent e);
        
        public delegate void StockOpnameRowChangeEventHandler(object sender, StockOpnameRowChangeEvent e);
        
        public delegate void view_stock_gudangRowChangeEventHandler(object sender, view_stock_gudangRowChangeEvent e);
        
        public delegate void stockMovementRowChangeEventHandler(object sender, stockMovementRowChangeEvent e);
        
        public delegate void SatuanRowChangeEventHandler(object sender, SatuanRowChangeEvent e);
        
        public delegate void StockRowChangeEventHandler(object sender, StockRowChangeEvent e);
        
        public delegate void view_Total_Jumlah_Stock_Per_KelompokRowChangeEventHandler(object sender, view_Total_Jumlah_Stock_Per_KelompokRowChangeEvent e);
        
        public delegate void KelompokProdukRowChangeEventHandler(object sender, KelompokProdukRowChangeEvent e);
        
        public delegate void SubStockMovementRowChangeEventHandler(object sender, SubStockMovementRowChangeEvent e);
        
        public delegate void view_stock_movementRowChangeEventHandler(object sender, view_stock_movementRowChangeEvent e);
        
        public delegate void View_Saldo_Stock_akhir_unpivotRowChangeEventHandler(object sender, View_Saldo_Stock_akhir_unpivotRowChangeEvent e);
        
        public delegate void view_stockMovement_GudangRowChangeEventHandler(object sender, view_stockMovement_GudangRowChangeEvent e);
        
        public delegate void View_stock_saldo_lengkapRowChangeEventHandler(object sender, View_stock_saldo_lengkapRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockGudangDataTable : global::System.Data.TypedTableBase<StockGudangRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnid_gudang;
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnjumlah;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangDataTable() {
                this.TableName = "StockGudang";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockGudangDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockGudangDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn id_gudangColumn {
                get {
                    return this.columnid_gudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jumlahColumn {
                get {
                    return this.columnjumlah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangRow this[int index] {
                get {
                    return ((StockGudangRow)(this.Rows[index]));
                }
            }
            
            public event StockGudangRowChangeEventHandler StockGudangRowChanging;
            
            public event StockGudangRowChangeEventHandler StockGudangRowChanged;
            
            public event StockGudangRowChangeEventHandler StockGudangRowDeleting;
            
            public event StockGudangRowChangeEventHandler StockGudangRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockGudangRow(StockGudangRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangRow AddStockGudangRow(GudangRow parentGudangRowByStockGudang_Gudang, StockRow parentStockRowByStockGudang_Stock, double jumlah) {
                StockGudangRow rowStockGudangRow = ((StockGudangRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        jumlah};
                if ((parentGudangRowByStockGudang_Gudang != null)) {
                    columnValuesArray[1] = parentGudangRowByStockGudang_Gudang[0];
                }
                if ((parentStockRowByStockGudang_Stock != null)) {
                    columnValuesArray[2] = parentStockRowByStockGudang_Stock[0];
                }
                rowStockGudangRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockGudangRow);
                return rowStockGudangRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockGudangDataTable cln = ((StockGudangDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockGudangDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnid_gudang = base.Columns["id_gudang"];
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnjumlah = base.Columns["jumlah"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnid_gudang = new global::System.Data.DataColumn("id_gudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_gudang);
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnjumlah = new global::System.Data.DataColumn("jumlah", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjumlah);
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid_gudang.MaxLength = 10;
                this.columnKodeStock.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangRow NewStockGudangRow() {
                return ((StockGudangRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockGudangRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockGudangRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockGudangRowChanged != null)) {
                    this.StockGudangRowChanged(this, new StockGudangRowChangeEvent(((StockGudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockGudangRowChanging != null)) {
                    this.StockGudangRowChanging(this, new StockGudangRowChangeEvent(((StockGudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockGudangRowDeleted != null)) {
                    this.StockGudangRowDeleted(this, new StockGudangRowChangeEvent(((StockGudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockGudangRowDeleting != null)) {
                    this.StockGudangRowDeleting(this, new StockGudangRowChangeEvent(((StockGudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockGudangRow(StockGudangRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockGudangDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GudangDataTable : global::System.Data.TypedTableBase<GudangRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnnama;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangDataTable() {
                this.TableName = "Gudang";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GudangDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GudangDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namaColumn {
                get {
                    return this.columnnama;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangRow this[int index] {
                get {
                    return ((GudangRow)(this.Rows[index]));
                }
            }
            
            public event GudangRowChangeEventHandler GudangRowChanging;
            
            public event GudangRowChangeEventHandler GudangRowChanged;
            
            public event GudangRowChangeEventHandler GudangRowDeleting;
            
            public event GudangRowChangeEventHandler GudangRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGudangRow(GudangRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangRow AddGudangRow(string id, string nama) {
                GudangRow rowGudangRow = ((GudangRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        id,
                        nama};
                rowGudangRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGudangRow);
                return rowGudangRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangRow FindByid(string id) {
                return ((GudangRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GudangDataTable cln = ((GudangDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GudangDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnnama = base.Columns["nama"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnnama = new global::System.Data.DataColumn("nama", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnama);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnid.MaxLength = 10;
                this.columnnama.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangRow NewGudangRow() {
                return ((GudangRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GudangRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GudangRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GudangRowChanged != null)) {
                    this.GudangRowChanged(this, new GudangRowChangeEvent(((GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GudangRowChanging != null)) {
                    this.GudangRowChanging(this, new GudangRowChangeEvent(((GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GudangRowDeleted != null)) {
                    this.GudangRowDeleted(this, new GudangRowChangeEvent(((GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GudangRowDeleting != null)) {
                    this.GudangRowDeleting(this, new GudangRowChangeEvent(((GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGudangRow(GudangRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GudangDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockOpnameDataTable : global::System.Data.TypedTableBase<StockOpnameRow> {
            
            private global::System.Data.DataColumn columnNoBukti;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnStockAwal;
            
            private global::System.Data.DataColumn columnStockOpname;
            
            private global::System.Data.DataColumn columnSelisih;
            
            private global::System.Data.DataColumn columnHarga;
            
            private global::System.Data.DataColumn columnJumlah;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnPartNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOpnameDataTable() {
                this.TableName = "StockOpname";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOpnameDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockOpnameDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBuktiColumn {
                get {
                    return this.columnNoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAwalColumn {
                get {
                    return this.columnStockAwal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockOpnameColumn {
                get {
                    return this.columnStockOpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelisihColumn {
                get {
                    return this.columnSelisih;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaColumn {
                get {
                    return this.columnHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahColumn {
                get {
                    return this.columnJumlah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartNoColumn {
                get {
                    return this.columnPartNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOpnameRow this[int index] {
                get {
                    return ((StockOpnameRow)(this.Rows[index]));
                }
            }
            
            public event StockOpnameRowChangeEventHandler StockOpnameRowChanging;
            
            public event StockOpnameRowChangeEventHandler StockOpnameRowChanged;
            
            public event StockOpnameRowChangeEventHandler StockOpnameRowDeleting;
            
            public event StockOpnameRowChangeEventHandler StockOpnameRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockOpnameRow(StockOpnameRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOpnameRow AddStockOpnameRow(string NoBukti, System.DateTime Tanggal, string KodeStock, double StockAwal, double StockOpname, double Selisih, double Harga, double Jumlah, bool Status, string PartNo) {
                StockOpnameRow rowStockOpnameRow = ((StockOpnameRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NoBukti,
                        Tanggal,
                        KodeStock,
                        StockAwal,
                        StockOpname,
                        Selisih,
                        Harga,
                        Jumlah,
                        Status,
                        PartNo};
                rowStockOpnameRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockOpnameRow);
                return rowStockOpnameRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOpnameRow FindByNoBukti(string NoBukti) {
                return ((StockOpnameRow)(this.Rows.Find(new object[] {
                            NoBukti})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockOpnameDataTable cln = ((StockOpnameDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockOpnameDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNoBukti = base.Columns["NoBukti"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnStockAwal = base.Columns["StockAwal"];
                this.columnStockOpname = base.Columns["StockOpname"];
                this.columnSelisih = base.Columns["Selisih"];
                this.columnHarga = base.Columns["Harga"];
                this.columnJumlah = base.Columns["Jumlah"];
                this.columnStatus = base.Columns["Status"];
                this.columnPartNo = base.Columns["PartNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNoBukti = new global::System.Data.DataColumn("NoBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBukti);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnStockAwal = new global::System.Data.DataColumn("StockAwal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAwal);
                this.columnStockOpname = new global::System.Data.DataColumn("StockOpname", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockOpname);
                this.columnSelisih = new global::System.Data.DataColumn("Selisih", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSelisih);
                this.columnHarga = new global::System.Data.DataColumn("Harga", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHarga);
                this.columnJumlah = new global::System.Data.DataColumn("Jumlah", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlah);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnPartNo = new global::System.Data.DataColumn("PartNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNoBukti}, true));
                this.columnNoBukti.AllowDBNull = false;
                this.columnNoBukti.Unique = true;
                this.columnNoBukti.MaxLength = 50;
                this.columnKodeStock.MaxLength = 25;
                this.columnPartNo.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOpnameRow NewStockOpnameRow() {
                return ((StockOpnameRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockOpnameRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockOpnameRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockOpnameRowChanged != null)) {
                    this.StockOpnameRowChanged(this, new StockOpnameRowChangeEvent(((StockOpnameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockOpnameRowChanging != null)) {
                    this.StockOpnameRowChanging(this, new StockOpnameRowChangeEvent(((StockOpnameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockOpnameRowDeleted != null)) {
                    this.StockOpnameRowDeleted(this, new StockOpnameRowChangeEvent(((StockOpnameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockOpnameRowDeleting != null)) {
                    this.StockOpnameRowDeleting(this, new StockOpnameRowChangeEvent(((StockOpnameRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockOpnameRow(StockOpnameRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockOpnameDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class view_stock_gudangDataTable : global::System.Data.TypedTableBase<view_stock_gudangRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnid_gudang;
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnjumlah;
            
            private global::System.Data.DataColumn columnnamaGudang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_gudangDataTable() {
                this.TableName = "view_stock_gudang";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_stock_gudangDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected view_stock_gudangDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn id_gudangColumn {
                get {
                    return this.columnid_gudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn jumlahColumn {
                get {
                    return this.columnjumlah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namaGudangColumn {
                get {
                    return this.columnnamaGudang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_gudangRow this[int index] {
                get {
                    return ((view_stock_gudangRow)(this.Rows[index]));
                }
            }
            
            public event view_stock_gudangRowChangeEventHandler view_stock_gudangRowChanging;
            
            public event view_stock_gudangRowChangeEventHandler view_stock_gudangRowChanged;
            
            public event view_stock_gudangRowChangeEventHandler view_stock_gudangRowDeleting;
            
            public event view_stock_gudangRowChangeEventHandler view_stock_gudangRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addview_stock_gudangRow(view_stock_gudangRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_gudangRow Addview_stock_gudangRow(string id_gudang, StockRow parentStockRowByStock_view_stock_gudang, double jumlah, string namaGudang) {
                view_stock_gudangRow rowview_stock_gudangRow = ((view_stock_gudangRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        id_gudang,
                        null,
                        jumlah,
                        namaGudang};
                if ((parentStockRowByStock_view_stock_gudang != null)) {
                    columnValuesArray[2] = parentStockRowByStock_view_stock_gudang[0];
                }
                rowview_stock_gudangRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowview_stock_gudangRow);
                return rowview_stock_gudangRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                view_stock_gudangDataTable cln = ((view_stock_gudangDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new view_stock_gudangDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnid_gudang = base.Columns["id_gudang"];
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnjumlah = base.Columns["jumlah"];
                this.columnnamaGudang = base.Columns["namaGudang"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnid_gudang = new global::System.Data.DataColumn("id_gudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_gudang);
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnjumlah = new global::System.Data.DataColumn("jumlah", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjumlah);
                this.columnnamaGudang = new global::System.Data.DataColumn("namaGudang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamaGudang);
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid_gudang.MaxLength = 10;
                this.columnKodeStock.MaxLength = 25;
                this.columnnamaGudang.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_gudangRow Newview_stock_gudangRow() {
                return ((view_stock_gudangRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new view_stock_gudangRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(view_stock_gudangRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.view_stock_gudangRowChanged != null)) {
                    this.view_stock_gudangRowChanged(this, new view_stock_gudangRowChangeEvent(((view_stock_gudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.view_stock_gudangRowChanging != null)) {
                    this.view_stock_gudangRowChanging(this, new view_stock_gudangRowChangeEvent(((view_stock_gudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.view_stock_gudangRowDeleted != null)) {
                    this.view_stock_gudangRowDeleted(this, new view_stock_gudangRowChangeEvent(((view_stock_gudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.view_stock_gudangRowDeleting != null)) {
                    this.view_stock_gudangRowDeleting(this, new view_stock_gudangRowChangeEvent(((view_stock_gudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeview_stock_gudangRow(view_stock_gudangRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "view_stock_gudangDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stockMovementDataTable : global::System.Data.TypedTableBase<stockMovementRow> {
            
            private global::System.Data.DataColumn columnno_bukti;
            
            private global::System.Data.DataColumn columntanggal;
            
            private global::System.Data.DataColumn columnid_gudang_asal;
            
            private global::System.Data.DataColumn columnid_gudang_tujuan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementDataTable() {
                this.TableName = "stockMovement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockMovementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stockMovementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn no_buktiColumn {
                get {
                    return this.columnno_bukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tanggalColumn {
                get {
                    return this.columntanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn id_gudang_asalColumn {
                get {
                    return this.columnid_gudang_asal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn id_gudang_tujuanColumn {
                get {
                    return this.columnid_gudang_tujuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementRow this[int index] {
                get {
                    return ((stockMovementRow)(this.Rows[index]));
                }
            }
            
            public event stockMovementRowChangeEventHandler stockMovementRowChanging;
            
            public event stockMovementRowChangeEventHandler stockMovementRowChanged;
            
            public event stockMovementRowChangeEventHandler stockMovementRowDeleting;
            
            public event stockMovementRowChangeEventHandler stockMovementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstockMovementRow(stockMovementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementRow AddstockMovementRow(string no_bukti, System.DateTime tanggal, string id_gudang_asal, string id_gudang_tujuan) {
                stockMovementRow rowstockMovementRow = ((stockMovementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        no_bukti,
                        tanggal,
                        id_gudang_asal,
                        id_gudang_tujuan};
                rowstockMovementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstockMovementRow);
                return rowstockMovementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementRow FindByno_bukti(string no_bukti) {
                return ((stockMovementRow)(this.Rows.Find(new object[] {
                            no_bukti})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stockMovementDataTable cln = ((stockMovementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stockMovementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnno_bukti = base.Columns["no_bukti"];
                this.columntanggal = base.Columns["tanggal"];
                this.columnid_gudang_asal = base.Columns["id_gudang_asal"];
                this.columnid_gudang_tujuan = base.Columns["id_gudang_tujuan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnno_bukti = new global::System.Data.DataColumn("no_bukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno_bukti);
                this.columntanggal = new global::System.Data.DataColumn("tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntanggal);
                this.columnid_gudang_asal = new global::System.Data.DataColumn("id_gudang_asal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_gudang_asal);
                this.columnid_gudang_tujuan = new global::System.Data.DataColumn("id_gudang_tujuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_gudang_tujuan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnno_bukti}, true));
                this.columnno_bukti.AllowDBNull = false;
                this.columnno_bukti.Unique = true;
                this.columnno_bukti.MaxLength = 10;
                this.columnid_gudang_asal.MaxLength = 10;
                this.columnid_gudang_tujuan.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementRow NewstockMovementRow() {
                return ((stockMovementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stockMovementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stockMovementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stockMovementRowChanged != null)) {
                    this.stockMovementRowChanged(this, new stockMovementRowChangeEvent(((stockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stockMovementRowChanging != null)) {
                    this.stockMovementRowChanging(this, new stockMovementRowChangeEvent(((stockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stockMovementRowDeleted != null)) {
                    this.stockMovementRowDeleted(this, new stockMovementRowChangeEvent(((stockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stockMovementRowDeleting != null)) {
                    this.stockMovementRowDeleting(this, new stockMovementRowChangeEvent(((stockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestockMovementRow(stockMovementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stockMovementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SatuanDataTable : global::System.Data.TypedTableBase<SatuanRow> {
            
            private global::System.Data.DataColumn columnNamaSatuan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SatuanDataTable() {
                this.TableName = "Satuan";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SatuanDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SatuanDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaSatuanColumn {
                get {
                    return this.columnNamaSatuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SatuanRow this[int index] {
                get {
                    return ((SatuanRow)(this.Rows[index]));
                }
            }
            
            public event SatuanRowChangeEventHandler SatuanRowChanging;
            
            public event SatuanRowChangeEventHandler SatuanRowChanged;
            
            public event SatuanRowChangeEventHandler SatuanRowDeleting;
            
            public event SatuanRowChangeEventHandler SatuanRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSatuanRow(SatuanRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SatuanRow AddSatuanRow(string NamaSatuan) {
                SatuanRow rowSatuanRow = ((SatuanRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NamaSatuan};
                rowSatuanRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSatuanRow);
                return rowSatuanRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SatuanRow FindByNamaSatuan(string NamaSatuan) {
                return ((SatuanRow)(this.Rows.Find(new object[] {
                            NamaSatuan})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SatuanDataTable cln = ((SatuanDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SatuanDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNamaSatuan = base.Columns["NamaSatuan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNamaSatuan = new global::System.Data.DataColumn("NamaSatuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaSatuan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNamaSatuan}, true));
                this.columnNamaSatuan.AllowDBNull = false;
                this.columnNamaSatuan.Unique = true;
                this.columnNamaSatuan.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SatuanRow NewSatuanRow() {
                return ((SatuanRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SatuanRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SatuanRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SatuanRowChanged != null)) {
                    this.SatuanRowChanged(this, new SatuanRowChangeEvent(((SatuanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SatuanRowChanging != null)) {
                    this.SatuanRowChanging(this, new SatuanRowChangeEvent(((SatuanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SatuanRowDeleted != null)) {
                    this.SatuanRowDeleted(this, new SatuanRowChangeEvent(((SatuanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SatuanRowDeleting != null)) {
                    this.SatuanRowDeleting(this, new SatuanRowChangeEvent(((SatuanRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSatuanRow(SatuanRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SatuanDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StockDataTable : global::System.Data.TypedTableBase<StockRow> {
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnNamaStock;
            
            private global::System.Data.DataColumn columnSatuan;
            
            private global::System.Data.DataColumn columnJumlahStock;
            
            private global::System.Data.DataColumn columnPV;
            
            private global::System.Data.DataColumn columnBV;
            
            private global::System.Data.DataColumn columnStockAkhir;
            
            private global::System.Data.DataColumn columnHargaBeli;
            
            private global::System.Data.DataColumn columnNilaiStock;
            
            private global::System.Data.DataColumn columnHargaJual1;
            
            private global::System.Data.DataColumn columnHargaJual2;
            
            private global::System.Data.DataColumn columnHargaJual3;
            
            private global::System.Data.DataColumn columnUkuran;
            
            private global::System.Data.DataColumn columnStockMinimum;
            
            private global::System.Data.DataColumn columnIsi;
            
            private global::System.Data.DataColumn columnSatuanIsi;
            
            private global::System.Data.DataColumn columnKodeBarcode;
            
            private global::System.Data.DataColumn columnStockPesanan;
            
            private global::System.Data.DataColumn columnJumlahPemesanan;
            
            private global::System.Data.DataColumn columnJumlahPesanan;
            
            private global::System.Data.DataColumn columnKodeSupplier;
            
            private global::System.Data.DataColumn columnHargaRata;
            
            private global::System.Data.DataColumn columnHargaAwal;
            
            private global::System.Data.DataColumn columnNilaiAwal;
            
            private global::System.Data.DataColumn columnKomisiSalesman;
            
            private global::System.Data.DataColumn columnNamaFileGambar1;
            
            private global::System.Data.DataColumn columnNamaFileGambar2;
            
            private global::System.Data.DataColumn columnStRacik;
            
            private global::System.Data.DataColumn columnKegunaan;
            
            private global::System.Data.DataColumn columnKodeKelompok;
            
            private global::System.Data.DataColumn columnQty1;
            
            private global::System.Data.DataColumn columnQty2;
            
            private global::System.Data.DataColumn columnHargaJual4;
            
            private global::System.Data.DataColumn columnQty3;
            
            private global::System.Data.DataColumn columnQty4;
            
            private global::System.Data.DataColumn columnKodeKelompok2;
            
            private global::System.Data.DataColumn columncost;
            
            private global::System.Data.DataColumn columnHargaJual;
            
            private global::System.Data.DataColumn columndisc1;
            
            private global::System.Data.DataColumn columndisc2;
            
            private global::System.Data.DataColumn columnppn;
            
            private global::System.Data.DataColumn columndiscrp;
            
            private global::System.Data.DataColumn columndisc3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockDataTable() {
                this.TableName = "Stock";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected StockDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStockColumn {
                get {
                    return this.columnNamaStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatuanColumn {
                get {
                    return this.columnSatuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahStockColumn {
                get {
                    return this.columnJumlahStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PVColumn {
                get {
                    return this.columnPV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BVColumn {
                get {
                    return this.columnBV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockAkhirColumn {
                get {
                    return this.columnStockAkhir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaBeliColumn {
                get {
                    return this.columnHargaBeli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NilaiStockColumn {
                get {
                    return this.columnNilaiStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual1Column {
                get {
                    return this.columnHargaJual1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual2Column {
                get {
                    return this.columnHargaJual2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual3Column {
                get {
                    return this.columnHargaJual3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UkuranColumn {
                get {
                    return this.columnUkuran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMinimumColumn {
                get {
                    return this.columnStockMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsiColumn {
                get {
                    return this.columnIsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatuanIsiColumn {
                get {
                    return this.columnSatuanIsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeBarcodeColumn {
                get {
                    return this.columnKodeBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockPesananColumn {
                get {
                    return this.columnStockPesanan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahPemesananColumn {
                get {
                    return this.columnJumlahPemesanan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahPesananColumn {
                get {
                    return this.columnJumlahPesanan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSupplierColumn {
                get {
                    return this.columnKodeSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaRataColumn {
                get {
                    return this.columnHargaRata;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaAwalColumn {
                get {
                    return this.columnHargaAwal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NilaiAwalColumn {
                get {
                    return this.columnNilaiAwal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KomisiSalesmanColumn {
                get {
                    return this.columnKomisiSalesman;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaFileGambar1Column {
                get {
                    return this.columnNamaFileGambar1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaFileGambar2Column {
                get {
                    return this.columnNamaFileGambar2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StRacikColumn {
                get {
                    return this.columnStRacik;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KegunaanColumn {
                get {
                    return this.columnKegunaan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompokColumn {
                get {
                    return this.columnKodeKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty1Column {
                get {
                    return this.columnQty1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty2Column {
                get {
                    return this.columnQty2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual4Column {
                get {
                    return this.columnHargaJual4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty3Column {
                get {
                    return this.columnQty3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty4Column {
                get {
                    return this.columnQty4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompok2Column {
                get {
                    return this.columnKodeKelompok2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costColumn {
                get {
                    return this.columncost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJualColumn {
                get {
                    return this.columnHargaJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc1Column {
                get {
                    return this.columndisc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc2Column {
                get {
                    return this.columndisc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ppnColumn {
                get {
                    return this.columnppn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discrpColumn {
                get {
                    return this.columndiscrp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc3Column {
                get {
                    return this.columndisc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow this[int index] {
                get {
                    return ((StockRow)(this.Rows[index]));
                }
            }
            
            public event StockRowChangeEventHandler StockRowChanging;
            
            public event StockRowChangeEventHandler StockRowChanged;
            
            public event StockRowChangeEventHandler StockRowDeleting;
            
            public event StockRowChangeEventHandler StockRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStockRow(StockRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow AddStockRow(
                        string KodeStock, 
                        string NamaStock, 
                        string Satuan, 
                        double JumlahStock, 
                        double PV, 
                        double BV, 
                        double StockAkhir, 
                        double HargaBeli, 
                        double NilaiStock, 
                        double HargaJual1, 
                        double HargaJual2, 
                        double HargaJual3, 
                        string Ukuran, 
                        double StockMinimum, 
                        double Isi, 
                        string SatuanIsi, 
                        string KodeBarcode, 
                        double StockPesanan, 
                        double JumlahPemesanan, 
                        double JumlahPesanan, 
                        string KodeSupplier, 
                        double HargaRata, 
                        double HargaAwal, 
                        double NilaiAwal, 
                        double KomisiSalesman, 
                        string NamaFileGambar1, 
                        string NamaFileGambar2, 
                        bool StRacik, 
                        string Kegunaan, 
                        KelompokProdukRow parentKelompokProdukRowByKelompokProduk_Stock, 
                        double Qty1, 
                        double Qty2, 
                        double HargaJual4, 
                        double Qty3, 
                        double Qty4, 
                        string KodeKelompok2, 
                        double cost, 
                        double HargaJual, 
                        double disc1, 
                        double disc2, 
                        double ppn, 
                        double discrp, 
                        double disc3) {
                StockRow rowStockRow = ((StockRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeStock,
                        NamaStock,
                        Satuan,
                        JumlahStock,
                        PV,
                        BV,
                        StockAkhir,
                        HargaBeli,
                        NilaiStock,
                        HargaJual1,
                        HargaJual2,
                        HargaJual3,
                        Ukuran,
                        StockMinimum,
                        Isi,
                        SatuanIsi,
                        KodeBarcode,
                        StockPesanan,
                        JumlahPemesanan,
                        JumlahPesanan,
                        KodeSupplier,
                        HargaRata,
                        HargaAwal,
                        NilaiAwal,
                        KomisiSalesman,
                        NamaFileGambar1,
                        NamaFileGambar2,
                        StRacik,
                        Kegunaan,
                        null,
                        Qty1,
                        Qty2,
                        HargaJual4,
                        Qty3,
                        Qty4,
                        KodeKelompok2,
                        cost,
                        HargaJual,
                        disc1,
                        disc2,
                        ppn,
                        discrp,
                        disc3};
                if ((parentKelompokProdukRowByKelompokProduk_Stock != null)) {
                    columnValuesArray[29] = parentKelompokProdukRowByKelompokProduk_Stock[1];
                }
                rowStockRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStockRow);
                return rowStockRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow FindByKodeStock(string KodeStock) {
                return ((StockRow)(this.Rows.Find(new object[] {
                            KodeStock})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                StockDataTable cln = ((StockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StockDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnNamaStock = base.Columns["NamaStock"];
                this.columnSatuan = base.Columns["Satuan"];
                this.columnJumlahStock = base.Columns["JumlahStock"];
                this.columnPV = base.Columns["PV"];
                this.columnBV = base.Columns["BV"];
                this.columnStockAkhir = base.Columns["StockAkhir"];
                this.columnHargaBeli = base.Columns["HargaBeli"];
                this.columnNilaiStock = base.Columns["NilaiStock"];
                this.columnHargaJual1 = base.Columns["HargaJual1"];
                this.columnHargaJual2 = base.Columns["HargaJual2"];
                this.columnHargaJual3 = base.Columns["HargaJual3"];
                this.columnUkuran = base.Columns["Ukuran"];
                this.columnStockMinimum = base.Columns["StockMinimum"];
                this.columnIsi = base.Columns["Isi"];
                this.columnSatuanIsi = base.Columns["SatuanIsi"];
                this.columnKodeBarcode = base.Columns["KodeBarcode"];
                this.columnStockPesanan = base.Columns["StockPesanan"];
                this.columnJumlahPemesanan = base.Columns["JumlahPemesanan"];
                this.columnJumlahPesanan = base.Columns["JumlahPesanan"];
                this.columnKodeSupplier = base.Columns["KodeSupplier"];
                this.columnHargaRata = base.Columns["HargaRata"];
                this.columnHargaAwal = base.Columns["HargaAwal"];
                this.columnNilaiAwal = base.Columns["NilaiAwal"];
                this.columnKomisiSalesman = base.Columns["KomisiSalesman"];
                this.columnNamaFileGambar1 = base.Columns["NamaFileGambar1"];
                this.columnNamaFileGambar2 = base.Columns["NamaFileGambar2"];
                this.columnStRacik = base.Columns["StRacik"];
                this.columnKegunaan = base.Columns["Kegunaan"];
                this.columnKodeKelompok = base.Columns["KodeKelompok"];
                this.columnQty1 = base.Columns["Qty1"];
                this.columnQty2 = base.Columns["Qty2"];
                this.columnHargaJual4 = base.Columns["HargaJual4"];
                this.columnQty3 = base.Columns["Qty3"];
                this.columnQty4 = base.Columns["Qty4"];
                this.columnKodeKelompok2 = base.Columns["KodeKelompok2"];
                this.columncost = base.Columns["cost"];
                this.columnHargaJual = base.Columns["HargaJual"];
                this.columndisc1 = base.Columns["disc1"];
                this.columndisc2 = base.Columns["disc2"];
                this.columnppn = base.Columns["ppn"];
                this.columndiscrp = base.Columns["discrp"];
                this.columndisc3 = base.Columns["disc3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnNamaStock = new global::System.Data.DataColumn("NamaStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStock);
                this.columnSatuan = new global::System.Data.DataColumn("Satuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatuan);
                this.columnJumlahStock = new global::System.Data.DataColumn("JumlahStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlahStock);
                this.columnPV = new global::System.Data.DataColumn("PV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPV);
                this.columnBV = new global::System.Data.DataColumn("BV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBV);
                this.columnStockAkhir = new global::System.Data.DataColumn("StockAkhir", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockAkhir);
                this.columnHargaBeli = new global::System.Data.DataColumn("HargaBeli", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaBeli);
                this.columnNilaiStock = new global::System.Data.DataColumn("NilaiStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNilaiStock);
                this.columnHargaJual1 = new global::System.Data.DataColumn("HargaJual1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual1);
                this.columnHargaJual2 = new global::System.Data.DataColumn("HargaJual2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual2);
                this.columnHargaJual3 = new global::System.Data.DataColumn("HargaJual3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual3);
                this.columnUkuran = new global::System.Data.DataColumn("Ukuran", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUkuran);
                this.columnStockMinimum = new global::System.Data.DataColumn("StockMinimum", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMinimum);
                this.columnIsi = new global::System.Data.DataColumn("Isi", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsi);
                this.columnSatuanIsi = new global::System.Data.DataColumn("SatuanIsi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatuanIsi);
                this.columnKodeBarcode = new global::System.Data.DataColumn("KodeBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeBarcode);
                this.columnStockPesanan = new global::System.Data.DataColumn("StockPesanan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockPesanan);
                this.columnJumlahPemesanan = new global::System.Data.DataColumn("JumlahPemesanan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlahPemesanan);
                this.columnJumlahPesanan = new global::System.Data.DataColumn("JumlahPesanan", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlahPesanan);
                this.columnKodeSupplier = new global::System.Data.DataColumn("KodeSupplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSupplier);
                this.columnHargaRata = new global::System.Data.DataColumn("HargaRata", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaRata);
                this.columnHargaAwal = new global::System.Data.DataColumn("HargaAwal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaAwal);
                this.columnNilaiAwal = new global::System.Data.DataColumn("NilaiAwal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNilaiAwal);
                this.columnKomisiSalesman = new global::System.Data.DataColumn("KomisiSalesman", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKomisiSalesman);
                this.columnNamaFileGambar1 = new global::System.Data.DataColumn("NamaFileGambar1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaFileGambar1);
                this.columnNamaFileGambar2 = new global::System.Data.DataColumn("NamaFileGambar2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaFileGambar2);
                this.columnStRacik = new global::System.Data.DataColumn("StRacik", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStRacik);
                this.columnKegunaan = new global::System.Data.DataColumn("Kegunaan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKegunaan);
                this.columnKodeKelompok = new global::System.Data.DataColumn("KodeKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok);
                this.columnQty1 = new global::System.Data.DataColumn("Qty1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty1);
                this.columnQty2 = new global::System.Data.DataColumn("Qty2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty2);
                this.columnHargaJual4 = new global::System.Data.DataColumn("HargaJual4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual4);
                this.columnQty3 = new global::System.Data.DataColumn("Qty3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty3);
                this.columnQty4 = new global::System.Data.DataColumn("Qty4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty4);
                this.columnKodeKelompok2 = new global::System.Data.DataColumn("KodeKelompok2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok2);
                this.columncost = new global::System.Data.DataColumn("cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncost);
                this.columnHargaJual = new global::System.Data.DataColumn("HargaJual", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual);
                this.columndisc1 = new global::System.Data.DataColumn("disc1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc1);
                this.columndisc2 = new global::System.Data.DataColumn("disc2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc2);
                this.columnppn = new global::System.Data.DataColumn("ppn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppn);
                this.columndiscrp = new global::System.Data.DataColumn("discrp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscrp);
                this.columndisc3 = new global::System.Data.DataColumn("disc3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc3);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKodeStock}, true));
                this.columnKodeStock.AllowDBNull = false;
                this.columnKodeStock.Unique = true;
                this.columnKodeStock.MaxLength = 25;
                this.columnNamaStock.MaxLength = 50;
                this.columnSatuan.MaxLength = 15;
                this.columnUkuran.MaxLength = 20;
                this.columnSatuanIsi.MaxLength = 10;
                this.columnKodeBarcode.MaxLength = 50;
                this.columnKodeSupplier.MaxLength = 15;
                this.columnNamaFileGambar1.MaxLength = 255;
                this.columnNamaFileGambar2.MaxLength = 255;
                this.columnKegunaan.MaxLength = 2147483647;
                this.columnKodeKelompok.AllowDBNull = false;
                this.columnKodeKelompok.MaxLength = 5;
                this.columnKodeKelompok2.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow NewStockRow() {
                return ((StockRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StockRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(StockRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StockRowChanged != null)) {
                    this.StockRowChanged(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StockRowChanging != null)) {
                    this.StockRowChanging(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StockRowDeleted != null)) {
                    this.StockRowDeleted(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StockRowDeleting != null)) {
                    this.StockRowDeleting(this, new StockRowChangeEvent(((StockRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStockRow(StockRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StockDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class view_Total_Jumlah_Stock_Per_KelompokDataTable : global::System.Data.TypedTableBase<view_Total_Jumlah_Stock_Per_KelompokRow> {
            
            private global::System.Data.DataColumn columnresult;
            
            private global::System.Data.DataColumn columnKodeKelompok;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_Total_Jumlah_Stock_Per_KelompokDataTable() {
                this.TableName = "view_Total_Jumlah_Stock_Per_Kelompok";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_Total_Jumlah_Stock_Per_KelompokDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected view_Total_Jumlah_Stock_Per_KelompokDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn resultColumn {
                get {
                    return this.columnresult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompokColumn {
                get {
                    return this.columnKodeKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_Total_Jumlah_Stock_Per_KelompokRow this[int index] {
                get {
                    return ((view_Total_Jumlah_Stock_Per_KelompokRow)(this.Rows[index]));
                }
            }
            
            public event view_Total_Jumlah_Stock_Per_KelompokRowChangeEventHandler view_Total_Jumlah_Stock_Per_KelompokRowChanging;
            
            public event view_Total_Jumlah_Stock_Per_KelompokRowChangeEventHandler view_Total_Jumlah_Stock_Per_KelompokRowChanged;
            
            public event view_Total_Jumlah_Stock_Per_KelompokRowChangeEventHandler view_Total_Jumlah_Stock_Per_KelompokRowDeleting;
            
            public event view_Total_Jumlah_Stock_Per_KelompokRowChangeEventHandler view_Total_Jumlah_Stock_Per_KelompokRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addview_Total_Jumlah_Stock_Per_KelompokRow(view_Total_Jumlah_Stock_Per_KelompokRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_Total_Jumlah_Stock_Per_KelompokRow Addview_Total_Jumlah_Stock_Per_KelompokRow(int result, StockRow parentStockRowByStock_view_Total_Jumlah_Stock_Per_Kelompok) {
                view_Total_Jumlah_Stock_Per_KelompokRow rowview_Total_Jumlah_Stock_Per_KelompokRow = ((view_Total_Jumlah_Stock_Per_KelompokRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        result,
                        null};
                if ((parentStockRowByStock_view_Total_Jumlah_Stock_Per_Kelompok != null)) {
                    columnValuesArray[1] = parentStockRowByStock_view_Total_Jumlah_Stock_Per_Kelompok[29];
                }
                rowview_Total_Jumlah_Stock_Per_KelompokRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowview_Total_Jumlah_Stock_Per_KelompokRow);
                return rowview_Total_Jumlah_Stock_Per_KelompokRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                view_Total_Jumlah_Stock_Per_KelompokDataTable cln = ((view_Total_Jumlah_Stock_Per_KelompokDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new view_Total_Jumlah_Stock_Per_KelompokDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnresult = base.Columns["result"];
                this.columnKodeKelompok = base.Columns["KodeKelompok"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnresult = new global::System.Data.DataColumn("result", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresult);
                this.columnKodeKelompok = new global::System.Data.DataColumn("KodeKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok);
                this.columnKodeKelompok.AllowDBNull = false;
                this.columnKodeKelompok.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_Total_Jumlah_Stock_Per_KelompokRow Newview_Total_Jumlah_Stock_Per_KelompokRow() {
                return ((view_Total_Jumlah_Stock_Per_KelompokRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new view_Total_Jumlah_Stock_Per_KelompokRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(view_Total_Jumlah_Stock_Per_KelompokRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.view_Total_Jumlah_Stock_Per_KelompokRowChanged != null)) {
                    this.view_Total_Jumlah_Stock_Per_KelompokRowChanged(this, new view_Total_Jumlah_Stock_Per_KelompokRowChangeEvent(((view_Total_Jumlah_Stock_Per_KelompokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.view_Total_Jumlah_Stock_Per_KelompokRowChanging != null)) {
                    this.view_Total_Jumlah_Stock_Per_KelompokRowChanging(this, new view_Total_Jumlah_Stock_Per_KelompokRowChangeEvent(((view_Total_Jumlah_Stock_Per_KelompokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.view_Total_Jumlah_Stock_Per_KelompokRowDeleted != null)) {
                    this.view_Total_Jumlah_Stock_Per_KelompokRowDeleted(this, new view_Total_Jumlah_Stock_Per_KelompokRowChangeEvent(((view_Total_Jumlah_Stock_Per_KelompokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.view_Total_Jumlah_Stock_Per_KelompokRowDeleting != null)) {
                    this.view_Total_Jumlah_Stock_Per_KelompokRowDeleting(this, new view_Total_Jumlah_Stock_Per_KelompokRowChangeEvent(((view_Total_Jumlah_Stock_Per_KelompokRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeview_Total_Jumlah_Stock_Per_KelompokRow(view_Total_Jumlah_Stock_Per_KelompokRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "view_Total_Jumlah_Stock_Per_KelompokDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KelompokProdukDataTable : global::System.Data.TypedTableBase<KelompokProdukRow> {
            
            private global::System.Data.DataColumn columnNoUrut;
            
            private global::System.Data.DataColumn columnKodeKelompok;
            
            private global::System.Data.DataColumn columnNamaKelompok;
            
            private global::System.Data.DataColumn columnJenisStock;
            
            private global::System.Data.DataColumn columnSTHarga;
            
            private global::System.Data.DataColumn columnStTuslah;
            
            private global::System.Data.DataColumn columnKodeDokter;
            
            private global::System.Data.DataColumn columnJenisLaporan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukDataTable() {
                this.TableName = "KelompokProduk";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KelompokProdukDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected KelompokProdukDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoUrutColumn {
                get {
                    return this.columnNoUrut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompokColumn {
                get {
                    return this.columnKodeKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaKelompokColumn {
                get {
                    return this.columnNamaKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JenisStockColumn {
                get {
                    return this.columnJenisStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STHargaColumn {
                get {
                    return this.columnSTHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StTuslahColumn {
                get {
                    return this.columnStTuslah;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeDokterColumn {
                get {
                    return this.columnKodeDokter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JenisLaporanColumn {
                get {
                    return this.columnJenisLaporan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukRow this[int index] {
                get {
                    return ((KelompokProdukRow)(this.Rows[index]));
                }
            }
            
            public event KelompokProdukRowChangeEventHandler KelompokProdukRowChanging;
            
            public event KelompokProdukRowChangeEventHandler KelompokProdukRowChanged;
            
            public event KelompokProdukRowChangeEventHandler KelompokProdukRowDeleting;
            
            public event KelompokProdukRowChangeEventHandler KelompokProdukRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKelompokProdukRow(KelompokProdukRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukRow AddKelompokProdukRow(string KodeKelompok, string NamaKelompok, string JenisStock, string STHarga, bool StTuslah, string KodeDokter, string JenisLaporan) {
                KelompokProdukRow rowKelompokProdukRow = ((KelompokProdukRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        KodeKelompok,
                        NamaKelompok,
                        JenisStock,
                        STHarga,
                        StTuslah,
                        KodeDokter,
                        JenisLaporan};
                rowKelompokProdukRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKelompokProdukRow);
                return rowKelompokProdukRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukRow FindByKodeKelompok(string KodeKelompok) {
                return ((KelompokProdukRow)(this.Rows.Find(new object[] {
                            KodeKelompok})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KelompokProdukDataTable cln = ((KelompokProdukDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KelompokProdukDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNoUrut = base.Columns["NoUrut"];
                this.columnKodeKelompok = base.Columns["KodeKelompok"];
                this.columnNamaKelompok = base.Columns["NamaKelompok"];
                this.columnJenisStock = base.Columns["JenisStock"];
                this.columnSTHarga = base.Columns["STHarga"];
                this.columnStTuslah = base.Columns["StTuslah"];
                this.columnKodeDokter = base.Columns["KodeDokter"];
                this.columnJenisLaporan = base.Columns["JenisLaporan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNoUrut = new global::System.Data.DataColumn("NoUrut", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoUrut);
                this.columnKodeKelompok = new global::System.Data.DataColumn("KodeKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok);
                this.columnNamaKelompok = new global::System.Data.DataColumn("NamaKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaKelompok);
                this.columnJenisStock = new global::System.Data.DataColumn("JenisStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJenisStock);
                this.columnSTHarga = new global::System.Data.DataColumn("STHarga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTHarga);
                this.columnStTuslah = new global::System.Data.DataColumn("StTuslah", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStTuslah);
                this.columnKodeDokter = new global::System.Data.DataColumn("KodeDokter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeDokter);
                this.columnJenisLaporan = new global::System.Data.DataColumn("JenisLaporan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJenisLaporan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKodeKelompok}, true));
                this.columnNoUrut.AutoIncrement = true;
                this.columnNoUrut.AutoIncrementSeed = -1;
                this.columnNoUrut.AutoIncrementStep = -1;
                this.columnNoUrut.AllowDBNull = false;
                this.columnNoUrut.ReadOnly = true;
                this.columnKodeKelompok.AllowDBNull = false;
                this.columnKodeKelompok.Unique = true;
                this.columnKodeKelompok.MaxLength = 5;
                this.columnNamaKelompok.MaxLength = 40;
                this.columnJenisStock.MaxLength = 20;
                this.columnSTHarga.MaxLength = 1;
                this.columnKodeDokter.MaxLength = 10;
                this.columnJenisLaporan.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukRow NewKelompokProdukRow() {
                return ((KelompokProdukRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KelompokProdukRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KelompokProdukRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KelompokProdukRowChanged != null)) {
                    this.KelompokProdukRowChanged(this, new KelompokProdukRowChangeEvent(((KelompokProdukRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KelompokProdukRowChanging != null)) {
                    this.KelompokProdukRowChanging(this, new KelompokProdukRowChangeEvent(((KelompokProdukRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KelompokProdukRowDeleted != null)) {
                    this.KelompokProdukRowDeleted(this, new KelompokProdukRowChangeEvent(((KelompokProdukRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KelompokProdukRowDeleting != null)) {
                    this.KelompokProdukRowDeleting(this, new KelompokProdukRowChangeEvent(((KelompokProdukRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKelompokProdukRow(KelompokProdukRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KelompokProdukDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SubStockMovementDataTable : global::System.Data.TypedTableBase<SubStockMovementRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnKodeStockMovement;
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnsatuan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubStockMovementDataTable() {
                this.TableName = "SubStockMovement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubStockMovementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SubStockMovementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockMovementColumn {
                get {
                    return this.columnKodeStockMovement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn satuanColumn {
                get {
                    return this.columnsatuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubStockMovementRow this[int index] {
                get {
                    return ((SubStockMovementRow)(this.Rows[index]));
                }
            }
            
            public event SubStockMovementRowChangeEventHandler SubStockMovementRowChanging;
            
            public event SubStockMovementRowChangeEventHandler SubStockMovementRowChanged;
            
            public event SubStockMovementRowChangeEventHandler SubStockMovementRowDeleting;
            
            public event SubStockMovementRowChangeEventHandler SubStockMovementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSubStockMovementRow(SubStockMovementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubStockMovementRow AddSubStockMovementRow(stockMovementRow parentstockMovementRowBystockMovement_SubStockMovement, string KodeStock, double qty, string satuan) {
                SubStockMovementRow rowSubStockMovementRow = ((SubStockMovementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        KodeStock,
                        qty,
                        satuan};
                if ((parentstockMovementRowBystockMovement_SubStockMovement != null)) {
                    columnValuesArray[1] = parentstockMovementRowBystockMovement_SubStockMovement[0];
                }
                rowSubStockMovementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSubStockMovementRow);
                return rowSubStockMovementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SubStockMovementDataTable cln = ((SubStockMovementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SubStockMovementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnKodeStockMovement = base.Columns["KodeStockMovement"];
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnqty = base.Columns["qty"];
                this.columnsatuan = base.Columns["satuan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnKodeStockMovement = new global::System.Data.DataColumn("KodeStockMovement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStockMovement);
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnsatuan = new global::System.Data.DataColumn("satuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsatuan);
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnKodeStockMovement.AllowDBNull = false;
                this.columnKodeStockMovement.MaxLength = 20;
                this.columnKodeStock.MaxLength = 20;
                this.columnsatuan.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubStockMovementRow NewSubStockMovementRow() {
                return ((SubStockMovementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SubStockMovementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SubStockMovementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SubStockMovementRowChanged != null)) {
                    this.SubStockMovementRowChanged(this, new SubStockMovementRowChangeEvent(((SubStockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SubStockMovementRowChanging != null)) {
                    this.SubStockMovementRowChanging(this, new SubStockMovementRowChangeEvent(((SubStockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SubStockMovementRowDeleted != null)) {
                    this.SubStockMovementRowDeleted(this, new SubStockMovementRowChangeEvent(((SubStockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SubStockMovementRowDeleting != null)) {
                    this.SubStockMovementRowDeleting(this, new SubStockMovementRowChangeEvent(((SubStockMovementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSubStockMovementRow(SubStockMovementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SubStockMovementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class view_stock_movementDataTable : global::System.Data.TypedTableBase<view_stock_movementRow> {
            
            private global::System.Data.DataColumn columnnoBuktiMovement;
            
            private global::System.Data.DataColumn columnidGudangAsal;
            
            private global::System.Data.DataColumn columnidGudangTujuan;
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnNamaStock;
            
            private global::System.Data.DataColumn columnSatuan;
            
            private global::System.Data.DataColumn columnHargaBeli;
            
            private global::System.Data.DataColumn columnNilaiStock;
            
            private global::System.Data.DataColumn columnHargaJual1;
            
            private global::System.Data.DataColumn columnQty1;
            
            private global::System.Data.DataColumn columnHargaJual2;
            
            private global::System.Data.DataColumn columnQty2;
            
            private global::System.Data.DataColumn columnHargaJual3;
            
            private global::System.Data.DataColumn columnQty3;
            
            private global::System.Data.DataColumn columnHargaJual4;
            
            private global::System.Data.DataColumn columnQty4;
            
            private global::System.Data.DataColumn columnUkuran;
            
            private global::System.Data.DataColumn columnKodeSupplier;
            
            private global::System.Data.DataColumn columnHargaAwal;
            
            private global::System.Data.DataColumn columnKodeKelompok;
            
            private global::System.Data.DataColumn columnKodeKelompok2;
            
            private global::System.Data.DataColumn columncost;
            
            private global::System.Data.DataColumn columnHargaJual;
            
            private global::System.Data.DataColumn columndisc1;
            
            private global::System.Data.DataColumn columndisc2;
            
            private global::System.Data.DataColumn columndisc3;
            
            private global::System.Data.DataColumn columndiscrp;
            
            private global::System.Data.DataColumn columnppn;
            
            private global::System.Data.DataColumn columnnamaGudangAsal;
            
            private global::System.Data.DataColumn columnnamaGudangTujuan;
            
            private global::System.Data.DataColumn columnKodeBarcode;
            
            private global::System.Data.DataColumn columnStockMinimum;
            
            private global::System.Data.DataColumn columnqty;
            
            private global::System.Data.DataColumn columnExpr1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_movementDataTable() {
                this.TableName = "view_stock_movement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_stock_movementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected view_stock_movementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noBuktiMovementColumn {
                get {
                    return this.columnnoBuktiMovement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idGudangAsalColumn {
                get {
                    return this.columnidGudangAsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idGudangTujuanColumn {
                get {
                    return this.columnidGudangTujuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStockColumn {
                get {
                    return this.columnNamaStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatuanColumn {
                get {
                    return this.columnSatuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaBeliColumn {
                get {
                    return this.columnHargaBeli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NilaiStockColumn {
                get {
                    return this.columnNilaiStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual1Column {
                get {
                    return this.columnHargaJual1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty1Column {
                get {
                    return this.columnQty1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual2Column {
                get {
                    return this.columnHargaJual2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty2Column {
                get {
                    return this.columnQty2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual3Column {
                get {
                    return this.columnHargaJual3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty3Column {
                get {
                    return this.columnQty3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual4Column {
                get {
                    return this.columnHargaJual4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty4Column {
                get {
                    return this.columnQty4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UkuranColumn {
                get {
                    return this.columnUkuran;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeSupplierColumn {
                get {
                    return this.columnKodeSupplier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaAwalColumn {
                get {
                    return this.columnHargaAwal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompokColumn {
                get {
                    return this.columnKodeKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompok2Column {
                get {
                    return this.columnKodeKelompok2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costColumn {
                get {
                    return this.columncost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJualColumn {
                get {
                    return this.columnHargaJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc1Column {
                get {
                    return this.columndisc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc2Column {
                get {
                    return this.columndisc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc3Column {
                get {
                    return this.columndisc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discrpColumn {
                get {
                    return this.columndiscrp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ppnColumn {
                get {
                    return this.columnppn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namaGudangAsalColumn {
                get {
                    return this.columnnamaGudangAsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namaGudangTujuanColumn {
                get {
                    return this.columnnamaGudangTujuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeBarcodeColumn {
                get {
                    return this.columnKodeBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMinimumColumn {
                get {
                    return this.columnStockMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyColumn {
                get {
                    return this.columnqty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_movementRow this[int index] {
                get {
                    return ((view_stock_movementRow)(this.Rows[index]));
                }
            }
            
            public event view_stock_movementRowChangeEventHandler view_stock_movementRowChanging;
            
            public event view_stock_movementRowChangeEventHandler view_stock_movementRowChanged;
            
            public event view_stock_movementRowChangeEventHandler view_stock_movementRowDeleting;
            
            public event view_stock_movementRowChangeEventHandler view_stock_movementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addview_stock_movementRow(view_stock_movementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_movementRow Addview_stock_movementRow(
                        string noBuktiMovement, 
                        string idGudangAsal, 
                        string idGudangTujuan, 
                        string KodeStock, 
                        string NamaStock, 
                        string Satuan, 
                        double HargaBeli, 
                        double NilaiStock, 
                        double HargaJual1, 
                        double Qty1, 
                        double HargaJual2, 
                        double Qty2, 
                        double HargaJual3, 
                        double Qty3, 
                        double HargaJual4, 
                        double Qty4, 
                        string Ukuran, 
                        string KodeSupplier, 
                        double HargaAwal, 
                        string KodeKelompok, 
                        string KodeKelompok2, 
                        double cost, 
                        double HargaJual, 
                        double disc1, 
                        double disc2, 
                        double disc3, 
                        double discrp, 
                        double ppn, 
                        string namaGudangAsal, 
                        string namaGudangTujuan, 
                        string KodeBarcode, 
                        double StockMinimum, 
                        double qty, 
                        string Expr1) {
                view_stock_movementRow rowview_stock_movementRow = ((view_stock_movementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        noBuktiMovement,
                        idGudangAsal,
                        idGudangTujuan,
                        KodeStock,
                        NamaStock,
                        Satuan,
                        HargaBeli,
                        NilaiStock,
                        HargaJual1,
                        Qty1,
                        HargaJual2,
                        Qty2,
                        HargaJual3,
                        Qty3,
                        HargaJual4,
                        Qty4,
                        Ukuran,
                        KodeSupplier,
                        HargaAwal,
                        KodeKelompok,
                        KodeKelompok2,
                        cost,
                        HargaJual,
                        disc1,
                        disc2,
                        disc3,
                        discrp,
                        ppn,
                        namaGudangAsal,
                        namaGudangTujuan,
                        KodeBarcode,
                        StockMinimum,
                        qty,
                        Expr1};
                rowview_stock_movementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowview_stock_movementRow);
                return rowview_stock_movementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_movementRow FindBynoBuktiMovementKodeStock(string noBuktiMovement, string KodeStock) {
                return ((view_stock_movementRow)(this.Rows.Find(new object[] {
                            noBuktiMovement,
                            KodeStock})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                view_stock_movementDataTable cln = ((view_stock_movementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new view_stock_movementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnoBuktiMovement = base.Columns["noBuktiMovement"];
                this.columnidGudangAsal = base.Columns["idGudangAsal"];
                this.columnidGudangTujuan = base.Columns["idGudangTujuan"];
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnNamaStock = base.Columns["NamaStock"];
                this.columnSatuan = base.Columns["Satuan"];
                this.columnHargaBeli = base.Columns["HargaBeli"];
                this.columnNilaiStock = base.Columns["NilaiStock"];
                this.columnHargaJual1 = base.Columns["HargaJual1"];
                this.columnQty1 = base.Columns["Qty1"];
                this.columnHargaJual2 = base.Columns["HargaJual2"];
                this.columnQty2 = base.Columns["Qty2"];
                this.columnHargaJual3 = base.Columns["HargaJual3"];
                this.columnQty3 = base.Columns["Qty3"];
                this.columnHargaJual4 = base.Columns["HargaJual4"];
                this.columnQty4 = base.Columns["Qty4"];
                this.columnUkuran = base.Columns["Ukuran"];
                this.columnKodeSupplier = base.Columns["KodeSupplier"];
                this.columnHargaAwal = base.Columns["HargaAwal"];
                this.columnKodeKelompok = base.Columns["KodeKelompok"];
                this.columnKodeKelompok2 = base.Columns["KodeKelompok2"];
                this.columncost = base.Columns["cost"];
                this.columnHargaJual = base.Columns["HargaJual"];
                this.columndisc1 = base.Columns["disc1"];
                this.columndisc2 = base.Columns["disc2"];
                this.columndisc3 = base.Columns["disc3"];
                this.columndiscrp = base.Columns["discrp"];
                this.columnppn = base.Columns["ppn"];
                this.columnnamaGudangAsal = base.Columns["namaGudangAsal"];
                this.columnnamaGudangTujuan = base.Columns["namaGudangTujuan"];
                this.columnKodeBarcode = base.Columns["KodeBarcode"];
                this.columnStockMinimum = base.Columns["StockMinimum"];
                this.columnqty = base.Columns["qty"];
                this.columnExpr1 = base.Columns["Expr1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnoBuktiMovement = new global::System.Data.DataColumn("noBuktiMovement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoBuktiMovement);
                this.columnidGudangAsal = new global::System.Data.DataColumn("idGudangAsal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidGudangAsal);
                this.columnidGudangTujuan = new global::System.Data.DataColumn("idGudangTujuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidGudangTujuan);
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnNamaStock = new global::System.Data.DataColumn("NamaStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStock);
                this.columnSatuan = new global::System.Data.DataColumn("Satuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatuan);
                this.columnHargaBeli = new global::System.Data.DataColumn("HargaBeli", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaBeli);
                this.columnNilaiStock = new global::System.Data.DataColumn("NilaiStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNilaiStock);
                this.columnHargaJual1 = new global::System.Data.DataColumn("HargaJual1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual1);
                this.columnQty1 = new global::System.Data.DataColumn("Qty1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty1);
                this.columnHargaJual2 = new global::System.Data.DataColumn("HargaJual2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual2);
                this.columnQty2 = new global::System.Data.DataColumn("Qty2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty2);
                this.columnHargaJual3 = new global::System.Data.DataColumn("HargaJual3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual3);
                this.columnQty3 = new global::System.Data.DataColumn("Qty3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty3);
                this.columnHargaJual4 = new global::System.Data.DataColumn("HargaJual4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual4);
                this.columnQty4 = new global::System.Data.DataColumn("Qty4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty4);
                this.columnUkuran = new global::System.Data.DataColumn("Ukuran", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUkuran);
                this.columnKodeSupplier = new global::System.Data.DataColumn("KodeSupplier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeSupplier);
                this.columnHargaAwal = new global::System.Data.DataColumn("HargaAwal", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaAwal);
                this.columnKodeKelompok = new global::System.Data.DataColumn("KodeKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok);
                this.columnKodeKelompok2 = new global::System.Data.DataColumn("KodeKelompok2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok2);
                this.columncost = new global::System.Data.DataColumn("cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncost);
                this.columnHargaJual = new global::System.Data.DataColumn("HargaJual", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual);
                this.columndisc1 = new global::System.Data.DataColumn("disc1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc1);
                this.columndisc2 = new global::System.Data.DataColumn("disc2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc2);
                this.columndisc3 = new global::System.Data.DataColumn("disc3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc3);
                this.columndiscrp = new global::System.Data.DataColumn("discrp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscrp);
                this.columnppn = new global::System.Data.DataColumn("ppn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppn);
                this.columnnamaGudangAsal = new global::System.Data.DataColumn("namaGudangAsal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamaGudangAsal);
                this.columnnamaGudangTujuan = new global::System.Data.DataColumn("namaGudangTujuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamaGudangTujuan);
                this.columnKodeBarcode = new global::System.Data.DataColumn("KodeBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeBarcode);
                this.columnStockMinimum = new global::System.Data.DataColumn("StockMinimum", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMinimum);
                this.columnqty = new global::System.Data.DataColumn("qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqty);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnoBuktiMovement,
                                this.columnKodeStock}, true));
                this.columnnoBuktiMovement.AllowDBNull = false;
                this.columnnoBuktiMovement.MaxLength = 10;
                this.columnidGudangAsal.MaxLength = 10;
                this.columnidGudangTujuan.MaxLength = 10;
                this.columnKodeStock.AllowDBNull = false;
                this.columnKodeStock.MaxLength = 25;
                this.columnNamaStock.MaxLength = 50;
                this.columnSatuan.MaxLength = 15;
                this.columnUkuran.MaxLength = 20;
                this.columnKodeSupplier.MaxLength = 15;
                this.columnKodeKelompok.AllowDBNull = false;
                this.columnKodeKelompok.MaxLength = 5;
                this.columnKodeKelompok2.MaxLength = 50;
                this.columnnamaGudangAsal.MaxLength = 50;
                this.columnnamaGudangTujuan.MaxLength = 50;
                this.columnKodeBarcode.MaxLength = 50;
                this.columnExpr1.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_movementRow Newview_stock_movementRow() {
                return ((view_stock_movementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new view_stock_movementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(view_stock_movementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.view_stock_movementRowChanged != null)) {
                    this.view_stock_movementRowChanged(this, new view_stock_movementRowChangeEvent(((view_stock_movementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.view_stock_movementRowChanging != null)) {
                    this.view_stock_movementRowChanging(this, new view_stock_movementRowChangeEvent(((view_stock_movementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.view_stock_movementRowDeleted != null)) {
                    this.view_stock_movementRowDeleted(this, new view_stock_movementRowChangeEvent(((view_stock_movementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.view_stock_movementRowDeleting != null)) {
                    this.view_stock_movementRowDeleting(this, new view_stock_movementRowChangeEvent(((view_stock_movementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeview_stock_movementRow(view_stock_movementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "view_stock_movementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_Saldo_Stock_akhir_unpivotDataTable : global::System.Data.TypedTableBase<View_Saldo_Stock_akhir_unpivotRow> {
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnNamaStock;
            
            private global::System.Data.DataColumn columnDeskripsi;
            
            private global::System.Data.DataColumn columnNilai;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Saldo_Stock_akhir_unpivotDataTable() {
                this.TableName = "View_Saldo_Stock_akhir_unpivot";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Saldo_Stock_akhir_unpivotDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_Saldo_Stock_akhir_unpivotDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStockColumn {
                get {
                    return this.columnNamaStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeskripsiColumn {
                get {
                    return this.columnDeskripsi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NilaiColumn {
                get {
                    return this.columnNilai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Saldo_Stock_akhir_unpivotRow this[int index] {
                get {
                    return ((View_Saldo_Stock_akhir_unpivotRow)(this.Rows[index]));
                }
            }
            
            public event View_Saldo_Stock_akhir_unpivotRowChangeEventHandler View_Saldo_Stock_akhir_unpivotRowChanging;
            
            public event View_Saldo_Stock_akhir_unpivotRowChangeEventHandler View_Saldo_Stock_akhir_unpivotRowChanged;
            
            public event View_Saldo_Stock_akhir_unpivotRowChangeEventHandler View_Saldo_Stock_akhir_unpivotRowDeleting;
            
            public event View_Saldo_Stock_akhir_unpivotRowChangeEventHandler View_Saldo_Stock_akhir_unpivotRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_Saldo_Stock_akhir_unpivotRow(View_Saldo_Stock_akhir_unpivotRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Saldo_Stock_akhir_unpivotRow AddView_Saldo_Stock_akhir_unpivotRow(StockRow parentStockRowByStock_View_Saldo_Stock_akhir_unpivot, string NamaStock, string Deskripsi, double Nilai) {
                View_Saldo_Stock_akhir_unpivotRow rowView_Saldo_Stock_akhir_unpivotRow = ((View_Saldo_Stock_akhir_unpivotRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NamaStock,
                        Deskripsi,
                        Nilai};
                if ((parentStockRowByStock_View_Saldo_Stock_akhir_unpivot != null)) {
                    columnValuesArray[0] = parentStockRowByStock_View_Saldo_Stock_akhir_unpivot[0];
                }
                rowView_Saldo_Stock_akhir_unpivotRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_Saldo_Stock_akhir_unpivotRow);
                return rowView_Saldo_Stock_akhir_unpivotRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_Saldo_Stock_akhir_unpivotDataTable cln = ((View_Saldo_Stock_akhir_unpivotDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_Saldo_Stock_akhir_unpivotDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnNamaStock = base.Columns["NamaStock"];
                this.columnDeskripsi = base.Columns["Deskripsi"];
                this.columnNilai = base.Columns["Nilai"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnNamaStock = new global::System.Data.DataColumn("NamaStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStock);
                this.columnDeskripsi = new global::System.Data.DataColumn("Deskripsi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeskripsi);
                this.columnNilai = new global::System.Data.DataColumn("Nilai", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNilai);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKodeStock,
                                this.columnDeskripsi}, false));
                this.columnKodeStock.AllowDBNull = false;
                this.columnKodeStock.MaxLength = 25;
                this.columnNamaStock.MaxLength = 50;
                this.columnDeskripsi.ReadOnly = true;
                this.columnDeskripsi.MaxLength = 128;
                this.columnNilai.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Saldo_Stock_akhir_unpivotRow NewView_Saldo_Stock_akhir_unpivotRow() {
                return ((View_Saldo_Stock_akhir_unpivotRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_Saldo_Stock_akhir_unpivotRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_Saldo_Stock_akhir_unpivotRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_Saldo_Stock_akhir_unpivotRowChanged != null)) {
                    this.View_Saldo_Stock_akhir_unpivotRowChanged(this, new View_Saldo_Stock_akhir_unpivotRowChangeEvent(((View_Saldo_Stock_akhir_unpivotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_Saldo_Stock_akhir_unpivotRowChanging != null)) {
                    this.View_Saldo_Stock_akhir_unpivotRowChanging(this, new View_Saldo_Stock_akhir_unpivotRowChangeEvent(((View_Saldo_Stock_akhir_unpivotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_Saldo_Stock_akhir_unpivotRowDeleted != null)) {
                    this.View_Saldo_Stock_akhir_unpivotRowDeleted(this, new View_Saldo_Stock_akhir_unpivotRowChangeEvent(((View_Saldo_Stock_akhir_unpivotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_Saldo_Stock_akhir_unpivotRowDeleting != null)) {
                    this.View_Saldo_Stock_akhir_unpivotRowDeleting(this, new View_Saldo_Stock_akhir_unpivotRowChangeEvent(((View_Saldo_Stock_akhir_unpivotRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_Saldo_Stock_akhir_unpivotRow(View_Saldo_Stock_akhir_unpivotRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_Saldo_Stock_akhir_unpivotDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class view_stockMovement_GudangDataTable : global::System.Data.TypedTableBase<view_stockMovement_GudangRow> {
            
            private global::System.Data.DataColumn columnnoBukti;
            
            private global::System.Data.DataColumn columntanggal;
            
            private global::System.Data.DataColumn columnidGudangAsal;
            
            private global::System.Data.DataColumn columnNamaCabangAsal;
            
            private global::System.Data.DataColumn columnidGudangTujuan;
            
            private global::System.Data.DataColumn columnNamaCabangTujuan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stockMovement_GudangDataTable() {
                this.TableName = "view_stockMovement_Gudang";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_stockMovement_GudangDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected view_stockMovement_GudangDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noBuktiColumn {
                get {
                    return this.columnnoBukti;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tanggalColumn {
                get {
                    return this.columntanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idGudangAsalColumn {
                get {
                    return this.columnidGudangAsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaCabangAsalColumn {
                get {
                    return this.columnNamaCabangAsal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idGudangTujuanColumn {
                get {
                    return this.columnidGudangTujuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaCabangTujuanColumn {
                get {
                    return this.columnNamaCabangTujuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stockMovement_GudangRow this[int index] {
                get {
                    return ((view_stockMovement_GudangRow)(this.Rows[index]));
                }
            }
            
            public event view_stockMovement_GudangRowChangeEventHandler view_stockMovement_GudangRowChanging;
            
            public event view_stockMovement_GudangRowChangeEventHandler view_stockMovement_GudangRowChanged;
            
            public event view_stockMovement_GudangRowChangeEventHandler view_stockMovement_GudangRowDeleting;
            
            public event view_stockMovement_GudangRowChangeEventHandler view_stockMovement_GudangRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addview_stockMovement_GudangRow(view_stockMovement_GudangRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stockMovement_GudangRow Addview_stockMovement_GudangRow(string noBukti, System.DateTime tanggal, string idGudangAsal, string NamaCabangAsal, string idGudangTujuan, string NamaCabangTujuan) {
                view_stockMovement_GudangRow rowview_stockMovement_GudangRow = ((view_stockMovement_GudangRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        noBukti,
                        tanggal,
                        idGudangAsal,
                        NamaCabangAsal,
                        idGudangTujuan,
                        NamaCabangTujuan};
                rowview_stockMovement_GudangRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowview_stockMovement_GudangRow);
                return rowview_stockMovement_GudangRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stockMovement_GudangRow FindBynoBukti(string noBukti) {
                return ((view_stockMovement_GudangRow)(this.Rows.Find(new object[] {
                            noBukti})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                view_stockMovement_GudangDataTable cln = ((view_stockMovement_GudangDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new view_stockMovement_GudangDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnnoBukti = base.Columns["noBukti"];
                this.columntanggal = base.Columns["tanggal"];
                this.columnidGudangAsal = base.Columns["idGudangAsal"];
                this.columnNamaCabangAsal = base.Columns["NamaCabangAsal"];
                this.columnidGudangTujuan = base.Columns["idGudangTujuan"];
                this.columnNamaCabangTujuan = base.Columns["NamaCabangTujuan"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnnoBukti = new global::System.Data.DataColumn("noBukti", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoBukti);
                this.columntanggal = new global::System.Data.DataColumn("tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntanggal);
                this.columnidGudangAsal = new global::System.Data.DataColumn("idGudangAsal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidGudangAsal);
                this.columnNamaCabangAsal = new global::System.Data.DataColumn("NamaCabangAsal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaCabangAsal);
                this.columnidGudangTujuan = new global::System.Data.DataColumn("idGudangTujuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidGudangTujuan);
                this.columnNamaCabangTujuan = new global::System.Data.DataColumn("NamaCabangTujuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaCabangTujuan);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnoBukti}, true));
                this.columnnoBukti.AllowDBNull = false;
                this.columnnoBukti.Unique = true;
                this.columnnoBukti.MaxLength = 20;
                this.columnidGudangAsal.MaxLength = 10;
                this.columnNamaCabangAsal.MaxLength = 50;
                this.columnidGudangTujuan.MaxLength = 10;
                this.columnNamaCabangTujuan.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stockMovement_GudangRow Newview_stockMovement_GudangRow() {
                return ((view_stockMovement_GudangRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new view_stockMovement_GudangRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(view_stockMovement_GudangRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.view_stockMovement_GudangRowChanged != null)) {
                    this.view_stockMovement_GudangRowChanged(this, new view_stockMovement_GudangRowChangeEvent(((view_stockMovement_GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.view_stockMovement_GudangRowChanging != null)) {
                    this.view_stockMovement_GudangRowChanging(this, new view_stockMovement_GudangRowChangeEvent(((view_stockMovement_GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.view_stockMovement_GudangRowDeleted != null)) {
                    this.view_stockMovement_GudangRowDeleted(this, new view_stockMovement_GudangRowChangeEvent(((view_stockMovement_GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.view_stockMovement_GudangRowDeleting != null)) {
                    this.view_stockMovement_GudangRowDeleting(this, new view_stockMovement_GudangRowChangeEvent(((view_stockMovement_GudangRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeview_stockMovement_GudangRow(view_stockMovement_GudangRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "view_stockMovement_GudangDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_stock_saldo_lengkapDataTable : global::System.Data.TypedTableBase<View_stock_saldo_lengkapRow> {
            
            private global::System.Data.DataColumn columnKodeStock;
            
            private global::System.Data.DataColumn columnNamaStock;
            
            private global::System.Data.DataColumn columnJumlahStock;
            
            private global::System.Data.DataColumn columnSatuan;
            
            private global::System.Data.DataColumn columnHargaBeli;
            
            private global::System.Data.DataColumn columnHargaJual1;
            
            private global::System.Data.DataColumn columnQty1;
            
            private global::System.Data.DataColumn columnHargaJual2;
            
            private global::System.Data.DataColumn columnQty2;
            
            private global::System.Data.DataColumn columnHargaJual3;
            
            private global::System.Data.DataColumn columnQty3;
            
            private global::System.Data.DataColumn columnHargaJual4;
            
            private global::System.Data.DataColumn columnQty4;
            
            private global::System.Data.DataColumn columnStockMinimum;
            
            private global::System.Data.DataColumn columnKodeBarcode;
            
            private global::System.Data.DataColumn columnHargaJual;
            
            private global::System.Data.DataColumn columnKodeKelompok;
            
            private global::System.Data.DataColumn columndisc1;
            
            private global::System.Data.DataColumn columndisc3;
            
            private global::System.Data.DataColumn columndisc2;
            
            private global::System.Data.DataColumn columndiscrp;
            
            private global::System.Data.DataColumn columnppn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_stock_saldo_lengkapDataTable() {
                this.TableName = "View_stock_saldo_lengkap";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_stock_saldo_lengkapDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_stock_saldo_lengkapDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeStockColumn {
                get {
                    return this.columnKodeStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NamaStockColumn {
                get {
                    return this.columnNamaStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JumlahStockColumn {
                get {
                    return this.columnJumlahStock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SatuanColumn {
                get {
                    return this.columnSatuan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaBeliColumn {
                get {
                    return this.columnHargaBeli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual1Column {
                get {
                    return this.columnHargaJual1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty1Column {
                get {
                    return this.columnQty1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual2Column {
                get {
                    return this.columnHargaJual2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty2Column {
                get {
                    return this.columnQty2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual3Column {
                get {
                    return this.columnHargaJual3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty3Column {
                get {
                    return this.columnQty3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJual4Column {
                get {
                    return this.columnHargaJual4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Qty4Column {
                get {
                    return this.columnQty4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockMinimumColumn {
                get {
                    return this.columnStockMinimum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeBarcodeColumn {
                get {
                    return this.columnKodeBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HargaJualColumn {
                get {
                    return this.columnHargaJual;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeKelompokColumn {
                get {
                    return this.columnKodeKelompok;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc1Column {
                get {
                    return this.columndisc1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc3Column {
                get {
                    return this.columndisc3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn disc2Column {
                get {
                    return this.columndisc2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn discrpColumn {
                get {
                    return this.columndiscrp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ppnColumn {
                get {
                    return this.columnppn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_stock_saldo_lengkapRow this[int index] {
                get {
                    return ((View_stock_saldo_lengkapRow)(this.Rows[index]));
                }
            }
            
            public event View_stock_saldo_lengkapRowChangeEventHandler View_stock_saldo_lengkapRowChanging;
            
            public event View_stock_saldo_lengkapRowChangeEventHandler View_stock_saldo_lengkapRowChanged;
            
            public event View_stock_saldo_lengkapRowChangeEventHandler View_stock_saldo_lengkapRowDeleting;
            
            public event View_stock_saldo_lengkapRowChangeEventHandler View_stock_saldo_lengkapRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_stock_saldo_lengkapRow(View_stock_saldo_lengkapRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_stock_saldo_lengkapRow AddView_stock_saldo_lengkapRow(
                        string KodeStock, 
                        string NamaStock, 
                        double JumlahStock, 
                        string Satuan, 
                        double HargaBeli, 
                        double HargaJual1, 
                        double Qty1, 
                        double HargaJual2, 
                        double Qty2, 
                        double HargaJual3, 
                        double Qty3, 
                        double HargaJual4, 
                        double Qty4, 
                        double StockMinimum, 
                        string KodeBarcode, 
                        double HargaJual, 
                        string KodeKelompok, 
                        double disc1, 
                        double disc3, 
                        double disc2, 
                        double discrp, 
                        double ppn) {
                View_stock_saldo_lengkapRow rowView_stock_saldo_lengkapRow = ((View_stock_saldo_lengkapRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeStock,
                        NamaStock,
                        JumlahStock,
                        Satuan,
                        HargaBeli,
                        HargaJual1,
                        Qty1,
                        HargaJual2,
                        Qty2,
                        HargaJual3,
                        Qty3,
                        HargaJual4,
                        Qty4,
                        StockMinimum,
                        KodeBarcode,
                        HargaJual,
                        KodeKelompok,
                        disc1,
                        disc3,
                        disc2,
                        discrp,
                        ppn};
                rowView_stock_saldo_lengkapRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_stock_saldo_lengkapRow);
                return rowView_stock_saldo_lengkapRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_stock_saldo_lengkapRow FindByKodeStock(string KodeStock) {
                return ((View_stock_saldo_lengkapRow)(this.Rows.Find(new object[] {
                            KodeStock})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_stock_saldo_lengkapDataTable cln = ((View_stock_saldo_lengkapDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_stock_saldo_lengkapDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeStock = base.Columns["KodeStock"];
                this.columnNamaStock = base.Columns["NamaStock"];
                this.columnJumlahStock = base.Columns["JumlahStock"];
                this.columnSatuan = base.Columns["Satuan"];
                this.columnHargaBeli = base.Columns["HargaBeli"];
                this.columnHargaJual1 = base.Columns["HargaJual1"];
                this.columnQty1 = base.Columns["Qty1"];
                this.columnHargaJual2 = base.Columns["HargaJual2"];
                this.columnQty2 = base.Columns["Qty2"];
                this.columnHargaJual3 = base.Columns["HargaJual3"];
                this.columnQty3 = base.Columns["Qty3"];
                this.columnHargaJual4 = base.Columns["HargaJual4"];
                this.columnQty4 = base.Columns["Qty4"];
                this.columnStockMinimum = base.Columns["StockMinimum"];
                this.columnKodeBarcode = base.Columns["KodeBarcode"];
                this.columnHargaJual = base.Columns["HargaJual"];
                this.columnKodeKelompok = base.Columns["KodeKelompok"];
                this.columndisc1 = base.Columns["disc1"];
                this.columndisc3 = base.Columns["disc3"];
                this.columndisc2 = base.Columns["disc2"];
                this.columndiscrp = base.Columns["discrp"];
                this.columnppn = base.Columns["ppn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeStock = new global::System.Data.DataColumn("KodeStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeStock);
                this.columnNamaStock = new global::System.Data.DataColumn("NamaStock", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNamaStock);
                this.columnJumlahStock = new global::System.Data.DataColumn("JumlahStock", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJumlahStock);
                this.columnSatuan = new global::System.Data.DataColumn("Satuan", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSatuan);
                this.columnHargaBeli = new global::System.Data.DataColumn("HargaBeli", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaBeli);
                this.columnHargaJual1 = new global::System.Data.DataColumn("HargaJual1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual1);
                this.columnQty1 = new global::System.Data.DataColumn("Qty1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty1);
                this.columnHargaJual2 = new global::System.Data.DataColumn("HargaJual2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual2);
                this.columnQty2 = new global::System.Data.DataColumn("Qty2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty2);
                this.columnHargaJual3 = new global::System.Data.DataColumn("HargaJual3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual3);
                this.columnQty3 = new global::System.Data.DataColumn("Qty3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty3);
                this.columnHargaJual4 = new global::System.Data.DataColumn("HargaJual4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual4);
                this.columnQty4 = new global::System.Data.DataColumn("Qty4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty4);
                this.columnStockMinimum = new global::System.Data.DataColumn("StockMinimum", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockMinimum);
                this.columnKodeBarcode = new global::System.Data.DataColumn("KodeBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeBarcode);
                this.columnHargaJual = new global::System.Data.DataColumn("HargaJual", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHargaJual);
                this.columnKodeKelompok = new global::System.Data.DataColumn("KodeKelompok", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeKelompok);
                this.columndisc1 = new global::System.Data.DataColumn("disc1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc1);
                this.columndisc3 = new global::System.Data.DataColumn("disc3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc3);
                this.columndisc2 = new global::System.Data.DataColumn("disc2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisc2);
                this.columndiscrp = new global::System.Data.DataColumn("discrp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiscrp);
                this.columnppn = new global::System.Data.DataColumn("ppn", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnppn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKodeStock}, true));
                this.columnKodeStock.AllowDBNull = false;
                this.columnKodeStock.Unique = true;
                this.columnKodeStock.MaxLength = 25;
                this.columnNamaStock.MaxLength = 50;
                this.columnJumlahStock.ReadOnly = true;
                this.columnSatuan.MaxLength = 15;
                this.columnKodeBarcode.MaxLength = 50;
                this.columnKodeKelompok.AllowDBNull = false;
                this.columnKodeKelompok.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_stock_saldo_lengkapRow NewView_stock_saldo_lengkapRow() {
                return ((View_stock_saldo_lengkapRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_stock_saldo_lengkapRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_stock_saldo_lengkapRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_stock_saldo_lengkapRowChanged != null)) {
                    this.View_stock_saldo_lengkapRowChanged(this, new View_stock_saldo_lengkapRowChangeEvent(((View_stock_saldo_lengkapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_stock_saldo_lengkapRowChanging != null)) {
                    this.View_stock_saldo_lengkapRowChanging(this, new View_stock_saldo_lengkapRowChangeEvent(((View_stock_saldo_lengkapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_stock_saldo_lengkapRowDeleted != null)) {
                    this.View_stock_saldo_lengkapRowDeleted(this, new View_stock_saldo_lengkapRowChangeEvent(((View_stock_saldo_lengkapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_stock_saldo_lengkapRowDeleting != null)) {
                    this.View_stock_saldo_lengkapRowDeleting(this, new View_stock_saldo_lengkapRowChangeEvent(((View_stock_saldo_lengkapRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_stock_saldo_lengkapRow(View_stock_saldo_lengkapRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Stock_Data ds = new Stock_Data();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_stock_saldo_lengkapDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockGudangRow : global::System.Data.DataRow {
            
            private StockGudangDataTable tableStockGudang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockGudangRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockGudang = ((StockGudangDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableStockGudang.idColumn]));
                }
                set {
                    this[this.tableStockGudang.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id_gudang {
                get {
                    try {
                        return ((string)(this[this.tableStockGudang.id_gudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id_gudang\' in table \'StockGudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockGudang.id_gudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    try {
                        return ((string)(this[this.tableStockGudang.KodeStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeStock\' in table \'StockGudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockGudang.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double jumlah {
                get {
                    try {
                        return ((double)(this[this.tableStockGudang.jumlahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jumlah\' in table \'StockGudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockGudang.jumlahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangRow GudangRow {
                get {
                    return ((GudangRow)(this.GetParentRow(this.Table.ParentRelations["StockGudang_Gudang"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["StockGudang_Gudang"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow StockRow {
                get {
                    return ((StockRow)(this.GetParentRow(this.Table.ParentRelations["StockGudang_Stock"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["StockGudang_Stock"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isid_gudangNull() {
                return this.IsNull(this.tableStockGudang.id_gudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setid_gudangNull() {
                this[this.tableStockGudang.id_gudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeStockNull() {
                return this.IsNull(this.tableStockGudang.KodeStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeStockNull() {
                this[this.tableStockGudang.KodeStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjumlahNull() {
                return this.IsNull(this.tableStockGudang.jumlahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjumlahNull() {
                this[this.tableStockGudang.jumlahColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GudangRow : global::System.Data.DataRow {
            
            private GudangDataTable tableGudang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GudangRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGudang = ((GudangDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableGudang.idColumn]));
                }
                set {
                    this[this.tableGudang.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string nama {
                get {
                    try {
                        return ((string)(this[this.tableGudang.namaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nama\' in table \'Gudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGudang.namaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamaNull() {
                return this.IsNull(this.tableGudang.namaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamaNull() {
                this[this.tableGudang.namaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangRow[] GetStockGudangRows() {
                if ((this.Table.ChildRelations["StockGudang_Gudang"] == null)) {
                    return new StockGudangRow[0];
                }
                else {
                    return ((StockGudangRow[])(base.GetChildRows(this.Table.ChildRelations["StockGudang_Gudang"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockOpnameRow : global::System.Data.DataRow {
            
            private StockOpnameDataTable tableStockOpname;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockOpnameRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStockOpname = ((StockOpnameDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBukti {
                get {
                    return ((string)(this[this.tableStockOpname.NoBuktiColumn]));
                }
                set {
                    this[this.tableStockOpname.NoBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableStockOpname.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    try {
                        return ((string)(this[this.tableStockOpname.KodeStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeStock\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockAwal {
                get {
                    try {
                        return ((double)(this[this.tableStockOpname.StockAwalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockAwal\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.StockAwalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockOpname {
                get {
                    try {
                        return ((double)(this[this.tableStockOpname.StockOpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockOpname\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.StockOpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Selisih {
                get {
                    try {
                        return ((double)(this[this.tableStockOpname.SelisihColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Selisih\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.SelisihColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Harga {
                get {
                    try {
                        return ((double)(this[this.tableStockOpname.HargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Harga\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.HargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Jumlah {
                get {
                    try {
                        return ((double)(this[this.tableStockOpname.JumlahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jumlah\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.JumlahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Status {
                get {
                    try {
                        return ((bool)(this[this.tableStockOpname.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartNo {
                get {
                    try {
                        return ((string)(this[this.tableStockOpname.PartNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartNo\' in table \'StockOpname\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStockOpname.PartNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableStockOpname.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableStockOpname.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeStockNull() {
                return this.IsNull(this.tableStockOpname.KodeStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeStockNull() {
                this[this.tableStockOpname.KodeStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAwalNull() {
                return this.IsNull(this.tableStockOpname.StockAwalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAwalNull() {
                this[this.tableStockOpname.StockAwalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockOpnameNull() {
                return this.IsNull(this.tableStockOpname.StockOpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockOpnameNull() {
                this[this.tableStockOpname.StockOpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelisihNull() {
                return this.IsNull(this.tableStockOpname.SelisihColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelisihNull() {
                this[this.tableStockOpname.SelisihColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaNull() {
                return this.IsNull(this.tableStockOpname.HargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaNull() {
                this[this.tableStockOpname.HargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahNull() {
                return this.IsNull(this.tableStockOpname.JumlahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahNull() {
                this[this.tableStockOpname.JumlahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableStockOpname.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableStockOpname.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartNoNull() {
                return this.IsNull(this.tableStockOpname.PartNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartNoNull() {
                this[this.tableStockOpname.PartNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class view_stock_gudangRow : global::System.Data.DataRow {
            
            private view_stock_gudangDataTable tableview_stock_gudang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_stock_gudangRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableview_stock_gudang = ((view_stock_gudangDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableview_stock_gudang.idColumn]));
                }
                set {
                    this[this.tableview_stock_gudang.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id_gudang {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_gudang.id_gudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id_gudang\' in table \'view_stock_gudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_gudang.id_gudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_gudang.KodeStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeStock\' in table \'view_stock_gudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_gudang.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double jumlah {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_gudang.jumlahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'jumlah\' in table \'view_stock_gudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_gudang.jumlahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string namaGudang {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_gudang.namaGudangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'namaGudang\' in table \'view_stock_gudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_gudang.namaGudangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow StockRow {
                get {
                    return ((StockRow)(this.GetParentRow(this.Table.ParentRelations["Stock_view_stock_gudang"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Stock_view_stock_gudang"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isid_gudangNull() {
                return this.IsNull(this.tableview_stock_gudang.id_gudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setid_gudangNull() {
                this[this.tableview_stock_gudang.id_gudangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeStockNull() {
                return this.IsNull(this.tableview_stock_gudang.KodeStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeStockNull() {
                this[this.tableview_stock_gudang.KodeStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsjumlahNull() {
                return this.IsNull(this.tableview_stock_gudang.jumlahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetjumlahNull() {
                this[this.tableview_stock_gudang.jumlahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamaGudangNull() {
                return this.IsNull(this.tableview_stock_gudang.namaGudangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamaGudangNull() {
                this[this.tableview_stock_gudang.namaGudangColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stockMovementRow : global::System.Data.DataRow {
            
            private stockMovementDataTable tablestockMovement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stockMovementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestockMovement = ((stockMovementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string no_bukti {
                get {
                    return ((string)(this[this.tablestockMovement.no_buktiColumn]));
                }
                set {
                    this[this.tablestockMovement.no_buktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablestockMovement.tanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tanggal\' in table \'stockMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockMovement.tanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id_gudang_asal {
                get {
                    try {
                        return ((string)(this[this.tablestockMovement.id_gudang_asalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id_gudang_asal\' in table \'stockMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockMovement.id_gudang_asalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id_gudang_tujuan {
                get {
                    try {
                        return ((string)(this[this.tablestockMovement.id_gudang_tujuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id_gudang_tujuan\' in table \'stockMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestockMovement.id_gudang_tujuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstanggalNull() {
                return this.IsNull(this.tablestockMovement.tanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettanggalNull() {
                this[this.tablestockMovement.tanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isid_gudang_asalNull() {
                return this.IsNull(this.tablestockMovement.id_gudang_asalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setid_gudang_asalNull() {
                this[this.tablestockMovement.id_gudang_asalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isid_gudang_tujuanNull() {
                return this.IsNull(this.tablestockMovement.id_gudang_tujuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setid_gudang_tujuanNull() {
                this[this.tablestockMovement.id_gudang_tujuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubStockMovementRow[] GetSubStockMovementRows() {
                if ((this.Table.ChildRelations["stockMovement_SubStockMovement"] == null)) {
                    return new SubStockMovementRow[0];
                }
                else {
                    return ((SubStockMovementRow[])(base.GetChildRows(this.Table.ChildRelations["stockMovement_SubStockMovement"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SatuanRow : global::System.Data.DataRow {
            
            private SatuanDataTable tableSatuan;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SatuanRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSatuan = ((SatuanDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaSatuan {
                get {
                    return ((string)(this[this.tableSatuan.NamaSatuanColumn]));
                }
                set {
                    this[this.tableSatuan.NamaSatuanColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class StockRow : global::System.Data.DataRow {
            
            private StockDataTable tableStock;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal StockRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStock = ((StockDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    return ((string)(this[this.tableStock.KodeStockColumn]));
                }
                set {
                    this[this.tableStock.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStock {
                get {
                    try {
                        return ((string)(this[this.tableStock.NamaStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStock\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.NamaStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Satuan {
                get {
                    try {
                        return ((string)(this[this.tableStock.SatuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Satuan\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.SatuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JumlahStock {
                get {
                    try {
                        return ((double)(this[this.tableStock.JumlahStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JumlahStock\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.JumlahStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double PV {
                get {
                    try {
                        return ((double)(this[this.tableStock.PVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PV\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.PVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double BV {
                get {
                    try {
                        return ((double)(this[this.tableStock.BVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BV\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.BVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockAkhir {
                get {
                    try {
                        return ((double)(this[this.tableStock.StockAkhirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockAkhir\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.StockAkhirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaBeli {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaBeliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaBeli\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaBeliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NilaiStock {
                get {
                    try {
                        return ((double)(this[this.tableStock.NilaiStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NilaiStock\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.NilaiStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual1 {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaJual1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual1\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaJual1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual2 {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaJual2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual2\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaJual2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual3 {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaJual3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual3\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaJual3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ukuran {
                get {
                    try {
                        return ((string)(this[this.tableStock.UkuranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ukuran\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.UkuranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockMinimum {
                get {
                    try {
                        return ((double)(this[this.tableStock.StockMinimumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockMinimum\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.StockMinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Isi {
                get {
                    try {
                        return ((double)(this[this.tableStock.IsiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Isi\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.IsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SatuanIsi {
                get {
                    try {
                        return ((string)(this[this.tableStock.SatuanIsiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SatuanIsi\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.SatuanIsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeBarcode {
                get {
                    try {
                        return ((string)(this[this.tableStock.KodeBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeBarcode\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.KodeBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockPesanan {
                get {
                    try {
                        return ((double)(this[this.tableStock.StockPesananColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockPesanan\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.StockPesananColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JumlahPemesanan {
                get {
                    try {
                        return ((double)(this[this.tableStock.JumlahPemesananColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JumlahPemesanan\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.JumlahPemesananColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JumlahPesanan {
                get {
                    try {
                        return ((double)(this[this.tableStock.JumlahPesananColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JumlahPesanan\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.JumlahPesananColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSupplier {
                get {
                    try {
                        return ((string)(this[this.tableStock.KodeSupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSupplier\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.KodeSupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaRata {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaRataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaRata\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaRataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaAwal {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaAwalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaAwal\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaAwalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NilaiAwal {
                get {
                    try {
                        return ((double)(this[this.tableStock.NilaiAwalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NilaiAwal\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.NilaiAwalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double KomisiSalesman {
                get {
                    try {
                        return ((double)(this[this.tableStock.KomisiSalesmanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KomisiSalesman\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.KomisiSalesmanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaFileGambar1 {
                get {
                    try {
                        return ((string)(this[this.tableStock.NamaFileGambar1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaFileGambar1\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.NamaFileGambar1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaFileGambar2 {
                get {
                    try {
                        return ((string)(this[this.tableStock.NamaFileGambar2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaFileGambar2\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.NamaFileGambar2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StRacik {
                get {
                    try {
                        return ((bool)(this[this.tableStock.StRacikColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StRacik\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.StRacikColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kegunaan {
                get {
                    try {
                        return ((string)(this[this.tableStock.KegunaanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kegunaan\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.KegunaanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok {
                get {
                    return ((string)(this[this.tableStock.KodeKelompokColumn]));
                }
                set {
                    this[this.tableStock.KodeKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty1 {
                get {
                    try {
                        return ((double)(this[this.tableStock.Qty1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty1\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.Qty1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty2 {
                get {
                    try {
                        return ((double)(this[this.tableStock.Qty2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty2\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.Qty2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual4 {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaJual4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual4\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaJual4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty3 {
                get {
                    try {
                        return ((double)(this[this.tableStock.Qty3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty3\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.Qty3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty4 {
                get {
                    try {
                        return ((double)(this[this.tableStock.Qty4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty4\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.Qty4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok2 {
                get {
                    try {
                        return ((string)(this[this.tableStock.KodeKelompok2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeKelompok2\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.KodeKelompok2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cost {
                get {
                    try {
                        return ((double)(this[this.tableStock.costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cost\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual {
                get {
                    try {
                        return ((double)(this[this.tableStock.HargaJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.HargaJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc1 {
                get {
                    try {
                        return ((double)(this[this.tableStock.disc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc1\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.disc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc2 {
                get {
                    try {
                        return ((double)(this[this.tableStock.disc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc2\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.disc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ppn {
                get {
                    try {
                        return ((double)(this[this.tableStock.ppnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppn\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.ppnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double discrp {
                get {
                    try {
                        return ((double)(this[this.tableStock.discrpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discrp\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.discrpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc3 {
                get {
                    try {
                        return ((double)(this[this.tableStock.disc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc3\' in table \'Stock\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStock.disc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukRow KelompokProdukRow {
                get {
                    return ((KelompokProdukRow)(this.GetParentRow(this.Table.ParentRelations["KelompokProduk_Stock"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["KelompokProduk_Stock"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStockNull() {
                return this.IsNull(this.tableStock.NamaStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStockNull() {
                this[this.tableStock.NamaStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatuanNull() {
                return this.IsNull(this.tableStock.SatuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatuanNull() {
                this[this.tableStock.SatuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahStockNull() {
                return this.IsNull(this.tableStock.JumlahStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahStockNull() {
                this[this.tableStock.JumlahStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPVNull() {
                return this.IsNull(this.tableStock.PVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPVNull() {
                this[this.tableStock.PVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBVNull() {
                return this.IsNull(this.tableStock.BVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBVNull() {
                this[this.tableStock.BVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockAkhirNull() {
                return this.IsNull(this.tableStock.StockAkhirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockAkhirNull() {
                this[this.tableStock.StockAkhirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaBeliNull() {
                return this.IsNull(this.tableStock.HargaBeliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaBeliNull() {
                this[this.tableStock.HargaBeliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNilaiStockNull() {
                return this.IsNull(this.tableStock.NilaiStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNilaiStockNull() {
                this[this.tableStock.NilaiStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual1Null() {
                return this.IsNull(this.tableStock.HargaJual1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual1Null() {
                this[this.tableStock.HargaJual1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual2Null() {
                return this.IsNull(this.tableStock.HargaJual2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual2Null() {
                this[this.tableStock.HargaJual2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual3Null() {
                return this.IsNull(this.tableStock.HargaJual3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual3Null() {
                this[this.tableStock.HargaJual3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUkuranNull() {
                return this.IsNull(this.tableStock.UkuranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUkuranNull() {
                this[this.tableStock.UkuranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMinimumNull() {
                return this.IsNull(this.tableStock.StockMinimumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMinimumNull() {
                this[this.tableStock.StockMinimumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsiNull() {
                return this.IsNull(this.tableStock.IsiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsiNull() {
                this[this.tableStock.IsiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatuanIsiNull() {
                return this.IsNull(this.tableStock.SatuanIsiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatuanIsiNull() {
                this[this.tableStock.SatuanIsiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeBarcodeNull() {
                return this.IsNull(this.tableStock.KodeBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeBarcodeNull() {
                this[this.tableStock.KodeBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockPesananNull() {
                return this.IsNull(this.tableStock.StockPesananColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockPesananNull() {
                this[this.tableStock.StockPesananColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahPemesananNull() {
                return this.IsNull(this.tableStock.JumlahPemesananColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahPemesananNull() {
                this[this.tableStock.JumlahPemesananColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahPesananNull() {
                return this.IsNull(this.tableStock.JumlahPesananColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahPesananNull() {
                this[this.tableStock.JumlahPesananColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSupplierNull() {
                return this.IsNull(this.tableStock.KodeSupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSupplierNull() {
                this[this.tableStock.KodeSupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaRataNull() {
                return this.IsNull(this.tableStock.HargaRataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaRataNull() {
                this[this.tableStock.HargaRataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaAwalNull() {
                return this.IsNull(this.tableStock.HargaAwalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaAwalNull() {
                this[this.tableStock.HargaAwalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNilaiAwalNull() {
                return this.IsNull(this.tableStock.NilaiAwalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNilaiAwalNull() {
                this[this.tableStock.NilaiAwalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKomisiSalesmanNull() {
                return this.IsNull(this.tableStock.KomisiSalesmanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKomisiSalesmanNull() {
                this[this.tableStock.KomisiSalesmanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaFileGambar1Null() {
                return this.IsNull(this.tableStock.NamaFileGambar1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaFileGambar1Null() {
                this[this.tableStock.NamaFileGambar1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaFileGambar2Null() {
                return this.IsNull(this.tableStock.NamaFileGambar2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaFileGambar2Null() {
                this[this.tableStock.NamaFileGambar2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStRacikNull() {
                return this.IsNull(this.tableStock.StRacikColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStRacikNull() {
                this[this.tableStock.StRacikColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKegunaanNull() {
                return this.IsNull(this.tableStock.KegunaanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKegunaanNull() {
                this[this.tableStock.KegunaanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty1Null() {
                return this.IsNull(this.tableStock.Qty1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty1Null() {
                this[this.tableStock.Qty1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty2Null() {
                return this.IsNull(this.tableStock.Qty2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty2Null() {
                this[this.tableStock.Qty2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual4Null() {
                return this.IsNull(this.tableStock.HargaJual4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual4Null() {
                this[this.tableStock.HargaJual4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty3Null() {
                return this.IsNull(this.tableStock.Qty3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty3Null() {
                this[this.tableStock.Qty3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty4Null() {
                return this.IsNull(this.tableStock.Qty4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty4Null() {
                this[this.tableStock.Qty4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeKelompok2Null() {
                return this.IsNull(this.tableStock.KodeKelompok2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeKelompok2Null() {
                this[this.tableStock.KodeKelompok2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostNull() {
                return this.IsNull(this.tableStock.costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostNull() {
                this[this.tableStock.costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJualNull() {
                return this.IsNull(this.tableStock.HargaJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJualNull() {
                this[this.tableStock.HargaJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc1Null() {
                return this.IsNull(this.tableStock.disc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc1Null() {
                this[this.tableStock.disc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc2Null() {
                return this.IsNull(this.tableStock.disc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc2Null() {
                this[this.tableStock.disc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppnNull() {
                return this.IsNull(this.tableStock.ppnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppnNull() {
                this[this.tableStock.ppnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscrpNull() {
                return this.IsNull(this.tableStock.discrpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscrpNull() {
                this[this.tableStock.discrpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc3Null() {
                return this.IsNull(this.tableStock.disc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc3Null() {
                this[this.tableStock.disc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangRow[] GetStockGudangRows() {
                if ((this.Table.ChildRelations["StockGudang_Stock"] == null)) {
                    return new StockGudangRow[0];
                }
                else {
                    return ((StockGudangRow[])(base.GetChildRows(this.Table.ChildRelations["StockGudang_Stock"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_gudangRow[] Getview_stock_gudangRows() {
                if ((this.Table.ChildRelations["Stock_view_stock_gudang"] == null)) {
                    return new view_stock_gudangRow[0];
                }
                else {
                    return ((view_stock_gudangRow[])(base.GetChildRows(this.Table.ChildRelations["Stock_view_stock_gudang"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_Total_Jumlah_Stock_Per_KelompokRow[] Getview_Total_Jumlah_Stock_Per_KelompokRows() {
                if ((this.Table.ChildRelations["Stock_view_Total_Jumlah_Stock_Per_Kelompok"] == null)) {
                    return new view_Total_Jumlah_Stock_Per_KelompokRow[0];
                }
                else {
                    return ((view_Total_Jumlah_Stock_Per_KelompokRow[])(base.GetChildRows(this.Table.ChildRelations["Stock_view_Total_Jumlah_Stock_Per_Kelompok"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Saldo_Stock_akhir_unpivotRow[] GetView_Saldo_Stock_akhir_unpivotRows() {
                if ((this.Table.ChildRelations["Stock_View_Saldo_Stock_akhir_unpivot"] == null)) {
                    return new View_Saldo_Stock_akhir_unpivotRow[0];
                }
                else {
                    return ((View_Saldo_Stock_akhir_unpivotRow[])(base.GetChildRows(this.Table.ChildRelations["Stock_View_Saldo_Stock_akhir_unpivot"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class view_Total_Jumlah_Stock_Per_KelompokRow : global::System.Data.DataRow {
            
            private view_Total_Jumlah_Stock_Per_KelompokDataTable tableview_Total_Jumlah_Stock_Per_Kelompok;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_Total_Jumlah_Stock_Per_KelompokRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableview_Total_Jumlah_Stock_Per_Kelompok = ((view_Total_Jumlah_Stock_Per_KelompokDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int result {
                get {
                    try {
                        return ((int)(this[this.tableview_Total_Jumlah_Stock_Per_Kelompok.resultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'result\' in table \'view_Total_Jumlah_Stock_Per_Kelompok\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_Total_Jumlah_Stock_Per_Kelompok.resultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok {
                get {
                    return ((string)(this[this.tableview_Total_Jumlah_Stock_Per_Kelompok.KodeKelompokColumn]));
                }
                set {
                    this[this.tableview_Total_Jumlah_Stock_Per_Kelompok.KodeKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow StockRow {
                get {
                    return ((StockRow)(this.GetParentRow(this.Table.ParentRelations["Stock_view_Total_Jumlah_Stock_Per_Kelompok"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Stock_view_Total_Jumlah_Stock_Per_Kelompok"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsresultNull() {
                return this.IsNull(this.tableview_Total_Jumlah_Stock_Per_Kelompok.resultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetresultNull() {
                this[this.tableview_Total_Jumlah_Stock_Per_Kelompok.resultColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class KelompokProdukRow : global::System.Data.DataRow {
            
            private KelompokProdukDataTable tableKelompokProduk;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KelompokProdukRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKelompokProduk = ((KelompokProdukDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoUrut {
                get {
                    return ((int)(this[this.tableKelompokProduk.NoUrutColumn]));
                }
                set {
                    this[this.tableKelompokProduk.NoUrutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok {
                get {
                    return ((string)(this[this.tableKelompokProduk.KodeKelompokColumn]));
                }
                set {
                    this[this.tableKelompokProduk.KodeKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaKelompok {
                get {
                    try {
                        return ((string)(this[this.tableKelompokProduk.NamaKelompokColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaKelompok\' in table \'KelompokProduk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokProduk.NamaKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JenisStock {
                get {
                    try {
                        return ((string)(this[this.tableKelompokProduk.JenisStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JenisStock\' in table \'KelompokProduk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokProduk.JenisStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STHarga {
                get {
                    try {
                        return ((string)(this[this.tableKelompokProduk.STHargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STHarga\' in table \'KelompokProduk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokProduk.STHargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool StTuslah {
                get {
                    try {
                        return ((bool)(this[this.tableKelompokProduk.StTuslahColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StTuslah\' in table \'KelompokProduk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokProduk.StTuslahColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeDokter {
                get {
                    try {
                        return ((string)(this[this.tableKelompokProduk.KodeDokterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeDokter\' in table \'KelompokProduk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokProduk.KodeDokterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JenisLaporan {
                get {
                    try {
                        return ((string)(this[this.tableKelompokProduk.JenisLaporanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JenisLaporan\' in table \'KelompokProduk\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKelompokProduk.JenisLaporanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaKelompokNull() {
                return this.IsNull(this.tableKelompokProduk.NamaKelompokColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaKelompokNull() {
                this[this.tableKelompokProduk.NamaKelompokColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJenisStockNull() {
                return this.IsNull(this.tableKelompokProduk.JenisStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJenisStockNull() {
                this[this.tableKelompokProduk.JenisStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTHargaNull() {
                return this.IsNull(this.tableKelompokProduk.STHargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTHargaNull() {
                this[this.tableKelompokProduk.STHargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStTuslahNull() {
                return this.IsNull(this.tableKelompokProduk.StTuslahColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStTuslahNull() {
                this[this.tableKelompokProduk.StTuslahColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeDokterNull() {
                return this.IsNull(this.tableKelompokProduk.KodeDokterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeDokterNull() {
                this[this.tableKelompokProduk.KodeDokterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJenisLaporanNull() {
                return this.IsNull(this.tableKelompokProduk.JenisLaporanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJenisLaporanNull() {
                this[this.tableKelompokProduk.JenisLaporanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow[] GetStockRows() {
                if ((this.Table.ChildRelations["KelompokProduk_Stock"] == null)) {
                    return new StockRow[0];
                }
                else {
                    return ((StockRow[])(base.GetChildRows(this.Table.ChildRelations["KelompokProduk_Stock"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SubStockMovementRow : global::System.Data.DataRow {
            
            private SubStockMovementDataTable tableSubStockMovement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SubStockMovementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSubStockMovement = ((SubStockMovementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableSubStockMovement.idColumn]));
                }
                set {
                    this[this.tableSubStockMovement.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStockMovement {
                get {
                    return ((string)(this[this.tableSubStockMovement.KodeStockMovementColumn]));
                }
                set {
                    this[this.tableSubStockMovement.KodeStockMovementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    try {
                        return ((string)(this[this.tableSubStockMovement.KodeStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeStock\' in table \'SubStockMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubStockMovement.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double qty {
                get {
                    try {
                        return ((double)(this[this.tableSubStockMovement.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'SubStockMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubStockMovement.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string satuan {
                get {
                    try {
                        return ((string)(this[this.tableSubStockMovement.satuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'satuan\' in table \'SubStockMovement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSubStockMovement.satuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementRow stockMovementRow {
                get {
                    return ((stockMovementRow)(this.GetParentRow(this.Table.ParentRelations["stockMovement_SubStockMovement"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["stockMovement_SubStockMovement"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeStockNull() {
                return this.IsNull(this.tableSubStockMovement.KodeStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeStockNull() {
                this[this.tableSubStockMovement.KodeStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tableSubStockMovement.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tableSubStockMovement.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssatuanNull() {
                return this.IsNull(this.tableSubStockMovement.satuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsatuanNull() {
                this[this.tableSubStockMovement.satuanColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class view_stock_movementRow : global::System.Data.DataRow {
            
            private view_stock_movementDataTable tableview_stock_movement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_stock_movementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableview_stock_movement = ((view_stock_movementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noBuktiMovement {
                get {
                    return ((string)(this[this.tableview_stock_movement.noBuktiMovementColumn]));
                }
                set {
                    this[this.tableview_stock_movement.noBuktiMovementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idGudangAsal {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.idGudangAsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idGudangAsal\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.idGudangAsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idGudangTujuan {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.idGudangTujuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idGudangTujuan\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.idGudangTujuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    return ((string)(this[this.tableview_stock_movement.KodeStockColumn]));
                }
                set {
                    this[this.tableview_stock_movement.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStock {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.NamaStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStock\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.NamaStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Satuan {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.SatuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Satuan\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.SatuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaBeli {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.HargaBeliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaBeli\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.HargaBeliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double NilaiStock {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.NilaiStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NilaiStock\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.NilaiStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual1 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.HargaJual1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual1\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.HargaJual1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty1 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.Qty1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty1\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.Qty1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual2 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.HargaJual2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual2\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.HargaJual2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty2 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.Qty2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty2\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.Qty2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual3 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.HargaJual3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual3\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.HargaJual3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty3 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.Qty3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty3\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.Qty3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual4 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.HargaJual4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual4\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.HargaJual4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty4 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.Qty4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty4\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.Qty4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ukuran {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.UkuranColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ukuran\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.UkuranColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeSupplier {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.KodeSupplierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeSupplier\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.KodeSupplierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaAwal {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.HargaAwalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaAwal\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.HargaAwalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok {
                get {
                    return ((string)(this[this.tableview_stock_movement.KodeKelompokColumn]));
                }
                set {
                    this[this.tableview_stock_movement.KodeKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok2 {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.KodeKelompok2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeKelompok2\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.KodeKelompok2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cost {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cost\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.HargaJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.HargaJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc1 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.disc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc1\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.disc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc2 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.disc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc2\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.disc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc3 {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.disc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc3\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.disc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double discrp {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.discrpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discrp\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.discrpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ppn {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.ppnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppn\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.ppnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string namaGudangAsal {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.namaGudangAsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'namaGudangAsal\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.namaGudangAsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string namaGudangTujuan {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.namaGudangTujuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'namaGudangTujuan\' in table \'view_stock_movement\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.namaGudangTujuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeBarcode {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.KodeBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeBarcode\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.KodeBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockMinimum {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.StockMinimumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockMinimum\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.StockMinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double qty {
                get {
                    try {
                        return ((double)(this[this.tableview_stock_movement.qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qty\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Expr1 {
                get {
                    try {
                        return ((string)(this[this.tableview_stock_movement.Expr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr1\' in table \'view_stock_movement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stock_movement.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidGudangAsalNull() {
                return this.IsNull(this.tableview_stock_movement.idGudangAsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidGudangAsalNull() {
                this[this.tableview_stock_movement.idGudangAsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidGudangTujuanNull() {
                return this.IsNull(this.tableview_stock_movement.idGudangTujuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidGudangTujuanNull() {
                this[this.tableview_stock_movement.idGudangTujuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStockNull() {
                return this.IsNull(this.tableview_stock_movement.NamaStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStockNull() {
                this[this.tableview_stock_movement.NamaStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatuanNull() {
                return this.IsNull(this.tableview_stock_movement.SatuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatuanNull() {
                this[this.tableview_stock_movement.SatuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaBeliNull() {
                return this.IsNull(this.tableview_stock_movement.HargaBeliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaBeliNull() {
                this[this.tableview_stock_movement.HargaBeliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNilaiStockNull() {
                return this.IsNull(this.tableview_stock_movement.NilaiStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNilaiStockNull() {
                this[this.tableview_stock_movement.NilaiStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual1Null() {
                return this.IsNull(this.tableview_stock_movement.HargaJual1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual1Null() {
                this[this.tableview_stock_movement.HargaJual1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty1Null() {
                return this.IsNull(this.tableview_stock_movement.Qty1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty1Null() {
                this[this.tableview_stock_movement.Qty1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual2Null() {
                return this.IsNull(this.tableview_stock_movement.HargaJual2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual2Null() {
                this[this.tableview_stock_movement.HargaJual2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty2Null() {
                return this.IsNull(this.tableview_stock_movement.Qty2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty2Null() {
                this[this.tableview_stock_movement.Qty2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual3Null() {
                return this.IsNull(this.tableview_stock_movement.HargaJual3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual3Null() {
                this[this.tableview_stock_movement.HargaJual3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty3Null() {
                return this.IsNull(this.tableview_stock_movement.Qty3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty3Null() {
                this[this.tableview_stock_movement.Qty3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual4Null() {
                return this.IsNull(this.tableview_stock_movement.HargaJual4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual4Null() {
                this[this.tableview_stock_movement.HargaJual4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty4Null() {
                return this.IsNull(this.tableview_stock_movement.Qty4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty4Null() {
                this[this.tableview_stock_movement.Qty4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUkuranNull() {
                return this.IsNull(this.tableview_stock_movement.UkuranColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUkuranNull() {
                this[this.tableview_stock_movement.UkuranColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeSupplierNull() {
                return this.IsNull(this.tableview_stock_movement.KodeSupplierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeSupplierNull() {
                this[this.tableview_stock_movement.KodeSupplierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaAwalNull() {
                return this.IsNull(this.tableview_stock_movement.HargaAwalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaAwalNull() {
                this[this.tableview_stock_movement.HargaAwalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeKelompok2Null() {
                return this.IsNull(this.tableview_stock_movement.KodeKelompok2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeKelompok2Null() {
                this[this.tableview_stock_movement.KodeKelompok2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostNull() {
                return this.IsNull(this.tableview_stock_movement.costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostNull() {
                this[this.tableview_stock_movement.costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJualNull() {
                return this.IsNull(this.tableview_stock_movement.HargaJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJualNull() {
                this[this.tableview_stock_movement.HargaJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc1Null() {
                return this.IsNull(this.tableview_stock_movement.disc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc1Null() {
                this[this.tableview_stock_movement.disc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc2Null() {
                return this.IsNull(this.tableview_stock_movement.disc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc2Null() {
                this[this.tableview_stock_movement.disc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc3Null() {
                return this.IsNull(this.tableview_stock_movement.disc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc3Null() {
                this[this.tableview_stock_movement.disc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscrpNull() {
                return this.IsNull(this.tableview_stock_movement.discrpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscrpNull() {
                this[this.tableview_stock_movement.discrpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppnNull() {
                return this.IsNull(this.tableview_stock_movement.ppnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppnNull() {
                this[this.tableview_stock_movement.ppnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamaGudangAsalNull() {
                return this.IsNull(this.tableview_stock_movement.namaGudangAsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamaGudangAsalNull() {
                this[this.tableview_stock_movement.namaGudangAsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamaGudangTujuanNull() {
                return this.IsNull(this.tableview_stock_movement.namaGudangTujuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamaGudangTujuanNull() {
                this[this.tableview_stock_movement.namaGudangTujuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeBarcodeNull() {
                return this.IsNull(this.tableview_stock_movement.KodeBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeBarcodeNull() {
                this[this.tableview_stock_movement.KodeBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMinimumNull() {
                return this.IsNull(this.tableview_stock_movement.StockMinimumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMinimumNull() {
                this[this.tableview_stock_movement.StockMinimumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyNull() {
                return this.IsNull(this.tableview_stock_movement.qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyNull() {
                this[this.tableview_stock_movement.qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpr1Null() {
                return this.IsNull(this.tableview_stock_movement.Expr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpr1Null() {
                this[this.tableview_stock_movement.Expr1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_Saldo_Stock_akhir_unpivotRow : global::System.Data.DataRow {
            
            private View_Saldo_Stock_akhir_unpivotDataTable tableView_Saldo_Stock_akhir_unpivot;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_Saldo_Stock_akhir_unpivotRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_Saldo_Stock_akhir_unpivot = ((View_Saldo_Stock_akhir_unpivotDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    return ((string)(this[this.tableView_Saldo_Stock_akhir_unpivot.KodeStockColumn]));
                }
                set {
                    this[this.tableView_Saldo_Stock_akhir_unpivot.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStock {
                get {
                    try {
                        return ((string)(this[this.tableView_Saldo_Stock_akhir_unpivot.NamaStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStock\' in table \'View_Saldo_Stock_akhir_unpivot\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_Saldo_Stock_akhir_unpivot.NamaStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Deskripsi {
                get {
                    try {
                        return ((string)(this[this.tableView_Saldo_Stock_akhir_unpivot.DeskripsiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deskripsi\' in table \'View_Saldo_Stock_akhir_unpivot\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_Saldo_Stock_akhir_unpivot.DeskripsiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Nilai {
                get {
                    try {
                        return ((double)(this[this.tableView_Saldo_Stock_akhir_unpivot.NilaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nilai\' in table \'View_Saldo_Stock_akhir_unpivot\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_Saldo_Stock_akhir_unpivot.NilaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow StockRow {
                get {
                    return ((StockRow)(this.GetParentRow(this.Table.ParentRelations["Stock_View_Saldo_Stock_akhir_unpivot"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Stock_View_Saldo_Stock_akhir_unpivot"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStockNull() {
                return this.IsNull(this.tableView_Saldo_Stock_akhir_unpivot.NamaStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStockNull() {
                this[this.tableView_Saldo_Stock_akhir_unpivot.NamaStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeskripsiNull() {
                return this.IsNull(this.tableView_Saldo_Stock_akhir_unpivot.DeskripsiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeskripsiNull() {
                this[this.tableView_Saldo_Stock_akhir_unpivot.DeskripsiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNilaiNull() {
                return this.IsNull(this.tableView_Saldo_Stock_akhir_unpivot.NilaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNilaiNull() {
                this[this.tableView_Saldo_Stock_akhir_unpivot.NilaiColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class view_stockMovement_GudangRow : global::System.Data.DataRow {
            
            private view_stockMovement_GudangDataTable tableview_stockMovement_Gudang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_stockMovement_GudangRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableview_stockMovement_Gudang = ((view_stockMovement_GudangDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string noBukti {
                get {
                    return ((string)(this[this.tableview_stockMovement_Gudang.noBuktiColumn]));
                }
                set {
                    this[this.tableview_stockMovement_Gudang.noBuktiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableview_stockMovement_Gudang.tanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tanggal\' in table \'view_stockMovement_Gudang\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_stockMovement_Gudang.tanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idGudangAsal {
                get {
                    try {
                        return ((string)(this[this.tableview_stockMovement_Gudang.idGudangAsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idGudangAsal\' in table \'view_stockMovement_Gudang\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableview_stockMovement_Gudang.idGudangAsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaCabangAsal {
                get {
                    try {
                        return ((string)(this[this.tableview_stockMovement_Gudang.NamaCabangAsalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaCabangAsal\' in table \'view_stockMovement_Gudang\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableview_stockMovement_Gudang.NamaCabangAsalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string idGudangTujuan {
                get {
                    try {
                        return ((string)(this[this.tableview_stockMovement_Gudang.idGudangTujuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idGudangTujuan\' in table \'view_stockMovement_Gudang\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableview_stockMovement_Gudang.idGudangTujuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaCabangTujuan {
                get {
                    try {
                        return ((string)(this[this.tableview_stockMovement_Gudang.NamaCabangTujuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaCabangTujuan\' in table \'view_stockMovement_Gudang\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableview_stockMovement_Gudang.NamaCabangTujuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstanggalNull() {
                return this.IsNull(this.tableview_stockMovement_Gudang.tanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettanggalNull() {
                this[this.tableview_stockMovement_Gudang.tanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidGudangAsalNull() {
                return this.IsNull(this.tableview_stockMovement_Gudang.idGudangAsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidGudangAsalNull() {
                this[this.tableview_stockMovement_Gudang.idGudangAsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaCabangAsalNull() {
                return this.IsNull(this.tableview_stockMovement_Gudang.NamaCabangAsalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaCabangAsalNull() {
                this[this.tableview_stockMovement_Gudang.NamaCabangAsalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidGudangTujuanNull() {
                return this.IsNull(this.tableview_stockMovement_Gudang.idGudangTujuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidGudangTujuanNull() {
                this[this.tableview_stockMovement_Gudang.idGudangTujuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaCabangTujuanNull() {
                return this.IsNull(this.tableview_stockMovement_Gudang.NamaCabangTujuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaCabangTujuanNull() {
                this[this.tableview_stockMovement_Gudang.NamaCabangTujuanColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_stock_saldo_lengkapRow : global::System.Data.DataRow {
            
            private View_stock_saldo_lengkapDataTable tableView_stock_saldo_lengkap;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_stock_saldo_lengkapRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_stock_saldo_lengkap = ((View_stock_saldo_lengkapDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeStock {
                get {
                    return ((string)(this[this.tableView_stock_saldo_lengkap.KodeStockColumn]));
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.KodeStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NamaStock {
                get {
                    try {
                        return ((string)(this[this.tableView_stock_saldo_lengkap.NamaStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NamaStock\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.NamaStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double JumlahStock {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.JumlahStockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JumlahStock\' in table \'View_stock_saldo_lengkap\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.JumlahStockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Satuan {
                get {
                    try {
                        return ((string)(this[this.tableView_stock_saldo_lengkap.SatuanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Satuan\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.SatuanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaBeli {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.HargaBeliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaBeli\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.HargaBeliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual1 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.HargaJual1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual1\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.HargaJual1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty1 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.Qty1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty1\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.Qty1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual2 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.HargaJual2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual2\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.HargaJual2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty2 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.Qty2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty2\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.Qty2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual3 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.HargaJual3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual3\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.HargaJual3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty3 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.Qty3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty3\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.Qty3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual4 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.HargaJual4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual4\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.HargaJual4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Qty4 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.Qty4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty4\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.Qty4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double StockMinimum {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.StockMinimumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockMinimum\' in table \'View_stock_saldo_lengkap\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.StockMinimumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeBarcode {
                get {
                    try {
                        return ((string)(this[this.tableView_stock_saldo_lengkap.KodeBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeBarcode\' in table \'View_stock_saldo_lengkap\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.KodeBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double HargaJual {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.HargaJualColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HargaJual\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.HargaJualColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeKelompok {
                get {
                    return ((string)(this[this.tableView_stock_saldo_lengkap.KodeKelompokColumn]));
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.KodeKelompokColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc1 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.disc1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc1\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.disc1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc3 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.disc3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc3\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.disc3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double disc2 {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.disc2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disc2\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.disc2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double discrp {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.discrpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'discrp\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.discrpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ppn {
                get {
                    try {
                        return ((double)(this[this.tableView_stock_saldo_lengkap.ppnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ppn\' in table \'View_stock_saldo_lengkap\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_stock_saldo_lengkap.ppnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNamaStockNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.NamaStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNamaStockNull() {
                this[this.tableView_stock_saldo_lengkap.NamaStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJumlahStockNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.JumlahStockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJumlahStockNull() {
                this[this.tableView_stock_saldo_lengkap.JumlahStockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSatuanNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.SatuanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSatuanNull() {
                this[this.tableView_stock_saldo_lengkap.SatuanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaBeliNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.HargaBeliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaBeliNull() {
                this[this.tableView_stock_saldo_lengkap.HargaBeliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual1Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.HargaJual1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual1Null() {
                this[this.tableView_stock_saldo_lengkap.HargaJual1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty1Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.Qty1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty1Null() {
                this[this.tableView_stock_saldo_lengkap.Qty1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual2Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.HargaJual2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual2Null() {
                this[this.tableView_stock_saldo_lengkap.HargaJual2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty2Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.Qty2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty2Null() {
                this[this.tableView_stock_saldo_lengkap.Qty2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual3Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.HargaJual3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual3Null() {
                this[this.tableView_stock_saldo_lengkap.HargaJual3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty3Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.Qty3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty3Null() {
                this[this.tableView_stock_saldo_lengkap.Qty3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJual4Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.HargaJual4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJual4Null() {
                this[this.tableView_stock_saldo_lengkap.HargaJual4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQty4Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.Qty4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQty4Null() {
                this[this.tableView_stock_saldo_lengkap.Qty4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockMinimumNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.StockMinimumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockMinimumNull() {
                this[this.tableView_stock_saldo_lengkap.StockMinimumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeBarcodeNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.KodeBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeBarcodeNull() {
                this[this.tableView_stock_saldo_lengkap.KodeBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHargaJualNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.HargaJualColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHargaJualNull() {
                this[this.tableView_stock_saldo_lengkap.HargaJualColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc1Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.disc1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc1Null() {
                this[this.tableView_stock_saldo_lengkap.disc1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc3Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.disc3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc3Null() {
                this[this.tableView_stock_saldo_lengkap.disc3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdisc2Null() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.disc2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdisc2Null() {
                this[this.tableView_stock_saldo_lengkap.disc2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdiscrpNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.discrpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdiscrpNull() {
                this[this.tableView_stock_saldo_lengkap.discrpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsppnNull() {
                return this.IsNull(this.tableView_stock_saldo_lengkap.ppnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetppnNull() {
                this[this.tableView_stock_saldo_lengkap.ppnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockGudangRowChangeEvent : global::System.EventArgs {
            
            private StockGudangRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangRowChangeEvent(StockGudangRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockGudangRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GudangRowChangeEvent : global::System.EventArgs {
            
            private GudangRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangRowChangeEvent(GudangRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GudangRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockOpnameRowChangeEvent : global::System.EventArgs {
            
            private StockOpnameRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOpnameRowChangeEvent(StockOpnameRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockOpnameRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class view_stock_gudangRowChangeEvent : global::System.EventArgs {
            
            private view_stock_gudangRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_gudangRowChangeEvent(view_stock_gudangRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_gudangRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stockMovementRowChangeEvent : global::System.EventArgs {
            
            private stockMovementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementRowChangeEvent(stockMovementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stockMovementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SatuanRowChangeEvent : global::System.EventArgs {
            
            private SatuanRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SatuanRowChangeEvent(SatuanRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SatuanRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class StockRowChangeEvent : global::System.EventArgs {
            
            private StockRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRowChangeEvent(StockRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public StockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class view_Total_Jumlah_Stock_Per_KelompokRowChangeEvent : global::System.EventArgs {
            
            private view_Total_Jumlah_Stock_Per_KelompokRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_Total_Jumlah_Stock_Per_KelompokRowChangeEvent(view_Total_Jumlah_Stock_Per_KelompokRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_Total_Jumlah_Stock_Per_KelompokRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class KelompokProdukRowChangeEvent : global::System.EventArgs {
            
            private KelompokProdukRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukRowChangeEvent(KelompokProdukRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KelompokProdukRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SubStockMovementRowChangeEvent : global::System.EventArgs {
            
            private SubStockMovementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubStockMovementRowChangeEvent(SubStockMovementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SubStockMovementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class view_stock_movementRowChangeEvent : global::System.EventArgs {
            
            private view_stock_movementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_movementRowChangeEvent(view_stock_movementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stock_movementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_Saldo_Stock_akhir_unpivotRowChangeEvent : global::System.EventArgs {
            
            private View_Saldo_Stock_akhir_unpivotRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Saldo_Stock_akhir_unpivotRowChangeEvent(View_Saldo_Stock_akhir_unpivotRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_Saldo_Stock_akhir_unpivotRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class view_stockMovement_GudangRowChangeEvent : global::System.EventArgs {
            
            private view_stockMovement_GudangRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stockMovement_GudangRowChangeEvent(view_stockMovement_GudangRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_stockMovement_GudangRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_stock_saldo_lengkapRowChangeEvent : global::System.EventArgs {
            
            private View_stock_saldo_lengkapRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_stock_saldo_lengkapRowChangeEvent(View_stock_saldo_lengkapRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_stock_saldo_lengkapRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Accounting_Solution_Software.Data_set.Stock_DataTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockGudangTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockGudangTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockGudang";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("id_gudang", "id_gudang");
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("jumlah", "jumlah");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [pos].[dbo].[StockGudang] ([id_gudang], [KodeStock], [jumlah]) VALUES" +
                " (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("id_gudang", global::System.Data.OleDb.OleDbType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("jumlah", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "jumlah", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[2];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, id_gudang, KodeStock, jumlah FROM dbo.StockGudang";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT id, id_gudang, KodeStock, jumlah FROM dbo.StockGudang WHERE KodeStock = \'k" +
                "odeStockTextBox.text\'";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.StockGudangDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.StockGudangDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.StockGudangDataTable dataTable = new Stock_Data.StockGudangDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(Stock_Data.StockGudangDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.StockGudangDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "StockGudang");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string id_gudang, string KodeStock, global::System.Nullable<double> jumlah) {
            if ((id_gudang == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(id_gudang));
            }
            if ((KodeStock == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KodeStock));
            }
            if ((jumlah.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(jumlah.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GudangTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GudangTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Gudang";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("nama", "nama");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [pos].[dbo].[Gudang] WHERE (([id] = ?) AND ((? = 1 AND [nama] IS NULL" +
                ") OR ([nama] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_id", global::System.Data.OleDb.OleDbType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_nama", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nama", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_nama", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nama", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [pos].[dbo].[Gudang] ([id], [nama]) VALUES (?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("id", global::System.Data.OleDb.OleDbType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("nama", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nama", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [pos].[dbo].[Gudang] SET [id] = ?, [nama] = ? WHERE (([id] = ?) AND ((? = " +
                "1 AND [nama] IS NULL) OR ([nama] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("id", global::System.Data.OleDb.OleDbType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("nama", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nama", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_id", global::System.Data.OleDb.OleDbType.Char, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_nama", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nama", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_nama", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "nama", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, nama FROM dbo.Gudang";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.GudangDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.GudangDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.GudangDataTable dataTable = new Stock_Data.GudangDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.GudangDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "Gudang");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_id, string Original_nama) {
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_id));
            }
            if ((Original_nama == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_nama));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string id, string nama) {
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(id));
            }
            if ((nama == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(nama));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string id, string nama, string Original_id, string Original_nama) {
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(id));
            }
            if ((nama == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(nama));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_id));
            }
            if ((Original_nama == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_nama));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string nama, string Original_id, string Original_nama) {
            return this.Update(Original_id, nama, Original_id, Original_nama);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockOpnameTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockOpnameTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "StockOpname";
            tableMapping.ColumnMappings.Add("NoBukti", "NoBukti");
            tableMapping.ColumnMappings.Add("Tanggal", "Tanggal");
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("StockAwal", "StockAwal");
            tableMapping.ColumnMappings.Add("StockOpname", "StockOpname");
            tableMapping.ColumnMappings.Add("Selisih", "Selisih");
            tableMapping.ColumnMappings.Add("Harga", "Harga");
            tableMapping.ColumnMappings.Add("Jumlah", "Jumlah");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("PartNo", "PartNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [pos].[dbo].[StockOpname] WHERE (([NoBukti] = ?) AND ((? = 1 AND [Tanggal] IS NULL) OR ([Tanggal] = ?)) AND ((? = 1 AND [KodeStock] IS NULL) OR ([KodeStock] = ?)) AND ((? = 1 AND [StockAwal] IS NULL) OR ([StockAwal] = ?)) AND ((? = 1 AND [StockOpname] IS NULL) OR ([StockOpname] = ?)) AND ((? = 1 AND [Selisih] IS NULL) OR ([Selisih] = ?)) AND ((? = 1 AND [Harga] IS NULL) OR ([Harga] = ?)) AND ((? = 1 AND [Jumlah] IS NULL) OR ([Jumlah] = ?)) AND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)) AND ((? = 1 AND [PartNo] IS NULL) OR ([PartNo] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NoBukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoBukti", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Tanggal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tanggal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tanggal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockAwal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAwal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAwal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockOpname", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockOpname", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockOpname", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockOpname", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Selisih", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Selisih", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Selisih", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Selisih", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Harga", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Harga", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Harga", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Harga", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Jumlah", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Jumlah", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Jumlah", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Jumlah", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PartNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PartNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PartNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PartNo", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [pos].[dbo].[StockOpname] ([NoBukti], [Tanggal], [KodeStock], [StockA" +
                "wal], [StockOpname], [Selisih], [Harga], [Jumlah], [Status], [PartNo]) VALUES (?" +
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NoBukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoBukti", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tanggal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAwal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockOpname", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockOpname", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Selisih", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Selisih", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Harga", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Harga", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Jumlah", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Jumlah", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PartNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PartNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [pos].[dbo].[StockOpname] SET [NoBukti] = ?, [Tanggal] = ?, [KodeStock] = ?, [StockAwal] = ?, [StockOpname] = ?, [Selisih] = ?, [Harga] = ?, [Jumlah] = ?, [Status] = ?, [PartNo] = ? WHERE (([NoBukti] = ?) AND ((? = 1 AND [Tanggal] IS NULL) OR ([Tanggal] = ?)) AND ((? = 1 AND [KodeStock] IS NULL) OR ([KodeStock] = ?)) AND ((? = 1 AND [StockAwal] IS NULL) OR ([StockAwal] = ?)) AND ((? = 1 AND [StockOpname] IS NULL) OR ([StockOpname] = ?)) AND ((? = 1 AND [Selisih] IS NULL) OR ([Selisih] = ?)) AND ((? = 1 AND [Harga] IS NULL) OR ([Harga] = ?)) AND ((? = 1 AND [Jumlah] IS NULL) OR ([Jumlah] = ?)) AND ((? = 1 AND [Status] IS NULL) OR ([Status] = ?)) AND ((? = 1 AND [PartNo] IS NULL) OR ([PartNo] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NoBukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoBukti", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tanggal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAwal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockOpname", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockOpname", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Selisih", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Selisih", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Harga", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Harga", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Jumlah", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Jumlah", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Status", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PartNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PartNo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NoBukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoBukti", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Tanggal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tanggal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tanggal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockAwal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAwal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAwal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockOpname", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockOpname", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockOpname", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockOpname", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Selisih", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Selisih", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Selisih", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Selisih", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Harga", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Harga", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Harga", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Harga", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Jumlah", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Jumlah", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Jumlah", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Jumlah", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Status", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Status", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Status", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PartNo", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PartNo", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PartNo", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PartNo", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NoBukti, Tanggal, KodeStock, StockAwal, StockOpname, Selisih, Harga, Jumla" +
                "h, Status, PartNo FROM dbo.StockOpname";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.StockOpnameDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.StockOpnameDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.StockOpnameDataTable dataTable = new Stock_Data.StockOpnameDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.StockOpnameDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "StockOpname");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NoBukti, global::System.Nullable<global::System.DateTime> Original_Tanggal, string Original_KodeStock, global::System.Nullable<double> Original_StockAwal, global::System.Nullable<double> Original_StockOpname, global::System.Nullable<double> Original_Selisih, global::System.Nullable<double> Original_Harga, global::System.Nullable<double> Original_Jumlah, global::System.Nullable<bool> Original_Status, string Original_PartNo) {
            if ((Original_NoBukti == null)) {
                throw new global::System.ArgumentNullException("Original_NoBukti");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NoBukti));
            }
            if ((Original_Tanggal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Tanggal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeStock == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KodeStock));
            }
            if ((Original_StockAwal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_StockAwal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_StockOpname.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_StockOpname.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Selisih.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Selisih.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Harga.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_Harga.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Jumlah.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Jumlah.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Status.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_Status.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_PartNo == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_PartNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NoBukti, global::System.Nullable<global::System.DateTime> Tanggal, string KodeStock, global::System.Nullable<double> StockAwal, global::System.Nullable<double> StockOpname, global::System.Nullable<double> Selisih, global::System.Nullable<double> Harga, global::System.Nullable<double> Jumlah, global::System.Nullable<bool> Status, string PartNo) {
            if ((NoBukti == null)) {
                throw new global::System.ArgumentNullException("NoBukti");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NoBukti));
            }
            if ((Tanggal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Tanggal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((KodeStock == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(KodeStock));
            }
            if ((StockAwal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(StockAwal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((StockOpname.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(StockOpname.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Selisih.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Selisih.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Harga.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Harga.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Jumlah.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Jumlah.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Status.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(Status.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PartNo == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PartNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NoBukti, 
                    global::System.Nullable<global::System.DateTime> Tanggal, 
                    string KodeStock, 
                    global::System.Nullable<double> StockAwal, 
                    global::System.Nullable<double> StockOpname, 
                    global::System.Nullable<double> Selisih, 
                    global::System.Nullable<double> Harga, 
                    global::System.Nullable<double> Jumlah, 
                    global::System.Nullable<bool> Status, 
                    string PartNo, 
                    string Original_NoBukti, 
                    global::System.Nullable<global::System.DateTime> Original_Tanggal, 
                    string Original_KodeStock, 
                    global::System.Nullable<double> Original_StockAwal, 
                    global::System.Nullable<double> Original_StockOpname, 
                    global::System.Nullable<double> Original_Selisih, 
                    global::System.Nullable<double> Original_Harga, 
                    global::System.Nullable<double> Original_Jumlah, 
                    global::System.Nullable<bool> Original_Status, 
                    string Original_PartNo) {
            if ((NoBukti == null)) {
                throw new global::System.ArgumentNullException("NoBukti");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NoBukti));
            }
            if ((Tanggal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Tanggal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((KodeStock == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(KodeStock));
            }
            if ((StockAwal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(StockAwal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((StockOpname.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(StockOpname.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Selisih.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Selisih.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Harga.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Harga.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Jumlah.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Jumlah.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PartNo == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PartNo));
            }
            if ((Original_NoBukti == null)) {
                throw new global::System.ArgumentNullException("Original_NoBukti");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_NoBukti));
            }
            if ((Original_Tanggal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Tanggal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeStock == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_KodeStock));
            }
            if ((Original_StockAwal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_StockAwal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_StockOpname.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_StockOpname.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Selisih.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_Selisih.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Harga.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_Harga.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Jumlah.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_Jumlah.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Status.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Original_Status.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_PartNo == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_PartNo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> Tanggal, 
                    string KodeStock, 
                    global::System.Nullable<double> StockAwal, 
                    global::System.Nullable<double> StockOpname, 
                    global::System.Nullable<double> Selisih, 
                    global::System.Nullable<double> Harga, 
                    global::System.Nullable<double> Jumlah, 
                    global::System.Nullable<bool> Status, 
                    string PartNo, 
                    string Original_NoBukti, 
                    global::System.Nullable<global::System.DateTime> Original_Tanggal, 
                    string Original_KodeStock, 
                    global::System.Nullable<double> Original_StockAwal, 
                    global::System.Nullable<double> Original_StockOpname, 
                    global::System.Nullable<double> Original_Selisih, 
                    global::System.Nullable<double> Original_Harga, 
                    global::System.Nullable<double> Original_Jumlah, 
                    global::System.Nullable<bool> Original_Status, 
                    string Original_PartNo) {
            return this.Update(Original_NoBukti, Tanggal, KodeStock, StockAwal, StockOpname, Selisih, Harga, Jumlah, Status, PartNo, Original_NoBukti, Original_Tanggal, Original_KodeStock, Original_StockAwal, Original_StockOpname, Original_Selisih, Original_Harga, Original_Jumlah, Original_Status, Original_PartNo);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class view_stock_gudangTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public view_stock_gudangTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "view_stock_gudang";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("id_gudang", "id_gudang");
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("jumlah", "jumlah");
            tableMapping.ColumnMappings.Add("namaGudang", "namaGudang");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, id_gudang, KodeStock, jumlah, namaGudang FROM dbo.view_stock_gudang";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.view_stock_gudangDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.view_stock_gudangDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.view_stock_gudangDataTable dataTable = new Stock_Data.view_stock_gudangDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class stockMovementTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public stockMovementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "stockMovement";
            tableMapping.ColumnMappings.Add("no_bukti", "no_bukti");
            tableMapping.ColumnMappings.Add("tanggal", "tanggal");
            tableMapping.ColumnMappings.Add("id_gudang_asal", "id_gudang_asal");
            tableMapping.ColumnMappings.Add("id_gudang_tujuan", "id_gudang_tujuan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [stockMovement] WHERE (([no_bukti] = ?) AND ((? = 1 AND [tanggal] IS " +
                "NULL) OR ([tanggal] = ?)) AND ((? = 1 AND [id_gudang_asal] IS NULL) OR ([id_guda" +
                "ng_asal] = ?)) AND ((? = 1 AND [id_gudang_tujuan] IS NULL) OR ([id_gudang_tujuan" +
                "] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_no_bukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "no_bukti", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_tanggal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tanggal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tanggal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_id_gudang_asal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_asal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_id_gudang_asal", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_asal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_id_gudang_tujuan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_tujuan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_id_gudang_tujuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_tujuan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [stockMovement] ([no_bukti], [tanggal], [id_gudang_asal], [id_gudang_" +
                "tujuan]) VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("no_bukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "no_bukti", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tanggal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("id_gudang_asal", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_asal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("id_gudang_tujuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_tujuan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [stockMovement] SET [no_bukti] = ?, [tanggal] = ?, [id_gudang_asal] = ?, [id_gudang_tujuan] = ? WHERE (([no_bukti] = ?) AND ((? = 1 AND [tanggal] IS NULL) OR ([tanggal] = ?)) AND ((? = 1 AND [id_gudang_asal] IS NULL) OR ([id_gudang_asal] = ?)) AND ((? = 1 AND [id_gudang_tujuan] IS NULL) OR ([id_gudang_tujuan] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("no_bukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "no_bukti", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tanggal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("id_gudang_asal", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_asal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("id_gudang_tujuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_tujuan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_no_bukti", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "no_bukti", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_tanggal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tanggal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_tanggal", global::System.Data.OleDb.OleDbType.DBTimeStamp, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "tanggal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_id_gudang_asal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_asal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_id_gudang_asal", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_asal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_id_gudang_tujuan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_tujuan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_id_gudang_tujuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "id_gudang_tujuan", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     stockMovement.*\r\nFROM         stockMovement";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.stockMovementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.stockMovementDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.stockMovementDataTable dataTable = new Stock_Data.stockMovementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.stockMovementDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "stockMovement");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_no_bukti, global::System.Nullable<global::System.DateTime> Original_tanggal, string Original_id_gudang_asal, string Original_id_gudang_tujuan) {
            if ((Original_no_bukti == null)) {
                throw new global::System.ArgumentNullException("Original_no_bukti");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_no_bukti));
            }
            if ((Original_tanggal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_tanggal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_id_gudang_asal == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_id_gudang_asal));
            }
            if ((Original_id_gudang_tujuan == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_id_gudang_tujuan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string no_bukti, global::System.Nullable<global::System.DateTime> tanggal, string id_gudang_asal, string id_gudang_tujuan) {
            if ((no_bukti == null)) {
                throw new global::System.ArgumentNullException("no_bukti");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(no_bukti));
            }
            if ((tanggal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(tanggal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((id_gudang_asal == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(id_gudang_asal));
            }
            if ((id_gudang_tujuan == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(id_gudang_tujuan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string no_bukti, global::System.Nullable<global::System.DateTime> tanggal, string id_gudang_asal, string id_gudang_tujuan, string Original_no_bukti, global::System.Nullable<global::System.DateTime> Original_tanggal, string Original_id_gudang_asal, string Original_id_gudang_tujuan) {
            if ((no_bukti == null)) {
                throw new global::System.ArgumentNullException("no_bukti");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(no_bukti));
            }
            if ((tanggal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(tanggal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((id_gudang_asal == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(id_gudang_asal));
            }
            if ((id_gudang_tujuan == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(id_gudang_tujuan));
            }
            if ((Original_no_bukti == null)) {
                throw new global::System.ArgumentNullException("Original_no_bukti");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_no_bukti));
            }
            if ((Original_tanggal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_tanggal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_id_gudang_asal == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_id_gudang_asal));
            }
            if ((Original_id_gudang_tujuan == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_id_gudang_tujuan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> tanggal, string id_gudang_asal, string id_gudang_tujuan, string Original_no_bukti, global::System.Nullable<global::System.DateTime> Original_tanggal, string Original_id_gudang_asal, string Original_id_gudang_tujuan) {
            return this.Update(Original_no_bukti, tanggal, id_gudang_asal, id_gudang_tujuan, Original_no_bukti, Original_tanggal, Original_id_gudang_asal, Original_id_gudang_tujuan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SatuanTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SatuanTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Satuan";
            tableMapping.ColumnMappings.Add("NamaSatuan", "NamaSatuan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Pos].[dbo].[Satuan] WHERE (([NamaSatuan] = ?))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaSatuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaSatuan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Pos].[dbo].[Satuan] ([NamaSatuan]) VALUES (?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaSatuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaSatuan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Pos].[dbo].[Satuan] SET [NamaSatuan] = ? WHERE (([NamaSatuan] = ?))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaSatuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaSatuan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaSatuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaSatuan", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NamaSatuan FROM dbo.Satuan";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.SatuanDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.SatuanDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.SatuanDataTable dataTable = new Stock_Data.SatuanDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.SatuanDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "Satuan");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NamaSatuan) {
            if ((Original_NamaSatuan == null)) {
                throw new global::System.ArgumentNullException("Original_NamaSatuan");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NamaSatuan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NamaSatuan) {
            if ((NamaSatuan == null)) {
                throw new global::System.ArgumentNullException("NamaSatuan");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NamaSatuan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NamaSatuan, string Original_NamaSatuan) {
            if ((NamaSatuan == null)) {
                throw new global::System.ArgumentNullException("NamaSatuan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NamaSatuan));
            }
            if ((Original_NamaSatuan == null)) {
                throw new global::System.ArgumentNullException("Original_NamaSatuan");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Original_NamaSatuan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Original_NamaSatuan) {
            return this.Update(Original_NamaSatuan, Original_NamaSatuan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class StockTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Stock";
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("NamaStock", "NamaStock");
            tableMapping.ColumnMappings.Add("Satuan", "Satuan");
            tableMapping.ColumnMappings.Add("JumlahStock", "JumlahStock");
            tableMapping.ColumnMappings.Add("PV", "PV");
            tableMapping.ColumnMappings.Add("BV", "BV");
            tableMapping.ColumnMappings.Add("StockAkhir", "StockAkhir");
            tableMapping.ColumnMappings.Add("HargaBeli", "HargaBeli");
            tableMapping.ColumnMappings.Add("NilaiStock", "NilaiStock");
            tableMapping.ColumnMappings.Add("HargaJual1", "HargaJual1");
            tableMapping.ColumnMappings.Add("HargaJual2", "HargaJual2");
            tableMapping.ColumnMappings.Add("HargaJual3", "HargaJual3");
            tableMapping.ColumnMappings.Add("Ukuran", "Ukuran");
            tableMapping.ColumnMappings.Add("StockMinimum", "StockMinimum");
            tableMapping.ColumnMappings.Add("Isi", "Isi");
            tableMapping.ColumnMappings.Add("SatuanIsi", "SatuanIsi");
            tableMapping.ColumnMappings.Add("KodeBarcode", "KodeBarcode");
            tableMapping.ColumnMappings.Add("StockPesanan", "StockPesanan");
            tableMapping.ColumnMappings.Add("JumlahPemesanan", "JumlahPemesanan");
            tableMapping.ColumnMappings.Add("JumlahPesanan", "JumlahPesanan");
            tableMapping.ColumnMappings.Add("KodeSupplier", "KodeSupplier");
            tableMapping.ColumnMappings.Add("HargaRata", "HargaRata");
            tableMapping.ColumnMappings.Add("HargaAwal", "HargaAwal");
            tableMapping.ColumnMappings.Add("NilaiAwal", "NilaiAwal");
            tableMapping.ColumnMappings.Add("KomisiSalesman", "KomisiSalesman");
            tableMapping.ColumnMappings.Add("NamaFileGambar1", "NamaFileGambar1");
            tableMapping.ColumnMappings.Add("NamaFileGambar2", "NamaFileGambar2");
            tableMapping.ColumnMappings.Add("StRacik", "StRacik");
            tableMapping.ColumnMappings.Add("Kegunaan", "Kegunaan");
            tableMapping.ColumnMappings.Add("KodeKelompok", "KodeKelompok");
            tableMapping.ColumnMappings.Add("Qty1", "Qty1");
            tableMapping.ColumnMappings.Add("Qty2", "Qty2");
            tableMapping.ColumnMappings.Add("HargaJual4", "HargaJual4");
            tableMapping.ColumnMappings.Add("Qty3", "Qty3");
            tableMapping.ColumnMappings.Add("Qty4", "Qty4");
            tableMapping.ColumnMappings.Add("KodeKelompok2", "KodeKelompok2");
            tableMapping.ColumnMappings.Add("cost", "cost");
            tableMapping.ColumnMappings.Add("HargaJual", "HargaJual");
            tableMapping.ColumnMappings.Add("disc1", "disc1");
            tableMapping.ColumnMappings.Add("disc2", "disc2");
            tableMapping.ColumnMappings.Add("ppn", "ppn");
            tableMapping.ColumnMappings.Add("discrp", "discrp");
            tableMapping.ColumnMappings.Add("disc3", "disc3");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Stock] WHERE (([KodeStock] = ?) AND ((? = 1 AND [NamaStock] IS NULL)" +
                " OR ([NamaStock] = ?)) AND ((? = 1 AND [Satuan] IS NULL) OR ([Satuan] = ?)) AND " +
                "((? = 1 AND [JumlahStock] IS NULL) OR ([JumlahStock] = ?)) AND ((? = 1 AND [PV] " +
                "IS NULL) OR ([PV] = ?)) AND ((? = 1 AND [BV] IS NULL) OR ([BV] = ?)) AND ((? = 1" +
                " AND [StockAkhir] IS NULL) OR ([StockAkhir] = ?)) AND ((? = 1 AND [HargaBeli] IS" +
                " NULL) OR ([HargaBeli] = ?)) AND ((? = 1 AND [NilaiStock] IS NULL) OR ([NilaiSto" +
                "ck] = ?)) AND ((? = 1 AND [HargaJual1] IS NULL) OR ([HargaJual1] = ?)) AND ((? =" +
                " 1 AND [HargaJual2] IS NULL) OR ([HargaJual2] = ?)) AND ((? = 1 AND [HargaJual3]" +
                " IS NULL) OR ([HargaJual3] = ?)) AND ((? = 1 AND [Ukuran] IS NULL) OR ([Ukuran] " +
                "= ?)) AND ((? = 1 AND [StockMinimum] IS NULL) OR ([StockMinimum] = ?)) AND ((? =" +
                " 1 AND [Isi] IS NULL) OR ([Isi] = ?)) AND ((? = 1 AND [SatuanIsi] IS NULL) OR ([" +
                "SatuanIsi] = ?)) AND ((? = 1 AND [KodeBarcode] IS NULL) OR ([KodeBarcode] = ?)) " +
                "AND ((? = 1 AND [StockPesanan] IS NULL) OR ([StockPesanan] = ?)) AND ((? = 1 AND" +
                " [JumlahPemesanan] IS NULL) OR ([JumlahPemesanan] = ?)) AND ((? = 1 AND [JumlahP" +
                "esanan] IS NULL) OR ([JumlahPesanan] = ?)) AND ((? = 1 AND [KodeSupplier] IS NUL" +
                "L) OR ([KodeSupplier] = ?)) AND ((? = 1 AND [HargaRata] IS NULL) OR ([HargaRata]" +
                " = ?)) AND ((? = 1 AND [HargaAwal] IS NULL) OR ([HargaAwal] = ?)) AND ((? = 1 AN" +
                "D [NilaiAwal] IS NULL) OR ([NilaiAwal] = ?)) AND ((? = 1 AND [KomisiSalesman] IS" +
                " NULL) OR ([KomisiSalesman] = ?)) AND ((? = 1 AND [NamaFileGambar1] IS NULL) OR " +
                "([NamaFileGambar1] = ?)) AND ((? = 1 AND [NamaFileGambar2] IS NULL) OR ([NamaFil" +
                "eGambar2] = ?)) AND ((? = 1 AND [StRacik] IS NULL) OR ([StRacik] = ?)) AND ([Kod" +
                "eKelompok] = ?) AND ((? = 1 AND [Qty1] IS NULL) OR ([Qty1] = ?)) AND ((? = 1 AND" +
                " [Qty2] IS NULL) OR ([Qty2] = ?)) AND ((? = 1 AND [HargaJual4] IS NULL) OR ([Har" +
                "gaJual4] = ?)) AND ((? = 1 AND [Qty3] IS NULL) OR ([Qty3] = ?)) AND ((? = 1 AND " +
                "[Qty4] IS NULL) OR ([Qty4] = ?)) AND ((? = 1 AND [KodeKelompok2] IS NULL) OR ([K" +
                "odeKelompok2] = ?)) AND ((? = 1 AND [cost] IS NULL) OR ([cost] = ?)) AND ((? = 1" +
                " AND [HargaJual] IS NULL) OR ([HargaJual] = ?)) AND ((? = 1 AND [disc1] IS NULL)" +
                " OR ([disc1] = ?)) AND ((? = 1 AND [disc2] IS NULL) OR ([disc2] = ?)) AND ((? = " +
                "1 AND [ppn] IS NULL) OR ([ppn] = ?)) AND ((? = 1 AND [discrp] IS NULL) OR ([disc" +
                "rp] = ?)) AND ((? = 1 AND [disc3] IS NULL) OR ([disc3] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Satuan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Satuan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Satuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Satuan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JumlahStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JumlahStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PV", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PV", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PV", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BV", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BV", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BV", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockAkhir", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAkhir", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockAkhir", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAkhir", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaBeli", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaBeli", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaBeli", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaBeli", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NilaiStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NilaiStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Ukuran", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ukuran", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ukuran", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ukuran", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockMinimum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockMinimum", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockMinimum", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockMinimum", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Isi", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Isi", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Isi", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Isi", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SatuanIsi", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SatuanIsi", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SatuanIsi", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SatuanIsi", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeBarcode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeBarcode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeBarcode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeBarcode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockPesanan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockPesanan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockPesanan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JumlahPemesanan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPemesanan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JumlahPemesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPemesanan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JumlahPesanan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPesanan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JumlahPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPesanan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeSupplier", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeSupplier", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeSupplier", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeSupplier", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaRata", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaRata", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaRata", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaRata", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaAwal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaAwal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaAwal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NilaiAwal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiAwal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NilaiAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiAwal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KomisiSalesman", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KomisiSalesman", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KomisiSalesman", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KomisiSalesman", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaFileGambar1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaFileGambar1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaFileGambar2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaFileGambar2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StRacik", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StRacik", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StRacik", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StRacik", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeKelompok2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeKelompok2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_cost", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cost", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_cost", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cost", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_disc1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_disc1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_disc2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_disc2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ppn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ppn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ppn", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ppn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_discrp", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "discrp", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_discrp", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "discrp", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_disc3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_disc3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Stock] ([KodeStock], [NamaStock], [Satuan], [JumlahStock], [PV], [BV], [StockAkhir], [HargaBeli], [NilaiStock], [HargaJual1], [HargaJual2], [HargaJual3], [Ukuran], [StockMinimum], [Isi], [SatuanIsi], [KodeBarcode], [StockPesanan], [JumlahPemesanan], [JumlahPesanan], [KodeSupplier], [HargaRata], [HargaAwal], [NilaiAwal], [KomisiSalesman], [NamaFileGambar1], [NamaFileGambar2], [StRacik], [Kegunaan], [KodeKelompok], [Qty1], [Qty2], [HargaJual4], [Qty3], [Qty4], [KodeKelompok2], [cost], [HargaJual], [disc1], [disc2], [ppn], [discrp], [disc3]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Satuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Satuan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JumlahStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockAkhir", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAkhir", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaBeli", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaBeli", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NilaiStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Ukuran", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ukuran", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockMinimum", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockMinimum", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Isi", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Isi", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SatuanIsi", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SatuanIsi", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeBarcode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeBarcode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockPesanan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JumlahPemesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPemesanan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JumlahPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPesanan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeSupplier", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeSupplier", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaRata", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaRata", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaAwal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NilaiAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiAwal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KomisiSalesman", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KomisiSalesman", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaFileGambar1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaFileGambar2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StRacik", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StRacik", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Kegunaan", global::System.Data.OleDb.OleDbType.LongVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Kegunaan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeKelompok2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("cost", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cost", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("disc1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("disc2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ppn", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ppn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("discrp", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "discrp", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("disc3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Stock] SET [KodeStock] = ?, [NamaStock] = ?, [Satuan] = ?, [JumlahStock] " +
                "= ?, [PV] = ?, [BV] = ?, [StockAkhir] = ?, [HargaBeli] = ?, [NilaiStock] = ?, [H" +
                "argaJual1] = ?, [HargaJual2] = ?, [HargaJual3] = ?, [Ukuran] = ?, [StockMinimum]" +
                " = ?, [Isi] = ?, [SatuanIsi] = ?, [KodeBarcode] = ?, [StockPesanan] = ?, [Jumlah" +
                "Pemesanan] = ?, [JumlahPesanan] = ?, [KodeSupplier] = ?, [HargaRata] = ?, [Harga" +
                "Awal] = ?, [NilaiAwal] = ?, [KomisiSalesman] = ?, [NamaFileGambar1] = ?, [NamaFi" +
                "leGambar2] = ?, [StRacik] = ?, [Kegunaan] = ?, [KodeKelompok] = ?, [Qty1] = ?, [" +
                "Qty2] = ?, [HargaJual4] = ?, [Qty3] = ?, [Qty4] = ?, [KodeKelompok2] = ?, [cost]" +
                " = ?, [HargaJual] = ?, [disc1] = ?, [disc2] = ?, [ppn] = ?, [discrp] = ?, [disc3" +
                "] = ? WHERE (([KodeStock] = ?) AND ((? = 1 AND [NamaStock] IS NULL) OR ([NamaSto" +
                "ck] = ?)) AND ((? = 1 AND [Satuan] IS NULL) OR ([Satuan] = ?)) AND ((? = 1 AND [" +
                "JumlahStock] IS NULL) OR ([JumlahStock] = ?)) AND ((? = 1 AND [PV] IS NULL) OR (" +
                "[PV] = ?)) AND ((? = 1 AND [BV] IS NULL) OR ([BV] = ?)) AND ((? = 1 AND [StockAk" +
                "hir] IS NULL) OR ([StockAkhir] = ?)) AND ((? = 1 AND [HargaBeli] IS NULL) OR ([H" +
                "argaBeli] = ?)) AND ((? = 1 AND [NilaiStock] IS NULL) OR ([NilaiStock] = ?)) AND" +
                " ((? = 1 AND [HargaJual1] IS NULL) OR ([HargaJual1] = ?)) AND ((? = 1 AND [Harga" +
                "Jual2] IS NULL) OR ([HargaJual2] = ?)) AND ((? = 1 AND [HargaJual3] IS NULL) OR " +
                "([HargaJual3] = ?)) AND ((? = 1 AND [Ukuran] IS NULL) OR ([Ukuran] = ?)) AND ((?" +
                " = 1 AND [StockMinimum] IS NULL) OR ([StockMinimum] = ?)) AND ((? = 1 AND [Isi] " +
                "IS NULL) OR ([Isi] = ?)) AND ((? = 1 AND [SatuanIsi] IS NULL) OR ([SatuanIsi] = " +
                "?)) AND ((? = 1 AND [KodeBarcode] IS NULL) OR ([KodeBarcode] = ?)) AND ((? = 1 A" +
                "ND [StockPesanan] IS NULL) OR ([StockPesanan] = ?)) AND ((? = 1 AND [JumlahPemes" +
                "anan] IS NULL) OR ([JumlahPemesanan] = ?)) AND ((? = 1 AND [JumlahPesanan] IS NU" +
                "LL) OR ([JumlahPesanan] = ?)) AND ((? = 1 AND [KodeSupplier] IS NULL) OR ([KodeS" +
                "upplier] = ?)) AND ((? = 1 AND [HargaRata] IS NULL) OR ([HargaRata] = ?)) AND ((" +
                "? = 1 AND [HargaAwal] IS NULL) OR ([HargaAwal] = ?)) AND ((? = 1 AND [NilaiAwal]" +
                " IS NULL) OR ([NilaiAwal] = ?)) AND ((? = 1 AND [KomisiSalesman] IS NULL) OR ([K" +
                "omisiSalesman] = ?)) AND ((? = 1 AND [NamaFileGambar1] IS NULL) OR ([NamaFileGam" +
                "bar1] = ?)) AND ((? = 1 AND [NamaFileGambar2] IS NULL) OR ([NamaFileGambar2] = ?" +
                ")) AND ((? = 1 AND [StRacik] IS NULL) OR ([StRacik] = ?)) AND ([KodeKelompok] = " +
                "?) AND ((? = 1 AND [Qty1] IS NULL) OR ([Qty1] = ?)) AND ((? = 1 AND [Qty2] IS NU" +
                "LL) OR ([Qty2] = ?)) AND ((? = 1 AND [HargaJual4] IS NULL) OR ([HargaJual4] = ?)" +
                ") AND ((? = 1 AND [Qty3] IS NULL) OR ([Qty3] = ?)) AND ((? = 1 AND [Qty4] IS NUL" +
                "L) OR ([Qty4] = ?)) AND ((? = 1 AND [KodeKelompok2] IS NULL) OR ([KodeKelompok2]" +
                " = ?)) AND ((? = 1 AND [cost] IS NULL) OR ([cost] = ?)) AND ((? = 1 AND [HargaJu" +
                "al] IS NULL) OR ([HargaJual] = ?)) AND ((? = 1 AND [disc1] IS NULL) OR ([disc1] " +
                "= ?)) AND ((? = 1 AND [disc2] IS NULL) OR ([disc2] = ?)) AND ((? = 1 AND [ppn] I" +
                "S NULL) OR ([ppn] = ?)) AND ((? = 1 AND [discrp] IS NULL) OR ([discrp] = ?)) AND" +
                " ((? = 1 AND [disc3] IS NULL) OR ([disc3] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Satuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Satuan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JumlahStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("PV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("BV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockAkhir", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAkhir", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaBeli", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaBeli", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NilaiStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Ukuran", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ukuran", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockMinimum", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockMinimum", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Isi", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Isi", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("SatuanIsi", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SatuanIsi", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeBarcode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeBarcode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StockPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockPesanan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JumlahPemesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPemesanan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JumlahPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPesanan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeSupplier", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeSupplier", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaRata", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaRata", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaAwal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NilaiAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiAwal", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KomisiSalesman", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KomisiSalesman", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaFileGambar1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaFileGambar2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StRacik", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StRacik", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Kegunaan", global::System.Data.OleDb.OleDbType.LongVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Kegunaan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Qty4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeKelompok2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("cost", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cost", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("HargaJual", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("disc1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("disc2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("ppn", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ppn", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("discrp", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "discrp", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("disc3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Satuan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Satuan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Satuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Satuan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JumlahStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JumlahStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_PV", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PV", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_PV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PV", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_BV", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BV", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_BV", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BV", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockAkhir", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAkhir", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockAkhir", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockAkhir", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaBeli", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaBeli", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaBeli", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaBeli", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NilaiStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NilaiStock", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Ukuran", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ukuran", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Ukuran", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ukuran", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockMinimum", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockMinimum", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockMinimum", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockMinimum", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Isi", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Isi", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Isi", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Isi", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_SatuanIsi", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SatuanIsi", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_SatuanIsi", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SatuanIsi", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeBarcode", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeBarcode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeBarcode", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeBarcode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StockPesanan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockPesanan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StockPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StockPesanan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JumlahPemesanan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPemesanan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JumlahPemesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPemesanan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JumlahPesanan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPesanan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JumlahPesanan", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JumlahPesanan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeSupplier", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeSupplier", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeSupplier", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeSupplier", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaRata", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaRata", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaRata", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaRata", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaAwal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaAwal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaAwal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NilaiAwal", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiAwal", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NilaiAwal", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NilaiAwal", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KomisiSalesman", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KomisiSalesman", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KomisiSalesman", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KomisiSalesman", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaFileGambar1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaFileGambar1", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaFileGambar2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaFileGambar2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaFileGambar2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StRacik", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StRacik", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StRacik", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StRacik", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_Qty4", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_Qty4", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Qty4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeKelompok2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeKelompok2", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_cost", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cost", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_cost", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "cost", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_HargaJual", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_HargaJual", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HargaJual", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_disc1", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_disc1", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_disc2", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_disc2", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_ppn", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ppn", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_ppn", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ppn", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_discrp", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "discrp", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_discrp", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "discrp", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_disc3", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_disc3", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "disc3", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[3];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     KodeStock, NamaStock, Satuan, JumlahStock, PV, BV, StockAkhir, HargaBeli, NilaiStock, HargaJual1, HargaJual2, HargaJual3, Ukuran, StockMinimum, 
                      Isi, SatuanIsi, KodeBarcode, StockPesanan, JumlahPemesanan, JumlahPesanan, KodeSupplier, HargaRata, HargaAwal, NilaiAwal, KomisiSalesman, 
                      NamaFileGambar1, NamaFileGambar2, StRacik, Kegunaan, KodeKelompok, Qty1, Qty2, HargaJual4, Qty3, Qty4, KodeKelompok2, cost, HargaJual, 
                      disc1, disc2, ppn, discrp, disc3
FROM         Stock";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT KodeStock, NamaStock, Satuan, JumlahStock, PV, BV, StockAkhir, HargaBeli, NilaiStock, HargaJual1, HargaJual2, HargaJual3, Ukuran, StockMinimum, Isi, SatuanIsi, KodeBarcode, StockPesanan, JumlahPemesanan, JumlahPesanan, KodeSupplier, HargaRata, HargaAwal, NilaiAwal, KomisiSalesman, NamaFileGambar1, NamaFileGambar2, StRacik, Kegunaan, KodeKelompok FROM dbo.Stock order by NamaStock ASC";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT KodeStock, NamaStock, Satuan, JumlahStock, PV, BV, StockAkhir, HargaBeli, NilaiStock, HargaJual1, HargaJual2, HargaJual3, Ukuran, StockMinimum, Isi, SatuanIsi, KodeBarcode, StockPesanan, JumlahPemesanan, JumlahPesanan, KodeSupplier, HargaRata, HargaAwal, NilaiAwal, KomisiSalesman, NamaFileGambar1, NamaFileGambar2, StRacik, Kegunaan, KodeKelompok FROM dbo.Stock ORDER BY NamaStock";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.StockDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.StockDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.StockDataTable dataTable = new Stock_Data.StockDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(Stock_Data.StockDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int orderByName(Stock_Data.StockDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.StockDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "Stock");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_KodeStock, 
                    string Original_NamaStock, 
                    string Original_Satuan, 
                    global::System.Nullable<double> Original_JumlahStock, 
                    global::System.Nullable<double> Original_PV, 
                    global::System.Nullable<double> Original_BV, 
                    global::System.Nullable<double> Original_StockAkhir, 
                    global::System.Nullable<double> Original_HargaBeli, 
                    global::System.Nullable<double> Original_NilaiStock, 
                    global::System.Nullable<double> Original_HargaJual1, 
                    global::System.Nullable<double> Original_HargaJual2, 
                    global::System.Nullable<double> Original_HargaJual3, 
                    string Original_Ukuran, 
                    global::System.Nullable<double> Original_StockMinimum, 
                    global::System.Nullable<double> Original_Isi, 
                    string Original_SatuanIsi, 
                    string Original_KodeBarcode, 
                    global::System.Nullable<double> Original_StockPesanan, 
                    global::System.Nullable<double> Original_JumlahPemesanan, 
                    global::System.Nullable<double> Original_JumlahPesanan, 
                    string Original_KodeSupplier, 
                    global::System.Nullable<double> Original_HargaRata, 
                    global::System.Nullable<double> Original_HargaAwal, 
                    global::System.Nullable<double> Original_NilaiAwal, 
                    global::System.Nullable<double> Original_KomisiSalesman, 
                    string Original_NamaFileGambar1, 
                    string Original_NamaFileGambar2, 
                    global::System.Nullable<bool> Original_StRacik, 
                    string Original_KodeKelompok, 
                    global::System.Nullable<double> Original_Qty1, 
                    global::System.Nullable<double> Original_Qty2, 
                    global::System.Nullable<double> Original_HargaJual4, 
                    global::System.Nullable<double> Original_Qty3, 
                    global::System.Nullable<double> Original_Qty4, 
                    string Original_KodeKelompok2, 
                    global::System.Nullable<double> Original_cost, 
                    global::System.Nullable<double> Original_HargaJual, 
                    global::System.Nullable<double> Original_disc1, 
                    global::System.Nullable<double> Original_disc2, 
                    global::System.Nullable<double> Original_ppn, 
                    global::System.Nullable<double> Original_discrp, 
                    global::System.Nullable<double> Original_disc3) {
            if ((Original_KodeStock == null)) {
                throw new global::System.ArgumentNullException("Original_KodeStock");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_KodeStock));
            }
            if ((Original_NamaStock == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NamaStock));
            }
            if ((Original_Satuan == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Satuan));
            }
            if ((Original_JumlahStock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_JumlahStock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_PV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_PV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_BV.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_BV.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_StockAkhir.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_StockAkhir.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaBeli.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_HargaBeli.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_NilaiStock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_NilaiStock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_HargaJual1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_HargaJual2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_HargaJual3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Ukuran == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Ukuran));
            }
            if ((Original_StockMinimum.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_StockMinimum.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Isi.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_Isi.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_SatuanIsi == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_SatuanIsi));
            }
            if ((Original_KodeBarcode == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_KodeBarcode));
            }
            if ((Original_StockPesanan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_StockPesanan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_JumlahPemesanan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(Original_JumlahPemesanan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_JumlahPesanan.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_JumlahPesanan.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeSupplier == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_KodeSupplier));
            }
            if ((Original_HargaRata.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((double)(Original_HargaRata.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaAwal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(Original_HargaAwal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_NilaiAwal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(Original_NilaiAwal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_KomisiSalesman.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(Original_KomisiSalesman.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_NamaFileGambar1 == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_NamaFileGambar1));
            }
            if ((Original_NamaFileGambar2 == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_NamaFileGambar2));
            }
            if ((Original_StRacik.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((bool)(Original_StRacik.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("Original_KodeKelompok");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_KodeKelompok));
            }
            if ((Original_Qty1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((double)(Original_Qty1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_Qty2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[59].Value = ((double)(Original_Qty2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[61].Value = ((double)(Original_HargaJual4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_Qty3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[63].Value = ((double)(Original_Qty3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_Qty4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((double)(Original_Qty4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeKelompok2 == null)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_KodeKelompok2));
            }
            if ((Original_cost.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((double)(Original_cost.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((double)(Original_HargaJual.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_disc1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[73].Value = ((double)(Original_disc1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_disc2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((double)(Original_disc2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_ppn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[77].Value = ((double)(Original_ppn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_discrp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((double)(Original_discrp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_disc3.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((double)(Original_disc3.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string KodeStock, 
                    string NamaStock, 
                    string Satuan, 
                    global::System.Nullable<double> JumlahStock, 
                    global::System.Nullable<double> PV, 
                    global::System.Nullable<double> BV, 
                    global::System.Nullable<double> StockAkhir, 
                    global::System.Nullable<double> HargaBeli, 
                    global::System.Nullable<double> NilaiStock, 
                    global::System.Nullable<double> HargaJual1, 
                    global::System.Nullable<double> HargaJual2, 
                    global::System.Nullable<double> HargaJual3, 
                    string Ukuran, 
                    global::System.Nullable<double> StockMinimum, 
                    global::System.Nullable<double> Isi, 
                    string SatuanIsi, 
                    string KodeBarcode, 
                    global::System.Nullable<double> StockPesanan, 
                    global::System.Nullable<double> JumlahPemesanan, 
                    global::System.Nullable<double> JumlahPesanan, 
                    string KodeSupplier, 
                    global::System.Nullable<double> HargaRata, 
                    global::System.Nullable<double> HargaAwal, 
                    global::System.Nullable<double> NilaiAwal, 
                    global::System.Nullable<double> KomisiSalesman, 
                    string NamaFileGambar1, 
                    string NamaFileGambar2, 
                    global::System.Nullable<bool> StRacik, 
                    string Kegunaan, 
                    string KodeKelompok, 
                    global::System.Nullable<double> Qty1, 
                    global::System.Nullable<double> Qty2, 
                    global::System.Nullable<double> HargaJual4, 
                    global::System.Nullable<double> Qty3, 
                    global::System.Nullable<double> Qty4, 
                    string KodeKelompok2, 
                    global::System.Nullable<double> cost, 
                    global::System.Nullable<double> HargaJual, 
                    global::System.Nullable<double> disc1, 
                    global::System.Nullable<double> disc2, 
                    global::System.Nullable<double> ppn, 
                    global::System.Nullable<double> discrp, 
                    global::System.Nullable<double> disc3) {
            if ((KodeStock == null)) {
                throw new global::System.ArgumentNullException("KodeStock");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KodeStock));
            }
            if ((NamaStock == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NamaStock));
            }
            if ((Satuan == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Satuan));
            }
            if ((JumlahStock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(JumlahStock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(PV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((BV.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(BV.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((StockAkhir.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(StockAkhir.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HargaBeli.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(HargaBeli.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NilaiStock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(NilaiStock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HargaJual1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(HargaJual1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((HargaJual2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(HargaJual2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((HargaJual3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(HargaJual3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Ukuran == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Ukuran));
            }
            if ((StockMinimum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(StockMinimum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Isi.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Isi.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SatuanIsi == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SatuanIsi));
            }
            if ((KodeBarcode == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(KodeBarcode));
            }
            if ((StockPesanan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(StockPesanan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((JumlahPemesanan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(JumlahPemesanan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((JumlahPesanan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(JumlahPesanan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((KodeSupplier == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(KodeSupplier));
            }
            if ((HargaRata.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(HargaRata.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((HargaAwal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(HargaAwal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NilaiAwal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(NilaiAwal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((KomisiSalesman.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(KomisiSalesman.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((NamaFileGambar1 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(NamaFileGambar1));
            }
            if ((NamaFileGambar2 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(NamaFileGambar2));
            }
            if ((StRacik.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(StRacik.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Kegunaan == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(Kegunaan));
            }
            if ((KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("KodeKelompok");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(KodeKelompok));
            }
            if ((Qty1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(Qty1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Qty2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(Qty2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((HargaJual4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(HargaJual4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Qty3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(Qty3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Qty4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(Qty4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((KodeKelompok2 == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(KodeKelompok2));
            }
            if ((cost.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(cost.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((HargaJual.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(HargaJual.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((disc1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(disc1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((disc2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(disc2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ppn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(ppn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((discrp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(discrp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((disc3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(disc3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string KodeStock, 
                    string NamaStock, 
                    string Satuan, 
                    global::System.Nullable<double> JumlahStock, 
                    global::System.Nullable<double> PV, 
                    global::System.Nullable<double> BV, 
                    global::System.Nullable<double> StockAkhir, 
                    global::System.Nullable<double> HargaBeli, 
                    global::System.Nullable<double> NilaiStock, 
                    global::System.Nullable<double> HargaJual1, 
                    global::System.Nullable<double> HargaJual2, 
                    global::System.Nullable<double> HargaJual3, 
                    string Ukuran, 
                    global::System.Nullable<double> StockMinimum, 
                    global::System.Nullable<double> Isi, 
                    string SatuanIsi, 
                    string KodeBarcode, 
                    global::System.Nullable<double> StockPesanan, 
                    global::System.Nullable<double> JumlahPemesanan, 
                    global::System.Nullable<double> JumlahPesanan, 
                    string KodeSupplier, 
                    global::System.Nullable<double> HargaRata, 
                    global::System.Nullable<double> HargaAwal, 
                    global::System.Nullable<double> NilaiAwal, 
                    global::System.Nullable<double> KomisiSalesman, 
                    string NamaFileGambar1, 
                    string NamaFileGambar2, 
                    global::System.Nullable<bool> StRacik, 
                    string Kegunaan, 
                    string KodeKelompok, 
                    global::System.Nullable<double> Qty1, 
                    global::System.Nullable<double> Qty2, 
                    global::System.Nullable<double> HargaJual4, 
                    global::System.Nullable<double> Qty3, 
                    global::System.Nullable<double> Qty4, 
                    string KodeKelompok2, 
                    global::System.Nullable<double> cost, 
                    global::System.Nullable<double> HargaJual, 
                    global::System.Nullable<double> disc1, 
                    global::System.Nullable<double> disc2, 
                    global::System.Nullable<double> ppn, 
                    global::System.Nullable<double> discrp, 
                    global::System.Nullable<double> disc3, 
                    string Original_KodeStock, 
                    string Original_NamaStock, 
                    string Original_Satuan, 
                    global::System.Nullable<double> Original_JumlahStock, 
                    global::System.Nullable<double> Original_PV, 
                    global::System.Nullable<double> Original_BV, 
                    global::System.Nullable<double> Original_StockAkhir, 
                    global::System.Nullable<double> Original_HargaBeli, 
                    global::System.Nullable<double> Original_NilaiStock, 
                    global::System.Nullable<double> Original_HargaJual1, 
                    global::System.Nullable<double> Original_HargaJual2, 
                    global::System.Nullable<double> Original_HargaJual3, 
                    string Original_Ukuran, 
                    global::System.Nullable<double> Original_StockMinimum, 
                    global::System.Nullable<double> Original_Isi, 
                    string Original_SatuanIsi, 
                    string Original_KodeBarcode, 
                    global::System.Nullable<double> Original_StockPesanan, 
                    global::System.Nullable<double> Original_JumlahPemesanan, 
                    global::System.Nullable<double> Original_JumlahPesanan, 
                    string Original_KodeSupplier, 
                    global::System.Nullable<double> Original_HargaRata, 
                    global::System.Nullable<double> Original_HargaAwal, 
                    global::System.Nullable<double> Original_NilaiAwal, 
                    global::System.Nullable<double> Original_KomisiSalesman, 
                    string Original_NamaFileGambar1, 
                    string Original_NamaFileGambar2, 
                    global::System.Nullable<bool> Original_StRacik, 
                    string Original_KodeKelompok, 
                    global::System.Nullable<double> Original_Qty1, 
                    global::System.Nullable<double> Original_Qty2, 
                    global::System.Nullable<double> Original_HargaJual4, 
                    global::System.Nullable<double> Original_Qty3, 
                    global::System.Nullable<double> Original_Qty4, 
                    string Original_KodeKelompok2, 
                    global::System.Nullable<double> Original_cost, 
                    global::System.Nullable<double> Original_HargaJual, 
                    global::System.Nullable<double> Original_disc1, 
                    global::System.Nullable<double> Original_disc2, 
                    global::System.Nullable<double> Original_ppn, 
                    global::System.Nullable<double> Original_discrp, 
                    global::System.Nullable<double> Original_disc3) {
            if ((KodeStock == null)) {
                throw new global::System.ArgumentNullException("KodeStock");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(KodeStock));
            }
            if ((NamaStock == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NamaStock));
            }
            if ((Satuan == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Satuan));
            }
            if ((JumlahStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(JumlahStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((PV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(PV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((BV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(BV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((StockAkhir.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(StockAkhir.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HargaBeli.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(HargaBeli.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NilaiStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(NilaiStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HargaJual1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(HargaJual1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((HargaJual2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(HargaJual2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((HargaJual3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(HargaJual3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Ukuran == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Ukuran));
            }
            if ((StockMinimum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(StockMinimum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Isi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Isi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SatuanIsi == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SatuanIsi));
            }
            if ((KodeBarcode == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(KodeBarcode));
            }
            if ((StockPesanan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(StockPesanan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((JumlahPemesanan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(JumlahPemesanan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((JumlahPesanan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(JumlahPesanan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((KodeSupplier == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(KodeSupplier));
            }
            if ((HargaRata.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(HargaRata.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((HargaAwal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(HargaAwal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NilaiAwal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(NilaiAwal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((KomisiSalesman.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(KomisiSalesman.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((NamaFileGambar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(NamaFileGambar1));
            }
            if ((NamaFileGambar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(NamaFileGambar2));
            }
            if ((StRacik.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(StRacik.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Kegunaan == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Kegunaan));
            }
            if ((KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("KodeKelompok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(KodeKelompok));
            }
            if ((Qty1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Qty1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Qty2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Qty2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((HargaJual4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(HargaJual4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Qty3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Qty3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Qty4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Qty4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((KodeKelompok2 == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(KodeKelompok2));
            }
            if ((cost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(cost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((HargaJual.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(HargaJual.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((disc1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(disc1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((disc2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(disc2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((ppn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(ppn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((discrp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(discrp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((disc3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(disc3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeStock == null)) {
                throw new global::System.ArgumentNullException("Original_KodeStock");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_KodeStock));
            }
            if ((Original_NamaStock == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_NamaStock));
            }
            if ((Original_Satuan == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_Satuan));
            }
            if ((Original_JumlahStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_JumlahStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_PV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(Original_PV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_BV.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(Original_BV.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_StockAkhir.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(Original_StockAkhir.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaBeli.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(Original_HargaBeli.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_NilaiStock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(Original_NilaiStock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(Original_HargaJual1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(Original_HargaJual2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(Original_HargaJual3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_Ukuran == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_Ukuran));
            }
            if ((Original_StockMinimum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((double)(Original_StockMinimum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_Isi.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(Original_Isi.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_SatuanIsi == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_SatuanIsi));
            }
            if ((Original_KodeBarcode == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_KodeBarcode));
            }
            if ((Original_StockPesanan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(Original_StockPesanan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_JumlahPemesanan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(Original_JumlahPemesanan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_JumlahPesanan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((double)(Original_JumlahPesanan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeSupplier == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Original_KodeSupplier));
            }
            if ((Original_HargaRata.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((double)(Original_HargaRata.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaAwal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(Original_HargaAwal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_NilaiAwal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((double)(Original_NilaiAwal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_KomisiSalesman.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((double)(Original_KomisiSalesman.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_NamaFileGambar1 == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_NamaFileGambar1));
            }
            if ((Original_NamaFileGambar2 == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_NamaFileGambar2));
            }
            if ((Original_StRacik.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(Original_StRacik.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("Original_KodeKelompok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_KodeKelompok));
            }
            if ((Original_Qty1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((double)(Original_Qty1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((Original_Qty2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((double)(Original_Qty2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((double)(Original_HargaJual4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_Qty3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((double)(Original_Qty3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_Qty4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((double)(Original_Qty4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeKelompok2 == null)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_KodeKelompok2));
            }
            if ((Original_cost.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((double)(Original_cost.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_HargaJual.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((double)(Original_HargaJual.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_disc1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((double)(Original_disc1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_disc2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((double)(Original_disc2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_ppn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((double)(Original_ppn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_discrp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((double)(Original_discrp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_disc3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((double)(Original_disc3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NamaStock, 
                    string Satuan, 
                    global::System.Nullable<double> JumlahStock, 
                    global::System.Nullable<double> PV, 
                    global::System.Nullable<double> BV, 
                    global::System.Nullable<double> StockAkhir, 
                    global::System.Nullable<double> HargaBeli, 
                    global::System.Nullable<double> NilaiStock, 
                    global::System.Nullable<double> HargaJual1, 
                    global::System.Nullable<double> HargaJual2, 
                    global::System.Nullable<double> HargaJual3, 
                    string Ukuran, 
                    global::System.Nullable<double> StockMinimum, 
                    global::System.Nullable<double> Isi, 
                    string SatuanIsi, 
                    string KodeBarcode, 
                    global::System.Nullable<double> StockPesanan, 
                    global::System.Nullable<double> JumlahPemesanan, 
                    global::System.Nullable<double> JumlahPesanan, 
                    string KodeSupplier, 
                    global::System.Nullable<double> HargaRata, 
                    global::System.Nullable<double> HargaAwal, 
                    global::System.Nullable<double> NilaiAwal, 
                    global::System.Nullable<double> KomisiSalesman, 
                    string NamaFileGambar1, 
                    string NamaFileGambar2, 
                    global::System.Nullable<bool> StRacik, 
                    string Kegunaan, 
                    string KodeKelompok, 
                    global::System.Nullable<double> Qty1, 
                    global::System.Nullable<double> Qty2, 
                    global::System.Nullable<double> HargaJual4, 
                    global::System.Nullable<double> Qty3, 
                    global::System.Nullable<double> Qty4, 
                    string KodeKelompok2, 
                    global::System.Nullable<double> cost, 
                    global::System.Nullable<double> HargaJual, 
                    global::System.Nullable<double> disc1, 
                    global::System.Nullable<double> disc2, 
                    global::System.Nullable<double> ppn, 
                    global::System.Nullable<double> discrp, 
                    global::System.Nullable<double> disc3, 
                    string Original_KodeStock, 
                    string Original_NamaStock, 
                    string Original_Satuan, 
                    global::System.Nullable<double> Original_JumlahStock, 
                    global::System.Nullable<double> Original_PV, 
                    global::System.Nullable<double> Original_BV, 
                    global::System.Nullable<double> Original_StockAkhir, 
                    global::System.Nullable<double> Original_HargaBeli, 
                    global::System.Nullable<double> Original_NilaiStock, 
                    global::System.Nullable<double> Original_HargaJual1, 
                    global::System.Nullable<double> Original_HargaJual2, 
                    global::System.Nullable<double> Original_HargaJual3, 
                    string Original_Ukuran, 
                    global::System.Nullable<double> Original_StockMinimum, 
                    global::System.Nullable<double> Original_Isi, 
                    string Original_SatuanIsi, 
                    string Original_KodeBarcode, 
                    global::System.Nullable<double> Original_StockPesanan, 
                    global::System.Nullable<double> Original_JumlahPemesanan, 
                    global::System.Nullable<double> Original_JumlahPesanan, 
                    string Original_KodeSupplier, 
                    global::System.Nullable<double> Original_HargaRata, 
                    global::System.Nullable<double> Original_HargaAwal, 
                    global::System.Nullable<double> Original_NilaiAwal, 
                    global::System.Nullable<double> Original_KomisiSalesman, 
                    string Original_NamaFileGambar1, 
                    string Original_NamaFileGambar2, 
                    global::System.Nullable<bool> Original_StRacik, 
                    string Original_KodeKelompok, 
                    global::System.Nullable<double> Original_Qty1, 
                    global::System.Nullable<double> Original_Qty2, 
                    global::System.Nullable<double> Original_HargaJual4, 
                    global::System.Nullable<double> Original_Qty3, 
                    global::System.Nullable<double> Original_Qty4, 
                    string Original_KodeKelompok2, 
                    global::System.Nullable<double> Original_cost, 
                    global::System.Nullable<double> Original_HargaJual, 
                    global::System.Nullable<double> Original_disc1, 
                    global::System.Nullable<double> Original_disc2, 
                    global::System.Nullable<double> Original_ppn, 
                    global::System.Nullable<double> Original_discrp, 
                    global::System.Nullable<double> Original_disc3) {
            return this.Update(Original_KodeStock, NamaStock, Satuan, JumlahStock, PV, BV, StockAkhir, HargaBeli, NilaiStock, HargaJual1, HargaJual2, HargaJual3, Ukuran, StockMinimum, Isi, SatuanIsi, KodeBarcode, StockPesanan, JumlahPemesanan, JumlahPesanan, KodeSupplier, HargaRata, HargaAwal, NilaiAwal, KomisiSalesman, NamaFileGambar1, NamaFileGambar2, StRacik, Kegunaan, KodeKelompok, Qty1, Qty2, HargaJual4, Qty3, Qty4, KodeKelompok2, cost, HargaJual, disc1, disc2, ppn, discrp, disc3, Original_KodeStock, Original_NamaStock, Original_Satuan, Original_JumlahStock, Original_PV, Original_BV, Original_StockAkhir, Original_HargaBeli, Original_NilaiStock, Original_HargaJual1, Original_HargaJual2, Original_HargaJual3, Original_Ukuran, Original_StockMinimum, Original_Isi, Original_SatuanIsi, Original_KodeBarcode, Original_StockPesanan, Original_JumlahPemesanan, Original_JumlahPesanan, Original_KodeSupplier, Original_HargaRata, Original_HargaAwal, Original_NilaiAwal, Original_KomisiSalesman, Original_NamaFileGambar1, Original_NamaFileGambar2, Original_StRacik, Original_KodeKelompok, Original_Qty1, Original_Qty2, Original_HargaJual4, Original_Qty3, Original_Qty4, Original_KodeKelompok2, Original_cost, Original_HargaJual, Original_disc1, Original_disc2, Original_ppn, Original_discrp, Original_disc3);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class view_Total_Jumlah_Stock_Per_KelompokTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public view_Total_Jumlah_Stock_Per_KelompokTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "view_Total_Jumlah_Stock_Per_Kelompok";
            tableMapping.ColumnMappings.Add("result", "result");
            tableMapping.ColumnMappings.Add("KodeKelompok", "KodeKelompok");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT result, KodeKelompok FROM dbo.view_Total_Jumlah_Stock_Per_Kelompok";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.view_Total_Jumlah_Stock_Per_KelompokDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.view_Total_Jumlah_Stock_Per_KelompokDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.view_Total_Jumlah_Stock_Per_KelompokDataTable dataTable = new Stock_Data.view_Total_Jumlah_Stock_Per_KelompokDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class KelompokProdukTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KelompokProdukTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KelompokProduk";
            tableMapping.ColumnMappings.Add("NoUrut", "NoUrut");
            tableMapping.ColumnMappings.Add("KodeKelompok", "KodeKelompok");
            tableMapping.ColumnMappings.Add("NamaKelompok", "NamaKelompok");
            tableMapping.ColumnMappings.Add("JenisStock", "JenisStock");
            tableMapping.ColumnMappings.Add("STHarga", "STHarga");
            tableMapping.ColumnMappings.Add("StTuslah", "StTuslah");
            tableMapping.ColumnMappings.Add("KodeDokter", "KodeDokter");
            tableMapping.ColumnMappings.Add("JenisLaporan", "JenisLaporan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [Pos].[dbo].[KelompokProduk] WHERE (([NoUrut] = ?) AND ([KodeKelompok] = ?) AND ((? = 1 AND [NamaKelompok] IS NULL) OR ([NamaKelompok] = ?)) AND ((? = 1 AND [JenisStock] IS NULL) OR ([JenisStock] = ?)) AND ((? = 1 AND [STHarga] IS NULL) OR ([STHarga] = ?)) AND ((? = 1 AND [StTuslah] IS NULL) OR ([StTuslah] = ?)) AND ((? = 1 AND [KodeDokter] IS NULL) OR ([KodeDokter] = ?)) AND ((? = 1 AND [JenisLaporan] IS NULL) OR ([JenisLaporan] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NoUrut", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoUrut", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaKelompok", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaKelompok", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaKelompok", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JenisStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JenisStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STHarga", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STHarga", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STHarga", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STHarga", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StTuslah", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StTuslah", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StTuslah", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StTuslah", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeDokter", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeDokter", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeDokter", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeDokter", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JenisLaporan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisLaporan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JenisLaporan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisLaporan", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Pos].[dbo].[KelompokProduk] ([KodeKelompok], [NamaKelompok], [JenisS" +
                "tock], [STHarga], [StTuslah], [KodeDokter], [JenisLaporan]) VALUES (?, ?, ?, ?, " +
                "?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaKelompok", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JenisStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STHarga", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STHarga", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StTuslah", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StTuslah", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeDokter", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeDokter", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JenisLaporan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisLaporan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [Pos].[dbo].[KelompokProduk] SET [KodeKelompok] = ?, [NamaKelompok] = ?, [JenisStock] = ?, [STHarga] = ?, [StTuslah] = ?, [KodeDokter] = ?, [JenisLaporan] = ? WHERE (([NoUrut] = ?) AND ([KodeKelompok] = ?) AND ((? = 1 AND [NamaKelompok] IS NULL) OR ([NamaKelompok] = ?)) AND ((? = 1 AND [JenisStock] IS NULL) OR ([JenisStock] = ?)) AND ((? = 1 AND [STHarga] IS NULL) OR ([STHarga] = ?)) AND ((? = 1 AND [StTuslah] IS NULL) OR ([StTuslah] = ?)) AND ((? = 1 AND [KodeDokter] IS NULL) OR ([KodeDokter] = ?)) AND ((? = 1 AND [JenisLaporan] IS NULL) OR ([JenisLaporan] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("NamaKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaKelompok", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JenisStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("STHarga", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STHarga", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("StTuslah", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StTuslah", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeDokter", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeDokter", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("JenisLaporan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisLaporan", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NoUrut", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NoUrut", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeKelompok", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_NamaKelompok", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaKelompok", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_NamaKelompok", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NamaKelompok", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JenisStock", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisStock", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JenisStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisStock", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_STHarga", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STHarga", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_STHarga", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "STHarga", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_StTuslah", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StTuslah", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_StTuslah", global::System.Data.OleDb.OleDbType.Boolean, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "StTuslah", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_KodeDokter", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeDokter", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_KodeDokter", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeDokter", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("IsNull_JenisLaporan", global::System.Data.OleDb.OleDbType.Integer, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisLaporan", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("Original_JenisLaporan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JenisLaporan", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NoUrut, KodeKelompok, NamaKelompok, JenisStock, STHarga, StTuslah, KodeDok" +
                "ter, JenisLaporan FROM dbo.KelompokProduk";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.KelompokProdukDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.KelompokProdukDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.KelompokProdukDataTable dataTable = new Stock_Data.KelompokProdukDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.KelompokProdukDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "KelompokProduk");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_NoUrut, string Original_KodeKelompok, string Original_NamaKelompok, string Original_JenisStock, string Original_STHarga, global::System.Nullable<bool> Original_StTuslah, string Original_KodeDokter, string Original_JenisLaporan) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NoUrut));
            if ((Original_KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("Original_KodeKelompok");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_KodeKelompok));
            }
            if ((Original_NamaKelompok == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_NamaKelompok));
            }
            if ((Original_JenisStock == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_JenisStock));
            }
            if ((Original_STHarga == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_STHarga));
            }
            if ((Original_StTuslah.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_StTuslah.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeDokter == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_KodeDokter));
            }
            if ((Original_JenisLaporan == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_JenisLaporan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string KodeKelompok, string NamaKelompok, string JenisStock, string STHarga, global::System.Nullable<bool> StTuslah, string KodeDokter, string JenisLaporan) {
            if ((KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("KodeKelompok");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KodeKelompok));
            }
            if ((NamaKelompok == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NamaKelompok));
            }
            if ((JenisStock == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JenisStock));
            }
            if ((STHarga == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STHarga));
            }
            if ((StTuslah.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(StTuslah.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KodeDokter == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KodeDokter));
            }
            if ((JenisLaporan == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(JenisLaporan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string KodeKelompok, string NamaKelompok, string JenisStock, string STHarga, global::System.Nullable<bool> StTuslah, string KodeDokter, string JenisLaporan, int Original_NoUrut, string Original_KodeKelompok, string Original_NamaKelompok, string Original_JenisStock, string Original_STHarga, global::System.Nullable<bool> Original_StTuslah, string Original_KodeDokter, string Original_JenisLaporan) {
            if ((KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("KodeKelompok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(KodeKelompok));
            }
            if ((NamaKelompok == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NamaKelompok));
            }
            if ((JenisStock == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JenisStock));
            }
            if ((STHarga == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STHarga));
            }
            if ((StTuslah.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(StTuslah.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KodeDokter == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KodeDokter));
            }
            if ((JenisLaporan == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(JenisLaporan));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_NoUrut));
            if ((Original_KodeKelompok == null)) {
                throw new global::System.ArgumentNullException("Original_KodeKelompok");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_KodeKelompok));
            }
            if ((Original_NamaKelompok == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_NamaKelompok));
            }
            if ((Original_JenisStock == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_JenisStock));
            }
            if ((Original_STHarga == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_STHarga));
            }
            if ((Original_StTuslah.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_StTuslah.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_KodeDokter == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_KodeDokter));
            }
            if ((Original_JenisLaporan == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_JenisLaporan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NamaKelompok, string JenisStock, string STHarga, global::System.Nullable<bool> StTuslah, string KodeDokter, string JenisLaporan, int Original_NoUrut, string Original_KodeKelompok, string Original_NamaKelompok, string Original_JenisStock, string Original_STHarga, global::System.Nullable<bool> Original_StTuslah, string Original_KodeDokter, string Original_JenisLaporan) {
            return this.Update(Original_KodeKelompok, NamaKelompok, JenisStock, STHarga, StTuslah, KodeDokter, JenisLaporan, Original_NoUrut, Original_KodeKelompok, Original_NamaKelompok, Original_JenisStock, Original_STHarga, Original_StTuslah, Original_KodeDokter, Original_JenisLaporan);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SubStockMovementTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SubStockMovementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SubStockMovement";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("KodeStockMovement", "KodeStockMovement");
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("qty", "qty");
            tableMapping.ColumnMappings.Add("satuan", "satuan");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OleDb.OleDbCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [SubStockMovement] ([KodeStockMovement], [KodeStock], [qty], [satuan]" +
                ") VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeStockMovement", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStockMovement", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("KodeStock", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "KodeStock", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("qty", global::System.Data.OleDb.OleDbType.Double, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "qty", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OleDb.OleDbParameter("satuan", global::System.Data.OleDb.OleDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "satuan", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     SubStockMovement.*\r\nFROM         SubStockMovement";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.SubStockMovementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.SubStockMovementDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.SubStockMovementDataTable dataTable = new Stock_Data.SubStockMovementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data.SubStockMovementDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Stock_Data dataSet) {
            return this.Adapter.Update(dataSet, "SubStockMovement");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string KodeStockMovement, string KodeStock, global::System.Nullable<double> qty, string satuan) {
            if ((KodeStockMovement == null)) {
                throw new global::System.ArgumentNullException("KodeStockMovement");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(KodeStockMovement));
            }
            if ((KodeStock == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(KodeStock));
            }
            if ((qty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(qty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((satuan == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(satuan));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class view_stock_movementTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public view_stock_movementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "view_stock_movement";
            tableMapping.ColumnMappings.Add("noBuktiMovement", "noBuktiMovement");
            tableMapping.ColumnMappings.Add("idGudangAsal", "idGudangAsal");
            tableMapping.ColumnMappings.Add("idGudangTujuan", "idGudangTujuan");
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("NamaStock", "NamaStock");
            tableMapping.ColumnMappings.Add("Satuan", "Satuan");
            tableMapping.ColumnMappings.Add("HargaBeli", "HargaBeli");
            tableMapping.ColumnMappings.Add("NilaiStock", "NilaiStock");
            tableMapping.ColumnMappings.Add("HargaJual1", "HargaJual1");
            tableMapping.ColumnMappings.Add("Qty1", "Qty1");
            tableMapping.ColumnMappings.Add("HargaJual2", "HargaJual2");
            tableMapping.ColumnMappings.Add("Qty2", "Qty2");
            tableMapping.ColumnMappings.Add("HargaJual3", "HargaJual3");
            tableMapping.ColumnMappings.Add("Qty3", "Qty3");
            tableMapping.ColumnMappings.Add("HargaJual4", "HargaJual4");
            tableMapping.ColumnMappings.Add("Qty4", "Qty4");
            tableMapping.ColumnMappings.Add("Ukuran", "Ukuran");
            tableMapping.ColumnMappings.Add("KodeSupplier", "KodeSupplier");
            tableMapping.ColumnMappings.Add("HargaAwal", "HargaAwal");
            tableMapping.ColumnMappings.Add("KodeKelompok", "KodeKelompok");
            tableMapping.ColumnMappings.Add("KodeKelompok2", "KodeKelompok2");
            tableMapping.ColumnMappings.Add("cost", "cost");
            tableMapping.ColumnMappings.Add("HargaJual", "HargaJual");
            tableMapping.ColumnMappings.Add("disc1", "disc1");
            tableMapping.ColumnMappings.Add("disc2", "disc2");
            tableMapping.ColumnMappings.Add("disc3", "disc3");
            tableMapping.ColumnMappings.Add("discrp", "discrp");
            tableMapping.ColumnMappings.Add("ppn", "ppn");
            tableMapping.ColumnMappings.Add("namaGudangAsal", "namaGudangAsal");
            tableMapping.ColumnMappings.Add("namaGudangTujuan", "namaGudangTujuan");
            tableMapping.ColumnMappings.Add("KodeBarcode", "KodeBarcode");
            tableMapping.ColumnMappings.Add("StockMinimum", "StockMinimum");
            tableMapping.ColumnMappings.Add("qty", "qty");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     view_stock_movement.*\r\nFROM         view_stock_movement";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.view_stock_movementDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.view_stock_movementDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.view_stock_movementDataTable dataTable = new Stock_Data.view_stock_movementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_Saldo_Stock_akhir_unpivotTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_Saldo_Stock_akhir_unpivotTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_Saldo_Stock_akhir_unpivot";
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("NamaStock", "NamaStock");
            tableMapping.ColumnMappings.Add("Deskripsi", "Deskripsi");
            tableMapping.ColumnMappings.Add("Nilai", "Nilai");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     KodeStock, NamaStock, Deskripsi, Nilai\r\nFROM         View_Saldo_Stock_" +
                "akhir_unpivot";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.View_Saldo_Stock_akhir_unpivotDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.View_Saldo_Stock_akhir_unpivotDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.View_Saldo_Stock_akhir_unpivotDataTable dataTable = new Stock_Data.View_Saldo_Stock_akhir_unpivotDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class view_stockMovement_GudangTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public view_stockMovement_GudangTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "view_stockMovement_Gudang";
            tableMapping.ColumnMappings.Add("noBukti", "noBukti");
            tableMapping.ColumnMappings.Add("tanggal", "tanggal");
            tableMapping.ColumnMappings.Add("idGudangAsal", "idGudangAsal");
            tableMapping.ColumnMappings.Add("NamaCabangAsal", "NamaCabangAsal");
            tableMapping.ColumnMappings.Add("idGudangTujuan", "idGudangTujuan");
            tableMapping.ColumnMappings.Add("NamaCabangTujuan", "NamaCabangTujuan");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     view_stockMovement_Gudang.*\r\nFROM         view_stockMovement_Gudang";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.view_stockMovement_GudangDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.view_stockMovement_GudangDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.view_stockMovement_GudangDataTable dataTable = new Stock_Data.view_stockMovement_GudangDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_stock_saldo_lengkapTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_stock_saldo_lengkapTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_stock_saldo_lengkap";
            tableMapping.ColumnMappings.Add("KodeStock", "KodeStock");
            tableMapping.ColumnMappings.Add("NamaStock", "NamaStock");
            tableMapping.ColumnMappings.Add("JumlahStock", "JumlahStock");
            tableMapping.ColumnMappings.Add("Satuan", "Satuan");
            tableMapping.ColumnMappings.Add("HargaBeli", "HargaBeli");
            tableMapping.ColumnMappings.Add("HargaJual1", "HargaJual1");
            tableMapping.ColumnMappings.Add("Qty1", "Qty1");
            tableMapping.ColumnMappings.Add("HargaJual2", "HargaJual2");
            tableMapping.ColumnMappings.Add("Qty2", "Qty2");
            tableMapping.ColumnMappings.Add("HargaJual3", "HargaJual3");
            tableMapping.ColumnMappings.Add("Qty3", "Qty3");
            tableMapping.ColumnMappings.Add("HargaJual4", "HargaJual4");
            tableMapping.ColumnMappings.Add("Qty4", "Qty4");
            tableMapping.ColumnMappings.Add("StockMinimum", "StockMinimum");
            tableMapping.ColumnMappings.Add("KodeBarcode", "KodeBarcode");
            tableMapping.ColumnMappings.Add("HargaJual", "HargaJual");
            tableMapping.ColumnMappings.Add("KodeKelompok", "KodeKelompok");
            tableMapping.ColumnMappings.Add("disc1", "disc1");
            tableMapping.ColumnMappings.Add("disc3", "disc3");
            tableMapping.ColumnMappings.Add("disc2", "disc2");
            tableMapping.ColumnMappings.Add("discrp", "discrp");
            tableMapping.ColumnMappings.Add("ppn", "ppn");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     View_stock_saldo_lengkap.*\r\nFROM         View_stock_saldo_lengkap";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Stock_Data.View_stock_saldo_lengkapDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Stock_Data.View_stock_saldo_lengkapDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Stock_Data.View_stock_saldo_lengkapDataTable dataTable = new Stock_Data.View_stock_saldo_lengkapDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private StockGudangTableAdapter _stockGudangTableAdapter;
        
        private GudangTableAdapter _gudangTableAdapter;
        
        private StockOpnameTableAdapter _stockOpnameTableAdapter;
        
        private stockMovementTableAdapter _stockMovementTableAdapter;
        
        private SatuanTableAdapter _satuanTableAdapter;
        
        private StockTableAdapter _stockTableAdapter;
        
        private KelompokProdukTableAdapter _kelompokProdukTableAdapter;
        
        private SubStockMovementTableAdapter _subStockMovementTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public StockGudangTableAdapter StockGudangTableAdapter {
            get {
                return this._stockGudangTableAdapter;
            }
            set {
                this._stockGudangTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public GudangTableAdapter GudangTableAdapter {
            get {
                return this._gudangTableAdapter;
            }
            set {
                this._gudangTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public StockOpnameTableAdapter StockOpnameTableAdapter {
            get {
                return this._stockOpnameTableAdapter;
            }
            set {
                this._stockOpnameTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public stockMovementTableAdapter stockMovementTableAdapter {
            get {
                return this._stockMovementTableAdapter;
            }
            set {
                this._stockMovementTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SatuanTableAdapter SatuanTableAdapter {
            get {
                return this._satuanTableAdapter;
            }
            set {
                this._satuanTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public StockTableAdapter StockTableAdapter {
            get {
                return this._stockTableAdapter;
            }
            set {
                this._stockTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public KelompokProdukTableAdapter KelompokProdukTableAdapter {
            get {
                return this._kelompokProdukTableAdapter;
            }
            set {
                this._kelompokProdukTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SubStockMovementTableAdapter SubStockMovementTableAdapter {
            get {
                return this._subStockMovementTableAdapter;
            }
            set {
                this._subStockMovementTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._stockGudangTableAdapter != null) 
                            && (this._stockGudangTableAdapter.Connection != null))) {
                    return this._stockGudangTableAdapter.Connection;
                }
                if (((this._gudangTableAdapter != null) 
                            && (this._gudangTableAdapter.Connection != null))) {
                    return this._gudangTableAdapter.Connection;
                }
                if (((this._stockOpnameTableAdapter != null) 
                            && (this._stockOpnameTableAdapter.Connection != null))) {
                    return this._stockOpnameTableAdapter.Connection;
                }
                if (((this._stockMovementTableAdapter != null) 
                            && (this._stockMovementTableAdapter.Connection != null))) {
                    return this._stockMovementTableAdapter.Connection;
                }
                if (((this._satuanTableAdapter != null) 
                            && (this._satuanTableAdapter.Connection != null))) {
                    return this._satuanTableAdapter.Connection;
                }
                if (((this._stockTableAdapter != null) 
                            && (this._stockTableAdapter.Connection != null))) {
                    return this._stockTableAdapter.Connection;
                }
                if (((this._kelompokProdukTableAdapter != null) 
                            && (this._kelompokProdukTableAdapter.Connection != null))) {
                    return this._kelompokProdukTableAdapter.Connection;
                }
                if (((this._subStockMovementTableAdapter != null) 
                            && (this._subStockMovementTableAdapter.Connection != null))) {
                    return this._subStockMovementTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._stockGudangTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gudangTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockOpnameTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockMovementTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._satuanTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._stockTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._kelompokProdukTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._subStockMovementTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(Stock_Data dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kelompokProdukTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.KelompokProduk.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._kelompokProdukTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockMovementTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.stockMovement.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockMovementTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Stock.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gudangTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Gudang.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gudangTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._subStockMovementTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SubStockMovement.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._subStockMovementTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockOpnameTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StockOpname.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockOpnameTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._satuanTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Satuan.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._satuanTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._stockGudangTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.StockGudang.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._stockGudangTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(Stock_Data dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._kelompokProdukTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.KelompokProduk.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._kelompokProdukTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockMovementTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.stockMovement.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockMovementTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Stock.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gudangTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Gudang.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gudangTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._subStockMovementTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SubStockMovement.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._subStockMovementTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockOpnameTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StockOpname.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockOpnameTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._satuanTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Satuan.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._satuanTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._stockGudangTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.StockGudang.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._stockGudangTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(Stock_Data dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._stockGudangTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StockGudang.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockGudangTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._satuanTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Satuan.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._satuanTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stockOpnameTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.StockOpname.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockOpnameTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._subStockMovementTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SubStockMovement.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._subStockMovementTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gudangTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Gudang.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gudangTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stockTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Stock.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._stockMovementTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.stockMovement.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._stockMovementTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._kelompokProdukTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.KelompokProduk.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._kelompokProdukTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(Stock_Data dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._stockGudangTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockGudangTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._gudangTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gudangTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockOpnameTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockOpnameTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockMovementTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockMovementTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._satuanTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._satuanTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._stockTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._stockTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._kelompokProdukTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._kelompokProdukTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._subStockMovementTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._subStockMovementTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._stockGudangTableAdapter != null)) {
                    revertConnections.Add(this._stockGudangTableAdapter, this._stockGudangTableAdapter.Connection);
                    this._stockGudangTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._stockGudangTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._stockGudangTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockGudangTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockGudangTableAdapter.Adapter);
                    }
                }
                if ((this._gudangTableAdapter != null)) {
                    revertConnections.Add(this._gudangTableAdapter, this._gudangTableAdapter.Connection);
                    this._gudangTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._gudangTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._gudangTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gudangTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gudangTableAdapter.Adapter);
                    }
                }
                if ((this._stockOpnameTableAdapter != null)) {
                    revertConnections.Add(this._stockOpnameTableAdapter, this._stockOpnameTableAdapter.Connection);
                    this._stockOpnameTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._stockOpnameTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._stockOpnameTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockOpnameTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockOpnameTableAdapter.Adapter);
                    }
                }
                if ((this._stockMovementTableAdapter != null)) {
                    revertConnections.Add(this._stockMovementTableAdapter, this._stockMovementTableAdapter.Connection);
                    this._stockMovementTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._stockMovementTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._stockMovementTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockMovementTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockMovementTableAdapter.Adapter);
                    }
                }
                if ((this._satuanTableAdapter != null)) {
                    revertConnections.Add(this._satuanTableAdapter, this._satuanTableAdapter.Connection);
                    this._satuanTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._satuanTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._satuanTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._satuanTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._satuanTableAdapter.Adapter);
                    }
                }
                if ((this._stockTableAdapter != null)) {
                    revertConnections.Add(this._stockTableAdapter, this._stockTableAdapter.Connection);
                    this._stockTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._stockTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._stockTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._stockTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._stockTableAdapter.Adapter);
                    }
                }
                if ((this._kelompokProdukTableAdapter != null)) {
                    revertConnections.Add(this._kelompokProdukTableAdapter, this._kelompokProdukTableAdapter.Connection);
                    this._kelompokProdukTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._kelompokProdukTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._kelompokProdukTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._kelompokProdukTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._kelompokProdukTableAdapter.Adapter);
                    }
                }
                if ((this._subStockMovementTableAdapter != null)) {
                    revertConnections.Add(this._subStockMovementTableAdapter, this._subStockMovementTableAdapter.Connection);
                    this._subStockMovementTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(workConnection));
                    this._subStockMovementTableAdapter.Transaction = ((global::System.Data.OleDb.OleDbTransaction)(workTransaction));
                    if (this._subStockMovementTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._subStockMovementTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._subStockMovementTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._stockGudangTableAdapter != null)) {
                    this._stockGudangTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._stockGudangTableAdapter]));
                    this._stockGudangTableAdapter.Transaction = null;
                }
                if ((this._gudangTableAdapter != null)) {
                    this._gudangTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._gudangTableAdapter]));
                    this._gudangTableAdapter.Transaction = null;
                }
                if ((this._stockOpnameTableAdapter != null)) {
                    this._stockOpnameTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._stockOpnameTableAdapter]));
                    this._stockOpnameTableAdapter.Transaction = null;
                }
                if ((this._stockMovementTableAdapter != null)) {
                    this._stockMovementTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._stockMovementTableAdapter]));
                    this._stockMovementTableAdapter.Transaction = null;
                }
                if ((this._satuanTableAdapter != null)) {
                    this._satuanTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._satuanTableAdapter]));
                    this._satuanTableAdapter.Transaction = null;
                }
                if ((this._stockTableAdapter != null)) {
                    this._stockTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._stockTableAdapter]));
                    this._stockTableAdapter.Transaction = null;
                }
                if ((this._kelompokProdukTableAdapter != null)) {
                    this._kelompokProdukTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._kelompokProdukTableAdapter]));
                    this._kelompokProdukTableAdapter.Transaction = null;
                }
                if ((this._subStockMovementTableAdapter != null)) {
                    this._subStockMovementTableAdapter.Connection = ((global::System.Data.OleDb.OleDbConnection)(revertConnections[this._subStockMovementTableAdapter]));
                    this._subStockMovementTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591