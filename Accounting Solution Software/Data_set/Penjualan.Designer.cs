//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Accounting_Solution_Software.Data_set {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Penjualan")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Penjualan : global::System.Data.DataSet {
        
        private view_jual_nobonDataTable tableview_jual_nobon;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Penjualan() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Penjualan(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["view_jual_nobon"] != null)) {
                    base.Tables.Add(new view_jual_nobonDataTable(ds.Tables["view_jual_nobon"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public view_jual_nobonDataTable view_jual_nobon {
            get {
                return this.tableview_jual_nobon;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Penjualan cln = ((Penjualan)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["view_jual_nobon"] != null)) {
                    base.Tables.Add(new view_jual_nobonDataTable(ds.Tables["view_jual_nobon"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableview_jual_nobon = ((view_jual_nobonDataTable)(base.Tables["view_jual_nobon"]));
            if ((initTable == true)) {
                if ((this.tableview_jual_nobon != null)) {
                    this.tableview_jual_nobon.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Penjualan";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Penjualan.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableview_jual_nobon = new view_jual_nobonDataTable();
            base.Tables.Add(this.tableview_jual_nobon);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeview_jual_nobon() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Penjualan ds = new Penjualan();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void view_jual_nobonRowChangeEventHandler(object sender, view_jual_nobonRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class view_jual_nobonDataTable : global::System.Data.TypedTableBase<view_jual_nobonRow> {
            
            private global::System.Data.DataColumn columnKodeCbg;
            
            private global::System.Data.DataColumn columnnamaCbg;
            
            private global::System.Data.DataColumn columnNoBon;
            
            private global::System.Data.DataColumn columnTK;
            
            private global::System.Data.DataColumn columnTanggal;
            
            private global::System.Data.DataColumn columnKodeCust;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnAlamat;
            
            private global::System.Data.DataColumn columnTelp;
            
            private global::System.Data.DataColumn columnNoSJ;
            
            private global::System.Data.DataColumn columnTempo;
            
            private global::System.Data.DataColumn columnJthTempo;
            
            private global::System.Data.DataColumn columnKdHarga;
            
            private global::System.Data.DataColumn columnBruto;
            
            private global::System.Data.DataColumn columnDiskonPcnt;
            
            private global::System.Data.DataColumn columnDiskon;
            
            private global::System.Data.DataColumn columnPPnCara;
            
            private global::System.Data.DataColumn columnPPnPcnt;
            
            private global::System.Data.DataColumn columnPPn;
            
            private global::System.Data.DataColumn columnOngkos;
            
            private global::System.Data.DataColumn columnNetto;
            
            private global::System.Data.DataColumn columnKet;
            
            private global::System.Data.DataColumn columnPosting;
            
            private global::System.Data.DataColumn columnUserUpDate;
            
            private global::System.Data.DataColumn columnBayar;
            
            private global::System.Data.DataColumn columnByrTunai;
            
            private global::System.Data.DataColumn columnByrDebit;
            
            private global::System.Data.DataColumn columnByrKKredit;
            
            private global::System.Data.DataColumn columnByrLain;
            
            private global::System.Data.DataColumn columnTrmUang;
            
            private global::System.Data.DataColumn columnKembali;
            
            private global::System.Data.DataColumn columnKKNoKartu;
            
            private global::System.Data.DataColumn columnKKBank;
            
            private global::System.Data.DataColumn columnKKAN;
            
            private global::System.Data.DataColumn columnDBNoKartu;
            
            private global::System.Data.DataColumn columnDBBank;
            
            private global::System.Data.DataColumn columnDBAN;
            
            private global::System.Data.DataColumn columnKetLain;
            
            private global::System.Data.DataColumn columnKasir;
            
            private global::System.Data.DataColumn columnCounter;
            
            private global::System.Data.DataColumn columnCetak;
            
            private global::System.Data.DataColumn columnCaraByr;
            
            private global::System.Data.DataColumn columnAppCetak;
            
            private global::System.Data.DataColumn columnTglInput;
            
            private global::System.Data.DataColumn columnUserInput;
            
            private global::System.Data.DataColumn columnTglUpDate;
            
            private global::System.Data.DataColumn columnBrutoNonDiskon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_jual_nobonDataTable() {
                this.TableName = "view_jual_nobon";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_jual_nobonDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected view_jual_nobonDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeCbgColumn {
                get {
                    return this.columnKodeCbg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn namaCbgColumn {
                get {
                    return this.columnnamaCbg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoBonColumn {
                get {
                    return this.columnNoBon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TKColumn {
                get {
                    return this.columnTK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TanggalColumn {
                get {
                    return this.columnTanggal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KodeCustColumn {
                get {
                    return this.columnKodeCust;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AlamatColumn {
                get {
                    return this.columnAlamat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelpColumn {
                get {
                    return this.columnTelp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoSJColumn {
                get {
                    return this.columnNoSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TempoColumn {
                get {
                    return this.columnTempo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JthTempoColumn {
                get {
                    return this.columnJthTempo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KdHargaColumn {
                get {
                    return this.columnKdHarga;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrutoColumn {
                get {
                    return this.columnBruto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiskonPcntColumn {
                get {
                    return this.columnDiskonPcnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiskonColumn {
                get {
                    return this.columnDiskon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPnCaraColumn {
                get {
                    return this.columnPPnCara;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPnPcntColumn {
                get {
                    return this.columnPPnPcnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PPnColumn {
                get {
                    return this.columnPPn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OngkosColumn {
                get {
                    return this.columnOngkos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NettoColumn {
                get {
                    return this.columnNetto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KetColumn {
                get {
                    return this.columnKet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostingColumn {
                get {
                    return this.columnPosting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserUpDateColumn {
                get {
                    return this.columnUserUpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BayarColumn {
                get {
                    return this.columnBayar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ByrTunaiColumn {
                get {
                    return this.columnByrTunai;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ByrDebitColumn {
                get {
                    return this.columnByrDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ByrKKreditColumn {
                get {
                    return this.columnByrKKredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ByrLainColumn {
                get {
                    return this.columnByrLain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TrmUangColumn {
                get {
                    return this.columnTrmUang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KembaliColumn {
                get {
                    return this.columnKembali;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KKNoKartuColumn {
                get {
                    return this.columnKKNoKartu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KKBankColumn {
                get {
                    return this.columnKKBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KKANColumn {
                get {
                    return this.columnKKAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DBNoKartuColumn {
                get {
                    return this.columnDBNoKartu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DBBankColumn {
                get {
                    return this.columnDBBank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DBANColumn {
                get {
                    return this.columnDBAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KetLainColumn {
                get {
                    return this.columnKetLain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KasirColumn {
                get {
                    return this.columnKasir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CounterColumn {
                get {
                    return this.columnCounter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CetakColumn {
                get {
                    return this.columnCetak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CaraByrColumn {
                get {
                    return this.columnCaraByr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AppCetakColumn {
                get {
                    return this.columnAppCetak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglInputColumn {
                get {
                    return this.columnTglInput;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserInputColumn {
                get {
                    return this.columnUserInput;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TglUpDateColumn {
                get {
                    return this.columnTglUpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrutoNonDiskonColumn {
                get {
                    return this.columnBrutoNonDiskon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_jual_nobonRow this[int index] {
                get {
                    return ((view_jual_nobonRow)(this.Rows[index]));
                }
            }
            
            public event view_jual_nobonRowChangeEventHandler view_jual_nobonRowChanging;
            
            public event view_jual_nobonRowChangeEventHandler view_jual_nobonRowChanged;
            
            public event view_jual_nobonRowChangeEventHandler view_jual_nobonRowDeleting;
            
            public event view_jual_nobonRowChangeEventHandler view_jual_nobonRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addview_jual_nobonRow(view_jual_nobonRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_jual_nobonRow Addview_jual_nobonRow(
                        string KodeCbg, 
                        string namaCbg, 
                        string NoBon, 
                        string TK, 
                        System.DateTime Tanggal, 
                        string KodeCust, 
                        string Customer, 
                        string Alamat, 
                        string Telp, 
                        string NoSJ, 
                        int Tempo, 
                        System.DateTime JthTempo, 
                        string KdHarga, 
                        decimal Bruto, 
                        decimal DiskonPcnt, 
                        decimal Diskon, 
                        string PPnCara, 
                        decimal PPnPcnt, 
                        decimal PPn, 
                        decimal Ongkos, 
                        decimal Netto, 
                        string Ket, 
                        string Posting, 
                        string UserUpDate, 
                        decimal Bayar, 
                        decimal ByrTunai, 
                        decimal ByrDebit, 
                        decimal ByrKKredit, 
                        decimal ByrLain, 
                        decimal TrmUang, 
                        decimal Kembali, 
                        string KKNoKartu, 
                        string KKBank, 
                        string KKAN, 
                        string DBNoKartu, 
                        string DBBank, 
                        string DBAN, 
                        string KetLain, 
                        string Kasir, 
                        string Counter, 
                        int Cetak, 
                        string CaraByr, 
                        string AppCetak, 
                        System.DateTime TglInput, 
                        string UserInput, 
                        System.DateTime TglUpDate, 
                        decimal BrutoNonDiskon) {
                view_jual_nobonRow rowview_jual_nobonRow = ((view_jual_nobonRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KodeCbg,
                        namaCbg,
                        NoBon,
                        TK,
                        Tanggal,
                        KodeCust,
                        Customer,
                        Alamat,
                        Telp,
                        NoSJ,
                        Tempo,
                        JthTempo,
                        KdHarga,
                        Bruto,
                        DiskonPcnt,
                        Diskon,
                        PPnCara,
                        PPnPcnt,
                        PPn,
                        Ongkos,
                        Netto,
                        Ket,
                        Posting,
                        UserUpDate,
                        Bayar,
                        ByrTunai,
                        ByrDebit,
                        ByrKKredit,
                        ByrLain,
                        TrmUang,
                        Kembali,
                        KKNoKartu,
                        KKBank,
                        KKAN,
                        DBNoKartu,
                        DBBank,
                        DBAN,
                        KetLain,
                        Kasir,
                        Counter,
                        Cetak,
                        CaraByr,
                        AppCetak,
                        TglInput,
                        UserInput,
                        TglUpDate,
                        BrutoNonDiskon};
                rowview_jual_nobonRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowview_jual_nobonRow);
                return rowview_jual_nobonRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_jual_nobonRow FindByNoBon(string NoBon) {
                return ((view_jual_nobonRow)(this.Rows.Find(new object[] {
                            NoBon})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                view_jual_nobonDataTable cln = ((view_jual_nobonDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new view_jual_nobonDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKodeCbg = base.Columns["KodeCbg"];
                this.columnnamaCbg = base.Columns["namaCbg"];
                this.columnNoBon = base.Columns["NoBon"];
                this.columnTK = base.Columns["TK"];
                this.columnTanggal = base.Columns["Tanggal"];
                this.columnKodeCust = base.Columns["KodeCust"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnAlamat = base.Columns["Alamat"];
                this.columnTelp = base.Columns["Telp"];
                this.columnNoSJ = base.Columns["NoSJ"];
                this.columnTempo = base.Columns["Tempo"];
                this.columnJthTempo = base.Columns["JthTempo"];
                this.columnKdHarga = base.Columns["KdHarga"];
                this.columnBruto = base.Columns["Bruto"];
                this.columnDiskonPcnt = base.Columns["DiskonPcnt"];
                this.columnDiskon = base.Columns["Diskon"];
                this.columnPPnCara = base.Columns["PPnCara"];
                this.columnPPnPcnt = base.Columns["PPnPcnt"];
                this.columnPPn = base.Columns["PPn"];
                this.columnOngkos = base.Columns["Ongkos"];
                this.columnNetto = base.Columns["Netto"];
                this.columnKet = base.Columns["Ket"];
                this.columnPosting = base.Columns["Posting"];
                this.columnUserUpDate = base.Columns["UserUpDate"];
                this.columnBayar = base.Columns["Bayar"];
                this.columnByrTunai = base.Columns["ByrTunai"];
                this.columnByrDebit = base.Columns["ByrDebit"];
                this.columnByrKKredit = base.Columns["ByrKKredit"];
                this.columnByrLain = base.Columns["ByrLain"];
                this.columnTrmUang = base.Columns["TrmUang"];
                this.columnKembali = base.Columns["Kembali"];
                this.columnKKNoKartu = base.Columns["KKNoKartu"];
                this.columnKKBank = base.Columns["KKBank"];
                this.columnKKAN = base.Columns["KKAN"];
                this.columnDBNoKartu = base.Columns["DBNoKartu"];
                this.columnDBBank = base.Columns["DBBank"];
                this.columnDBAN = base.Columns["DBAN"];
                this.columnKetLain = base.Columns["KetLain"];
                this.columnKasir = base.Columns["Kasir"];
                this.columnCounter = base.Columns["Counter"];
                this.columnCetak = base.Columns["Cetak"];
                this.columnCaraByr = base.Columns["CaraByr"];
                this.columnAppCetak = base.Columns["AppCetak"];
                this.columnTglInput = base.Columns["TglInput"];
                this.columnUserInput = base.Columns["UserInput"];
                this.columnTglUpDate = base.Columns["TglUpDate"];
                this.columnBrutoNonDiskon = base.Columns["BrutoNonDiskon"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKodeCbg = new global::System.Data.DataColumn("KodeCbg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeCbg);
                this.columnnamaCbg = new global::System.Data.DataColumn("namaCbg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnamaCbg);
                this.columnNoBon = new global::System.Data.DataColumn("NoBon", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoBon);
                this.columnTK = new global::System.Data.DataColumn("TK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK);
                this.columnTanggal = new global::System.Data.DataColumn("Tanggal", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTanggal);
                this.columnKodeCust = new global::System.Data.DataColumn("KodeCust", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKodeCust);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnAlamat = new global::System.Data.DataColumn("Alamat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlamat);
                this.columnTelp = new global::System.Data.DataColumn("Telp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelp);
                this.columnNoSJ = new global::System.Data.DataColumn("NoSJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoSJ);
                this.columnTempo = new global::System.Data.DataColumn("Tempo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempo);
                this.columnJthTempo = new global::System.Data.DataColumn("JthTempo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJthTempo);
                this.columnKdHarga = new global::System.Data.DataColumn("KdHarga", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKdHarga);
                this.columnBruto = new global::System.Data.DataColumn("Bruto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBruto);
                this.columnDiskonPcnt = new global::System.Data.DataColumn("DiskonPcnt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiskonPcnt);
                this.columnDiskon = new global::System.Data.DataColumn("Diskon", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiskon);
                this.columnPPnCara = new global::System.Data.DataColumn("PPnCara", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPnCara);
                this.columnPPnPcnt = new global::System.Data.DataColumn("PPnPcnt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPnPcnt);
                this.columnPPn = new global::System.Data.DataColumn("PPn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPPn);
                this.columnOngkos = new global::System.Data.DataColumn("Ongkos", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOngkos);
                this.columnNetto = new global::System.Data.DataColumn("Netto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetto);
                this.columnKet = new global::System.Data.DataColumn("Ket", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKet);
                this.columnPosting = new global::System.Data.DataColumn("Posting", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosting);
                this.columnUserUpDate = new global::System.Data.DataColumn("UserUpDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserUpDate);
                this.columnBayar = new global::System.Data.DataColumn("Bayar", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBayar);
                this.columnByrTunai = new global::System.Data.DataColumn("ByrTunai", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnByrTunai);
                this.columnByrDebit = new global::System.Data.DataColumn("ByrDebit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnByrDebit);
                this.columnByrKKredit = new global::System.Data.DataColumn("ByrKKredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnByrKKredit);
                this.columnByrLain = new global::System.Data.DataColumn("ByrLain", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnByrLain);
                this.columnTrmUang = new global::System.Data.DataColumn("TrmUang", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrmUang);
                this.columnKembali = new global::System.Data.DataColumn("Kembali", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKembali);
                this.columnKKNoKartu = new global::System.Data.DataColumn("KKNoKartu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKKNoKartu);
                this.columnKKBank = new global::System.Data.DataColumn("KKBank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKKBank);
                this.columnKKAN = new global::System.Data.DataColumn("KKAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKKAN);
                this.columnDBNoKartu = new global::System.Data.DataColumn("DBNoKartu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBNoKartu);
                this.columnDBBank = new global::System.Data.DataColumn("DBBank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBBank);
                this.columnDBAN = new global::System.Data.DataColumn("DBAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBAN);
                this.columnKetLain = new global::System.Data.DataColumn("KetLain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKetLain);
                this.columnKasir = new global::System.Data.DataColumn("Kasir", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKasir);
                this.columnCounter = new global::System.Data.DataColumn("Counter", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounter);
                this.columnCetak = new global::System.Data.DataColumn("Cetak", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCetak);
                this.columnCaraByr = new global::System.Data.DataColumn("CaraByr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaraByr);
                this.columnAppCetak = new global::System.Data.DataColumn("AppCetak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppCetak);
                this.columnTglInput = new global::System.Data.DataColumn("TglInput", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglInput);
                this.columnUserInput = new global::System.Data.DataColumn("UserInput", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserInput);
                this.columnTglUpDate = new global::System.Data.DataColumn("TglUpDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTglUpDate);
                this.columnBrutoNonDiskon = new global::System.Data.DataColumn("BrutoNonDiskon", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrutoNonDiskon);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNoBon}, true));
                this.columnKodeCbg.ReadOnly = true;
                this.columnKodeCbg.MaxLength = 4;
                this.columnnamaCbg.MaxLength = 50;
                this.columnNoBon.AllowDBNull = false;
                this.columnNoBon.Unique = true;
                this.columnNoBon.MaxLength = 20;
                this.columnTK.MaxLength = 1;
                this.columnKodeCust.MaxLength = 10;
                this.columnCustomer.MaxLength = 50;
                this.columnAlamat.MaxLength = 2147483647;
                this.columnTelp.MaxLength = 50;
                this.columnNoSJ.MaxLength = 20;
                this.columnKdHarga.MaxLength = 1;
                this.columnPPnCara.MaxLength = 10;
                this.columnKet.MaxLength = 50;
                this.columnPosting.MaxLength = 1;
                this.columnUserUpDate.MaxLength = 10;
                this.columnKKNoKartu.MaxLength = 20;
                this.columnKKBank.MaxLength = 20;
                this.columnKKAN.MaxLength = 35;
                this.columnDBNoKartu.MaxLength = 20;
                this.columnDBBank.MaxLength = 20;
                this.columnDBAN.MaxLength = 35;
                this.columnKetLain.MaxLength = 50;
                this.columnKasir.MaxLength = 10;
                this.columnCounter.MaxLength = 2;
                this.columnCaraByr.MaxLength = 1;
                this.columnAppCetak.MaxLength = 1;
                this.columnUserInput.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_jual_nobonRow Newview_jual_nobonRow() {
                return ((view_jual_nobonRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new view_jual_nobonRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(view_jual_nobonRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.view_jual_nobonRowChanged != null)) {
                    this.view_jual_nobonRowChanged(this, new view_jual_nobonRowChangeEvent(((view_jual_nobonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.view_jual_nobonRowChanging != null)) {
                    this.view_jual_nobonRowChanging(this, new view_jual_nobonRowChangeEvent(((view_jual_nobonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.view_jual_nobonRowDeleted != null)) {
                    this.view_jual_nobonRowDeleted(this, new view_jual_nobonRowChangeEvent(((view_jual_nobonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.view_jual_nobonRowDeleting != null)) {
                    this.view_jual_nobonRowDeleting(this, new view_jual_nobonRowChangeEvent(((view_jual_nobonRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeview_jual_nobonRow(view_jual_nobonRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Penjualan ds = new Penjualan();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "view_jual_nobonDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class view_jual_nobonRow : global::System.Data.DataRow {
            
            private view_jual_nobonDataTable tableview_jual_nobon;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal view_jual_nobonRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableview_jual_nobon = ((view_jual_nobonDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeCbg {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KodeCbgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeCbg\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KodeCbgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string namaCbg {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.namaCbgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'namaCbg\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.namaCbgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoBon {
                get {
                    return ((string)(this[this.tableview_jual_nobon.NoBonColumn]));
                }
                set {
                    this[this.tableview_jual_nobon.NoBonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TK {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.TKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TK\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.TKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Tanggal {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableview_jual_nobon.TanggalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tanggal\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.TanggalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KodeCust {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KodeCustColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KodeCust\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KodeCustColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Alamat {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.AlamatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alamat\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.AlamatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Telp {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.TelpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telp\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.TelpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NoSJ {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.NoSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoSJ\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.NoSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tempo {
                get {
                    try {
                        return ((int)(this[this.tableview_jual_nobon.TempoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tempo\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.TempoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime JthTempo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableview_jual_nobon.JthTempoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JthTempo\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.JthTempoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KdHarga {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KdHargaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KdHarga\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KdHargaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bruto {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.BrutoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bruto\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.BrutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiskonPcnt {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.DiskonPcntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiskonPcnt\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.DiskonPcntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Diskon {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.DiskonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diskon\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.DiskonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PPnCara {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.PPnCaraColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPnCara\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.PPnCaraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PPnPcnt {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.PPnPcntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPnPcnt\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.PPnPcntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PPn {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.PPnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PPn\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.PPnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Ongkos {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.OngkosColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ongkos\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.OngkosColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Netto {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.NettoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Netto\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.NettoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ket {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ket\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Posting {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.PostingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Posting\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.PostingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserUpDate {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.UserUpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserUpDate\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.UserUpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Bayar {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.BayarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bayar\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.BayarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ByrTunai {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.ByrTunaiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ByrTunai\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.ByrTunaiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ByrDebit {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.ByrDebitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ByrDebit\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.ByrDebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ByrKKredit {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.ByrKKreditColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ByrKKredit\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.ByrKKreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ByrLain {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.ByrLainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ByrLain\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.ByrLainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TrmUang {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.TrmUangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TrmUang\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.TrmUangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Kembali {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.KembaliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kembali\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KembaliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KKNoKartu {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KKNoKartuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KKNoKartu\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KKNoKartuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KKBank {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KKBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KKBank\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KKBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KKAN {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KKANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KKAN\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KKANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DBNoKartu {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.DBNoKartuColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DBNoKartu\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.DBNoKartuColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DBBank {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.DBBankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DBBank\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.DBBankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DBAN {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.DBANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DBAN\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.DBANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KetLain {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KetLainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KetLain\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KetLainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Kasir {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.KasirColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kasir\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.KasirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Counter {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.CounterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Counter\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.CounterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Cetak {
                get {
                    try {
                        return ((int)(this[this.tableview_jual_nobon.CetakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cetak\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.CetakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CaraByr {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.CaraByrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CaraByr\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.CaraByrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AppCetak {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.AppCetakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppCetak\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.AppCetakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglInput {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableview_jual_nobon.TglInputColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglInput\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.TglInputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserInput {
                get {
                    try {
                        return ((string)(this[this.tableview_jual_nobon.UserInputColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserInput\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.UserInputColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TglUpDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableview_jual_nobon.TglUpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TglUpDate\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.TglUpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BrutoNonDiskon {
                get {
                    try {
                        return ((decimal)(this[this.tableview_jual_nobon.BrutoNonDiskonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrutoNonDiskon\' in table \'view_jual_nobon\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableview_jual_nobon.BrutoNonDiskonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeCbgNull() {
                return this.IsNull(this.tableview_jual_nobon.KodeCbgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeCbgNull() {
                this[this.tableview_jual_nobon.KodeCbgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnamaCbgNull() {
                return this.IsNull(this.tableview_jual_nobon.namaCbgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnamaCbgNull() {
                this[this.tableview_jual_nobon.namaCbgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTKNull() {
                return this.IsNull(this.tableview_jual_nobon.TKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTKNull() {
                this[this.tableview_jual_nobon.TKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTanggalNull() {
                return this.IsNull(this.tableview_jual_nobon.TanggalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTanggalNull() {
                this[this.tableview_jual_nobon.TanggalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKodeCustNull() {
                return this.IsNull(this.tableview_jual_nobon.KodeCustColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKodeCustNull() {
                this[this.tableview_jual_nobon.KodeCustColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableview_jual_nobon.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableview_jual_nobon.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAlamatNull() {
                return this.IsNull(this.tableview_jual_nobon.AlamatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAlamatNull() {
                this[this.tableview_jual_nobon.AlamatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTelpNull() {
                return this.IsNull(this.tableview_jual_nobon.TelpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTelpNull() {
                this[this.tableview_jual_nobon.TelpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoSJNull() {
                return this.IsNull(this.tableview_jual_nobon.NoSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoSJNull() {
                this[this.tableview_jual_nobon.NoSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTempoNull() {
                return this.IsNull(this.tableview_jual_nobon.TempoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTempoNull() {
                this[this.tableview_jual_nobon.TempoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJthTempoNull() {
                return this.IsNull(this.tableview_jual_nobon.JthTempoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJthTempoNull() {
                this[this.tableview_jual_nobon.JthTempoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKdHargaNull() {
                return this.IsNull(this.tableview_jual_nobon.KdHargaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKdHargaNull() {
                this[this.tableview_jual_nobon.KdHargaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrutoNull() {
                return this.IsNull(this.tableview_jual_nobon.BrutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrutoNull() {
                this[this.tableview_jual_nobon.BrutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiskonPcntNull() {
                return this.IsNull(this.tableview_jual_nobon.DiskonPcntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiskonPcntNull() {
                this[this.tableview_jual_nobon.DiskonPcntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiskonNull() {
                return this.IsNull(this.tableview_jual_nobon.DiskonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiskonNull() {
                this[this.tableview_jual_nobon.DiskonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPnCaraNull() {
                return this.IsNull(this.tableview_jual_nobon.PPnCaraColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPnCaraNull() {
                this[this.tableview_jual_nobon.PPnCaraColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPnPcntNull() {
                return this.IsNull(this.tableview_jual_nobon.PPnPcntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPnPcntNull() {
                this[this.tableview_jual_nobon.PPnPcntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPPnNull() {
                return this.IsNull(this.tableview_jual_nobon.PPnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPPnNull() {
                this[this.tableview_jual_nobon.PPnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOngkosNull() {
                return this.IsNull(this.tableview_jual_nobon.OngkosColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOngkosNull() {
                this[this.tableview_jual_nobon.OngkosColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNettoNull() {
                return this.IsNull(this.tableview_jual_nobon.NettoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNettoNull() {
                this[this.tableview_jual_nobon.NettoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKetNull() {
                return this.IsNull(this.tableview_jual_nobon.KetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKetNull() {
                this[this.tableview_jual_nobon.KetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostingNull() {
                return this.IsNull(this.tableview_jual_nobon.PostingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostingNull() {
                this[this.tableview_jual_nobon.PostingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserUpDateNull() {
                return this.IsNull(this.tableview_jual_nobon.UserUpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserUpDateNull() {
                this[this.tableview_jual_nobon.UserUpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBayarNull() {
                return this.IsNull(this.tableview_jual_nobon.BayarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBayarNull() {
                this[this.tableview_jual_nobon.BayarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsByrTunaiNull() {
                return this.IsNull(this.tableview_jual_nobon.ByrTunaiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetByrTunaiNull() {
                this[this.tableview_jual_nobon.ByrTunaiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsByrDebitNull() {
                return this.IsNull(this.tableview_jual_nobon.ByrDebitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetByrDebitNull() {
                this[this.tableview_jual_nobon.ByrDebitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsByrKKreditNull() {
                return this.IsNull(this.tableview_jual_nobon.ByrKKreditColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetByrKKreditNull() {
                this[this.tableview_jual_nobon.ByrKKreditColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsByrLainNull() {
                return this.IsNull(this.tableview_jual_nobon.ByrLainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetByrLainNull() {
                this[this.tableview_jual_nobon.ByrLainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrmUangNull() {
                return this.IsNull(this.tableview_jual_nobon.TrmUangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrmUangNull() {
                this[this.tableview_jual_nobon.TrmUangColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKembaliNull() {
                return this.IsNull(this.tableview_jual_nobon.KembaliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKembaliNull() {
                this[this.tableview_jual_nobon.KembaliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKKNoKartuNull() {
                return this.IsNull(this.tableview_jual_nobon.KKNoKartuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKKNoKartuNull() {
                this[this.tableview_jual_nobon.KKNoKartuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKKBankNull() {
                return this.IsNull(this.tableview_jual_nobon.KKBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKKBankNull() {
                this[this.tableview_jual_nobon.KKBankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKKANNull() {
                return this.IsNull(this.tableview_jual_nobon.KKANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKKANNull() {
                this[this.tableview_jual_nobon.KKANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDBNoKartuNull() {
                return this.IsNull(this.tableview_jual_nobon.DBNoKartuColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDBNoKartuNull() {
                this[this.tableview_jual_nobon.DBNoKartuColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDBBankNull() {
                return this.IsNull(this.tableview_jual_nobon.DBBankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDBBankNull() {
                this[this.tableview_jual_nobon.DBBankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDBANNull() {
                return this.IsNull(this.tableview_jual_nobon.DBANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDBANNull() {
                this[this.tableview_jual_nobon.DBANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKetLainNull() {
                return this.IsNull(this.tableview_jual_nobon.KetLainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKetLainNull() {
                this[this.tableview_jual_nobon.KetLainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKasirNull() {
                return this.IsNull(this.tableview_jual_nobon.KasirColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKasirNull() {
                this[this.tableview_jual_nobon.KasirColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCounterNull() {
                return this.IsNull(this.tableview_jual_nobon.CounterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCounterNull() {
                this[this.tableview_jual_nobon.CounterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCetakNull() {
                return this.IsNull(this.tableview_jual_nobon.CetakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCetakNull() {
                this[this.tableview_jual_nobon.CetakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCaraByrNull() {
                return this.IsNull(this.tableview_jual_nobon.CaraByrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCaraByrNull() {
                this[this.tableview_jual_nobon.CaraByrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAppCetakNull() {
                return this.IsNull(this.tableview_jual_nobon.AppCetakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAppCetakNull() {
                this[this.tableview_jual_nobon.AppCetakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglInputNull() {
                return this.IsNull(this.tableview_jual_nobon.TglInputColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglInputNull() {
                this[this.tableview_jual_nobon.TglInputColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserInputNull() {
                return this.IsNull(this.tableview_jual_nobon.UserInputColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserInputNull() {
                this[this.tableview_jual_nobon.UserInputColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTglUpDateNull() {
                return this.IsNull(this.tableview_jual_nobon.TglUpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTglUpDateNull() {
                this[this.tableview_jual_nobon.TglUpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrutoNonDiskonNull() {
                return this.IsNull(this.tableview_jual_nobon.BrutoNonDiskonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrutoNonDiskonNull() {
                this[this.tableview_jual_nobon.BrutoNonDiskonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class view_jual_nobonRowChangeEvent : global::System.EventArgs {
            
            private view_jual_nobonRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_jual_nobonRowChangeEvent(view_jual_nobonRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public view_jual_nobonRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Accounting_Solution_Software.Data_set.PenjualanTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class view_jual_nobonTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbTransaction _transaction;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public view_jual_nobonTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "view_jual_nobon";
            tableMapping.ColumnMappings.Add("KodeCbg", "KodeCbg");
            tableMapping.ColumnMappings.Add("namaCbg", "namaCbg");
            tableMapping.ColumnMappings.Add("TK", "TK");
            tableMapping.ColumnMappings.Add("Tanggal", "Tanggal");
            tableMapping.ColumnMappings.Add("KodeCust", "KodeCust");
            tableMapping.ColumnMappings.Add("Customer", "Customer");
            tableMapping.ColumnMappings.Add("Alamat", "Alamat");
            tableMapping.ColumnMappings.Add("Telp", "Telp");
            tableMapping.ColumnMappings.Add("NoSJ", "NoSJ");
            tableMapping.ColumnMappings.Add("Tempo", "Tempo");
            tableMapping.ColumnMappings.Add("JthTempo", "JthTempo");
            tableMapping.ColumnMappings.Add("KdHarga", "KdHarga");
            tableMapping.ColumnMappings.Add("Bruto", "Bruto");
            tableMapping.ColumnMappings.Add("DiskonPcnt", "DiskonPcnt");
            tableMapping.ColumnMappings.Add("Diskon", "Diskon");
            tableMapping.ColumnMappings.Add("PPnCara", "PPnCara");
            tableMapping.ColumnMappings.Add("PPnPcnt", "PPnPcnt");
            tableMapping.ColumnMappings.Add("PPn", "PPn");
            tableMapping.ColumnMappings.Add("Ongkos", "Ongkos");
            tableMapping.ColumnMappings.Add("Netto", "Netto");
            tableMapping.ColumnMappings.Add("Ket", "Ket");
            tableMapping.ColumnMappings.Add("Posting", "Posting");
            tableMapping.ColumnMappings.Add("UserUpDate", "UserUpDate");
            tableMapping.ColumnMappings.Add("Bayar", "Bayar");
            tableMapping.ColumnMappings.Add("ByrTunai", "ByrTunai");
            tableMapping.ColumnMappings.Add("ByrDebit", "ByrDebit");
            tableMapping.ColumnMappings.Add("ByrKKredit", "ByrKKredit");
            tableMapping.ColumnMappings.Add("ByrLain", "ByrLain");
            tableMapping.ColumnMappings.Add("TrmUang", "TrmUang");
            tableMapping.ColumnMappings.Add("Kembali", "Kembali");
            tableMapping.ColumnMappings.Add("KKNoKartu", "KKNoKartu");
            tableMapping.ColumnMappings.Add("KKBank", "KKBank");
            tableMapping.ColumnMappings.Add("KKAN", "KKAN");
            tableMapping.ColumnMappings.Add("DBNoKartu", "DBNoKartu");
            tableMapping.ColumnMappings.Add("DBBank", "DBBank");
            tableMapping.ColumnMappings.Add("DBAN", "DBAN");
            tableMapping.ColumnMappings.Add("KetLain", "KetLain");
            tableMapping.ColumnMappings.Add("Kasir", "Kasir");
            tableMapping.ColumnMappings.Add("Counter", "Counter");
            tableMapping.ColumnMappings.Add("Cetak", "Cetak");
            tableMapping.ColumnMappings.Add("CaraByr", "CaraByr");
            tableMapping.ColumnMappings.Add("AppCetak", "AppCetak");
            tableMapping.ColumnMappings.Add("TglInput", "TglInput");
            tableMapping.ColumnMappings.Add("UserInput", "UserInput");
            tableMapping.ColumnMappings.Add("TglUpDate", "TglUpDate");
            tableMapping.ColumnMappings.Add("BrutoNonDiskon", "BrutoNonDiskon");
            tableMapping.ColumnMappings.Add("Nobon", "Nobon");
            tableMapping.ColumnMappings.Add("NoBon", "NoBon");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::Accounting_Solution_Software.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     KodeCbg, namaCbg, NoBon, TK, Tanggal, KodeCust, Customer, Alamat, Telp, NoSJ, Tempo, JthTempo, KdHarga, Bruto, DiskonPcnt, Diskon, PPnCara, 
                      PPnPcnt, PPn, Ongkos, Netto, Ket, Posting, UserUpDate, Bayar, ByrTunai, ByrDebit, ByrKKredit, ByrLain, TrmUang, Kembali, KKNoKartu, KKBank, 
                      KKAN, DBNoKartu, DBBank, DBAN, KetLain, Kasir, Counter, Cetak, CaraByr, AppCetak, TglInput, UserInput, TglUpDate, BrutoNonDiskon
FROM         view_jual_nobon";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Penjualan.view_jual_nobonDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Penjualan.view_jual_nobonDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Penjualan.view_jual_nobonDataTable dataTable = new Penjualan.view_jual_nobonDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(Penjualan dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(Penjualan dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(Penjualan dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(Penjualan dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591